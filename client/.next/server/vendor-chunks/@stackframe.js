"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@stackframe";
exports.ids = ["vendor-chunks/@stackframe"];
exports.modules = {

/***/ "(ssr)/./node_modules/@stackframe/stack-sc/dist/index.default.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@stackframe/stack-sc/dist/index.default.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cookies: () => (/* binding */ cookies),\n/* harmony export */   isReactServer: () => (/* binding */ isReactServer)\n/* harmony export */ });\nconst cookies = undefined;\nconst isReactServer = false;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2MvZGlzdC9pbmRleC5kZWZhdWx0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU87QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtlcnBsQUljZS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zYy9kaXN0L2luZGV4LmRlZmF1bHQuanM/NzBlMyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgY29va2llcyA9IHVuZGVmaW5lZDtcbmV4cG9ydCBjb25zdCBpc1JlYWN0U2VydmVyID0gZmFsc2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-sc/dist/index.default.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-sc/dist/index.react-server.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-sc/dist/index.react-server.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cookies: () => (/* reexport safe */ next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies),\n/* harmony export */   isReactServer: () => (/* binding */ isReactServer)\n/* harmony export */ });\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/headers */ \"(ssr)/./node_modules/next/dist/api/headers.js\");\n\nconst isReactServer = true;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2MvZGlzdC9pbmRleC5yZWFjdC1zZXJ2ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXVDO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2VycGxBSWNlLy4vbm9kZV9tb2R1bGVzL0BzdGFja2ZyYW1lL3N0YWNrLXNjL2Rpc3QvaW5kZXgucmVhY3Qtc2VydmVyLmpzPzllYjciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgY29va2llcyB9IGZyb20gJ25leHQvaGVhZGVycyc7XG5leHBvcnQgY29uc3QgaXNSZWFjdFNlcnZlciA9IHRydWU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-sc/dist/index.react-server.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/helpers/production-mode.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/helpers/production-mode.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getProductionModeErrors: () => (/* binding */ getProductionModeErrors)\n/* harmony export */ });\n/* harmony import */ var _utils_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/errors */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _utils_urls__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/urls */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/urls.js\");\n\n\nfunction getProductionModeErrors(project) {\n    const errors = [];\n    const domainsFixUrl = `/projects/${project.id}/domains`;\n    if (project.config.allow_localhost) {\n        errors.push({\n            message: \"Localhost is not allowed in production mode, turn off 'Allow localhost' in project settings\",\n            relativeFixUrl: domainsFixUrl,\n        });\n    }\n    for (const { domain } of project.config.domains) {\n        let url;\n        try {\n            url = new URL(domain);\n        }\n        catch (e) {\n            throw new _utils_errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"Domain was somehow not a valid URL; we should've caught this when setting the domain in the first place\", {\n                domain,\n                projectId: project\n            });\n        }\n        if ((0,_utils_urls__WEBPACK_IMPORTED_MODULE_1__.isLocalhost)(url)) {\n            errors.push({\n                message: \"Localhost domains are not allowed to be trusted in production mode: \" + domain,\n                relativeFixUrl: domainsFixUrl,\n            });\n        }\n        else if (url.hostname.match(/^\\d+(\\.\\d+)*$/)) {\n            errors.push({\n                message: \"Direct IPs are not valid for trusted domains in production mode: \" + domain,\n                relativeFixUrl: domainsFixUrl,\n            });\n        }\n        else if (url.protocol !== \"https:\") {\n            errors.push({\n                message: \"Trusted domains should be HTTPS: \" + domain,\n                relativeFixUrl: domainsFixUrl,\n            });\n        }\n    }\n    return errors;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvaGVscGVycy9wcm9kdWN0aW9uLW1vZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNEO0FBQ1Y7QUFDckM7QUFDUDtBQUNBLHVDQUF1QyxXQUFXO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsaUJBQWlCLFNBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw4REFBbUIsc0NBQXNDO0FBQy9FO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxZQUFZLHdEQUFXO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZXJwbEFJY2UvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvaGVscGVycy9wcm9kdWN0aW9uLW1vZGUuanM/MWJmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdGFja0Fzc2VydGlvbkVycm9yIH0gZnJvbSBcIi4uL3V0aWxzL2Vycm9yc1wiO1xuaW1wb3J0IHsgaXNMb2NhbGhvc3QgfSBmcm9tIFwiLi4vdXRpbHMvdXJsc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGdldFByb2R1Y3Rpb25Nb2RlRXJyb3JzKHByb2plY3QpIHtcbiAgICBjb25zdCBlcnJvcnMgPSBbXTtcbiAgICBjb25zdCBkb21haW5zRml4VXJsID0gYC9wcm9qZWN0cy8ke3Byb2plY3QuaWR9L2RvbWFpbnNgO1xuICAgIGlmIChwcm9qZWN0LmNvbmZpZy5hbGxvd19sb2NhbGhvc3QpIHtcbiAgICAgICAgZXJyb3JzLnB1c2goe1xuICAgICAgICAgICAgbWVzc2FnZTogXCJMb2NhbGhvc3QgaXMgbm90IGFsbG93ZWQgaW4gcHJvZHVjdGlvbiBtb2RlLCB0dXJuIG9mZiAnQWxsb3cgbG9jYWxob3N0JyBpbiBwcm9qZWN0IHNldHRpbmdzXCIsXG4gICAgICAgICAgICByZWxhdGl2ZUZpeFVybDogZG9tYWluc0ZpeFVybCxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGZvciAoY29uc3QgeyBkb21haW4gfSBvZiBwcm9qZWN0LmNvbmZpZy5kb21haW5zKSB7XG4gICAgICAgIGxldCB1cmw7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICB1cmwgPSBuZXcgVVJMKGRvbWFpbik7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBTdGFja0Fzc2VydGlvbkVycm9yKFwiRG9tYWluIHdhcyBzb21laG93IG5vdCBhIHZhbGlkIFVSTDsgd2Ugc2hvdWxkJ3ZlIGNhdWdodCB0aGlzIHdoZW4gc2V0dGluZyB0aGUgZG9tYWluIGluIHRoZSBmaXJzdCBwbGFjZVwiLCB7XG4gICAgICAgICAgICAgICAgZG9tYWluLFxuICAgICAgICAgICAgICAgIHByb2plY3RJZDogcHJvamVjdFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzTG9jYWxob3N0KHVybCkpIHtcbiAgICAgICAgICAgIGVycm9ycy5wdXNoKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIkxvY2FsaG9zdCBkb21haW5zIGFyZSBub3QgYWxsb3dlZCB0byBiZSB0cnVzdGVkIGluIHByb2R1Y3Rpb24gbW9kZTogXCIgKyBkb21haW4sXG4gICAgICAgICAgICAgICAgcmVsYXRpdmVGaXhVcmw6IGRvbWFpbnNGaXhVcmwsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh1cmwuaG9zdG5hbWUubWF0Y2goL15cXGQrKFxcLlxcZCspKiQvKSkge1xuICAgICAgICAgICAgZXJyb3JzLnB1c2goe1xuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiRGlyZWN0IElQcyBhcmUgbm90IHZhbGlkIGZvciB0cnVzdGVkIGRvbWFpbnMgaW4gcHJvZHVjdGlvbiBtb2RlOiBcIiArIGRvbWFpbixcbiAgICAgICAgICAgICAgICByZWxhdGl2ZUZpeFVybDogZG9tYWluc0ZpeFVybCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHVybC5wcm90b2NvbCAhPT0gXCJodHRwczpcIikge1xuICAgICAgICAgICAgZXJyb3JzLnB1c2goe1xuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiVHJ1c3RlZCBkb21haW5zIHNob3VsZCBiZSBIVFRQUzogXCIgKyBkb21haW4sXG4gICAgICAgICAgICAgICAgcmVsYXRpdmVGaXhVcmw6IGRvbWFpbnNGaXhVcmwsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZXJyb3JzO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/helpers/production-mode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KnownError: () => (/* reexport safe */ _known_errors__WEBPACK_IMPORTED_MODULE_3__.KnownError),\n/* harmony export */   KnownErrors: () => (/* reexport safe */ _known_errors__WEBPACK_IMPORTED_MODULE_3__.KnownErrors),\n/* harmony export */   StackAdminInterface: () => (/* reexport safe */ _interface_adminInterface__WEBPACK_IMPORTED_MODULE_0__.StackAdminInterface),\n/* harmony export */   StackClientInterface: () => (/* reexport safe */ _interface_clientInterface__WEBPACK_IMPORTED_MODULE_1__.StackClientInterface),\n/* harmony export */   StackServerInterface: () => (/* reexport safe */ _interface_serverInterface__WEBPACK_IMPORTED_MODULE_2__.StackServerInterface)\n/* harmony export */ });\n/* harmony import */ var _interface_adminInterface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interface/adminInterface */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/interface/adminInterface.js\");\n/* harmony import */ var _interface_clientInterface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interface/clientInterface */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/interface/clientInterface.js\");\n/* harmony import */ var _interface_serverInterface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interface/serverInterface */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/interface/serverInterface.js\");\n/* harmony import */ var _known_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./known-errors */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/known-errors.js\");\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQWlFO0FBQ0U7QUFDQTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2VycGxBSWNlLy4vbm9kZV9tb2R1bGVzL0BzdGFja2ZyYW1lL3N0YWNrLXNoYXJlZC9kaXN0L2luZGV4LmpzPzdkN2MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgU3RhY2tBZG1pbkludGVyZmFjZSB9IGZyb20gXCIuL2ludGVyZmFjZS9hZG1pbkludGVyZmFjZVwiO1xuZXhwb3J0IHsgU3RhY2tDbGllbnRJbnRlcmZhY2UgfSBmcm9tIFwiLi9pbnRlcmZhY2UvY2xpZW50SW50ZXJmYWNlXCI7XG5leHBvcnQgeyBTdGFja1NlcnZlckludGVyZmFjZSB9IGZyb20gXCIuL2ludGVyZmFjZS9zZXJ2ZXJJbnRlcmZhY2VcIjtcbmV4cG9ydCB7IEtub3duRXJyb3IsIEtub3duRXJyb3JzIH0gZnJvbSBcIi4va25vd24tZXJyb3JzXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/interface/adminInterface.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/interface/adminInterface.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StackAdminInterface: () => (/* binding */ StackAdminInterface)\n/* harmony export */ });\n/* harmony import */ var _serverInterface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serverInterface */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/interface/serverInterface.js\");\n\nclass StackAdminInterface extends _serverInterface__WEBPACK_IMPORTED_MODULE_0__.StackServerInterface {\n    constructor(options) {\n        super(options);\n        this.options = options;\n    }\n    async sendAdminRequest(path, options, session, requestType = \"admin\") {\n        return await this.sendServerRequest(path, {\n            ...options,\n            headers: {\n                \"x-stack-super-secret-admin-key\": \"superSecretAdminKey\" in this.options ? this.options.superSecretAdminKey : \"\",\n                ...options.headers,\n            },\n        }, session, requestType);\n    }\n    async getProject() {\n        const response = await this.sendAdminRequest(\"/projects/current\", {\n            method: \"GET\",\n        }, null);\n        return await response.json();\n    }\n    async updateProject(update) {\n        const response = await this.sendAdminRequest(\"/projects/current\", {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(update),\n        }, null);\n        return await response.json();\n    }\n    async createApiKey(options) {\n        const response = await this.sendServerRequest(\"/internal/api-keys\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(options),\n        }, null);\n        return await response.json();\n    }\n    async listApiKeys() {\n        const response = await this.sendAdminRequest(\"/internal/api-keys\", {}, null);\n        const result = await response.json();\n        return result.items;\n    }\n    async revokeApiKeyById(id) {\n        await this.sendAdminRequest(`/internal/api-keys/${id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                revoked: true,\n            }),\n        }, null);\n    }\n    async getApiKey(id, session) {\n        const response = await this.sendAdminRequest(`/internal/api-keys/${id}`, {}, session);\n        return await response.json();\n    }\n    async listEmailTemplates() {\n        const response = await this.sendAdminRequest(`/email-templates`, {}, null);\n        const result = await response.json();\n        return result.items;\n    }\n    async updateEmailTemplate(type, data) {\n        const result = await this.sendAdminRequest(`/email-templates/${type}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, null);\n        return await result.json();\n    }\n    async resetEmailTemplate(type) {\n        await this.sendAdminRequest(`/email-templates/${type}`, { method: \"DELETE\" }, null);\n    }\n    async listPermissionDefinitions() {\n        const response = await this.sendAdminRequest(`/team-permission-definitions`, {}, null);\n        const result = await response.json();\n        return result.items;\n    }\n    async createPermissionDefinition(data) {\n        const response = await this.sendAdminRequest(\"/team-permission-definitions\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, null);\n        return await response.json();\n    }\n    async updatePermissionDefinition(permissionId, data) {\n        const response = await this.sendAdminRequest(`/team-permission-definitions/${permissionId}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, null);\n        return await response.json();\n    }\n    async deletePermissionDefinition(permissionId) {\n        await this.sendAdminRequest(`/team-permission-definitions/${permissionId}`, { method: \"DELETE\" }, null);\n    }\n    async getSvixToken() {\n        const response = await this.sendAdminRequest(\"/webhooks/svix-token\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({}),\n        }, null);\n        return await response.json();\n    }\n    async deleteProject() {\n        await this.sendAdminRequest(\"/projects/current\", {\n            method: \"DELETE\",\n        }, null);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvaW50ZXJmYWNlL2FkbWluSW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlEO0FBQ2xELGtDQUFrQyxrRUFBb0I7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDZFQUE2RTtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCxHQUFHO0FBQzdEO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0EsMkVBQTJFLEdBQUcsS0FBSztBQUNuRjtBQUNBO0FBQ0E7QUFDQSwyRUFBMkU7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1RUFBdUUsS0FBSztBQUM1RTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELEtBQUssS0FBSyxrQkFBa0I7QUFDcEY7QUFDQTtBQUNBLHVGQUF1RjtBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLHFGQUFxRixhQUFhO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxvRUFBb0UsYUFBYSxLQUFLLGtCQUFrQjtBQUN4RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsbUNBQW1DO0FBQ25DLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZXJwbEFJY2UvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvaW50ZXJmYWNlL2FkbWluSW50ZXJmYWNlLmpzPzk3YTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RhY2tTZXJ2ZXJJbnRlcmZhY2UgfSBmcm9tIFwiLi9zZXJ2ZXJJbnRlcmZhY2VcIjtcbmV4cG9ydCBjbGFzcyBTdGFja0FkbWluSW50ZXJmYWNlIGV4dGVuZHMgU3RhY2tTZXJ2ZXJJbnRlcmZhY2Uge1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICAgICAgc3VwZXIob3B0aW9ucyk7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgfVxuICAgIGFzeW5jIHNlbmRBZG1pblJlcXVlc3QocGF0aCwgb3B0aW9ucywgc2Vzc2lvbiwgcmVxdWVzdFR5cGUgPSBcImFkbWluXCIpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuc2VuZFNlcnZlclJlcXVlc3QocGF0aCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICBcIngtc3RhY2stc3VwZXItc2VjcmV0LWFkbWluLWtleVwiOiBcInN1cGVyU2VjcmV0QWRtaW5LZXlcIiBpbiB0aGlzLm9wdGlvbnMgPyB0aGlzLm9wdGlvbnMuc3VwZXJTZWNyZXRBZG1pbktleSA6IFwiXCIsXG4gICAgICAgICAgICAgICAgLi4ub3B0aW9ucy5oZWFkZXJzLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSwgc2Vzc2lvbiwgcmVxdWVzdFR5cGUpO1xuICAgIH1cbiAgICBhc3luYyBnZXRQcm9qZWN0KCkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuc2VuZEFkbWluUmVxdWVzdChcIi9wcm9qZWN0cy9jdXJyZW50XCIsIHtcbiAgICAgICAgICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICAgICAgfSwgbnVsbCk7XG4gICAgICAgIHJldHVybiBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgfVxuICAgIGFzeW5jIHVwZGF0ZVByb2plY3QodXBkYXRlKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5zZW5kQWRtaW5SZXF1ZXN0KFwiL3Byb2plY3RzL2N1cnJlbnRcIiwge1xuICAgICAgICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkodXBkYXRlKSxcbiAgICAgICAgfSwgbnVsbCk7XG4gICAgICAgIHJldHVybiBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgfVxuICAgIGFzeW5jIGNyZWF0ZUFwaUtleShvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5zZW5kU2VydmVyUmVxdWVzdChcIi9pbnRlcm5hbC9hcGkta2V5c1wiLCB7XG4gICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KG9wdGlvbnMpLFxuICAgICAgICB9LCBudWxsKTtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICB9XG4gICAgYXN5bmMgbGlzdEFwaUtleXMoKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5zZW5kQWRtaW5SZXF1ZXN0KFwiL2ludGVybmFsL2FwaS1rZXlzXCIsIHt9LCBudWxsKTtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICByZXR1cm4gcmVzdWx0Lml0ZW1zO1xuICAgIH1cbiAgICBhc3luYyByZXZva2VBcGlLZXlCeUlkKGlkKSB7XG4gICAgICAgIGF3YWl0IHRoaXMuc2VuZEFkbWluUmVxdWVzdChgL2ludGVybmFsL2FwaS1rZXlzLyR7aWR9YCwge1xuICAgICAgICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgICAgIHJldm9rZWQ6IHRydWUsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgfSwgbnVsbCk7XG4gICAgfVxuICAgIGFzeW5jIGdldEFwaUtleShpZCwgc2Vzc2lvbikge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuc2VuZEFkbWluUmVxdWVzdChgL2ludGVybmFsL2FwaS1rZXlzLyR7aWR9YCwge30sIHNlc3Npb24pO1xuICAgICAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIH1cbiAgICBhc3luYyBsaXN0RW1haWxUZW1wbGF0ZXMoKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5zZW5kQWRtaW5SZXF1ZXN0KGAvZW1haWwtdGVtcGxhdGVzYCwge30sIG51bGwpO1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIHJldHVybiByZXN1bHQuaXRlbXM7XG4gICAgfVxuICAgIGFzeW5jIHVwZGF0ZUVtYWlsVGVtcGxhdGUodHlwZSwgZGF0YSkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLnNlbmRBZG1pblJlcXVlc3QoYC9lbWFpbC10ZW1wbGF0ZXMvJHt0eXBlfWAsIHtcbiAgICAgICAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpLFxuICAgICAgICB9LCBudWxsKTtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHJlc3VsdC5qc29uKCk7XG4gICAgfVxuICAgIGFzeW5jIHJlc2V0RW1haWxUZW1wbGF0ZSh0eXBlKSB7XG4gICAgICAgIGF3YWl0IHRoaXMuc2VuZEFkbWluUmVxdWVzdChgL2VtYWlsLXRlbXBsYXRlcy8ke3R5cGV9YCwgeyBtZXRob2Q6IFwiREVMRVRFXCIgfSwgbnVsbCk7XG4gICAgfVxuICAgIGFzeW5jIGxpc3RQZXJtaXNzaW9uRGVmaW5pdGlvbnMoKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5zZW5kQWRtaW5SZXF1ZXN0KGAvdGVhbS1wZXJtaXNzaW9uLWRlZmluaXRpb25zYCwge30sIG51bGwpO1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIHJldHVybiByZXN1bHQuaXRlbXM7XG4gICAgfVxuICAgIGFzeW5jIGNyZWF0ZVBlcm1pc3Npb25EZWZpbml0aW9uKGRhdGEpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLnNlbmRBZG1pblJlcXVlc3QoXCIvdGVhbS1wZXJtaXNzaW9uLWRlZmluaXRpb25zXCIsIHtcbiAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXG4gICAgICAgIH0sIG51bGwpO1xuICAgICAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIH1cbiAgICBhc3luYyB1cGRhdGVQZXJtaXNzaW9uRGVmaW5pdGlvbihwZXJtaXNzaW9uSWQsIGRhdGEpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLnNlbmRBZG1pblJlcXVlc3QoYC90ZWFtLXBlcm1pc3Npb24tZGVmaW5pdGlvbnMvJHtwZXJtaXNzaW9uSWR9YCwge1xuICAgICAgICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXG4gICAgICAgIH0sIG51bGwpO1xuICAgICAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIH1cbiAgICBhc3luYyBkZWxldGVQZXJtaXNzaW9uRGVmaW5pdGlvbihwZXJtaXNzaW9uSWQpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5zZW5kQWRtaW5SZXF1ZXN0KGAvdGVhbS1wZXJtaXNzaW9uLWRlZmluaXRpb25zLyR7cGVybWlzc2lvbklkfWAsIHsgbWV0aG9kOiBcIkRFTEVURVwiIH0sIG51bGwpO1xuICAgIH1cbiAgICBhc3luYyBnZXRTdml4VG9rZW4oKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5zZW5kQWRtaW5SZXF1ZXN0KFwiL3dlYmhvb2tzL3N2aXgtdG9rZW5cIiwge1xuICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7fSksXG4gICAgICAgIH0sIG51bGwpO1xuICAgICAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIH1cbiAgICBhc3luYyBkZWxldGVQcm9qZWN0KCkge1xuICAgICAgICBhd2FpdCB0aGlzLnNlbmRBZG1pblJlcXVlc3QoXCIvcHJvamVjdHMvY3VycmVudFwiLCB7XG4gICAgICAgICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICAgIH0sIG51bGwpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/interface/adminInterface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/interface/clientInterface.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/interface/clientInterface.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StackClientInterface: () => (/* binding */ StackClientInterface)\n/* harmony export */ });\n/* harmony import */ var oauth4webapi__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! oauth4webapi */ \"(ssr)/./node_modules/oauth4webapi/build/index.js\");\n/* harmony import */ var _stackframe_stack_sc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-sc */ \"(ssr)/./node_modules/@stackframe/stack-sc/dist/index.default.js\");\n/* harmony import */ var _known_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../known-errors */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/known-errors.js\");\n/* harmony import */ var _sessions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../sessions */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/sessions.js\");\n/* harmony import */ var _utils_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/crypto */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/crypto.js\");\n/* harmony import */ var _utils_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/errors */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _utils_globals__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/globals */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/globals.js\");\n/* harmony import */ var _utils_objects__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/objects */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/objects.js\");\n/* harmony import */ var _utils_results__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/results */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/results.js\");\n/* harmony import */ var _utils_strings__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/strings */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/strings.js\");\n\n\n\n\n\n\n\n\n\n\nclass StackClientInterface {\n    constructor(options) {\n        this.options = options;\n        // nothing here\n    }\n    get projectId() {\n        return this.options.projectId;\n    }\n    getApiUrl() {\n        return this.options.baseUrl + \"/api/v1\";\n    }\n    async runNetworkDiagnostics(session, requestType) {\n        const tryRequest = async (cb) => {\n            try {\n                await cb();\n                return \"OK\";\n            }\n            catch (e) {\n                return `${e}`;\n            }\n        };\n        const cfTrace = await tryRequest(async () => {\n            const res = await fetch(\"https://1.1.1.1/cdn-cgi/trace\");\n            if (!res.ok) {\n                throw new Error(`${res.status} ${res.statusText}: ${await res.text()}`);\n            }\n        });\n        const apiRoot = session !== undefined && requestType !== undefined ? await tryRequest(async () => {\n            const res = await this.sendClientRequestInner(\"/\", {}, session, requestType);\n            if (res.status === \"error\") {\n                throw res.error;\n            }\n        }) : \"Not tested\";\n        const baseUrlBackend = await tryRequest(async () => {\n            const res = await fetch(new URL(\"/health\", this.getApiUrl()));\n            if (!res.ok) {\n                throw new Error(`${res.status} ${res.statusText}: ${await res.text()}`);\n            }\n        });\n        const prodDashboard = await tryRequest(async () => {\n            const res = await fetch(\"https://app.stack-auth.com/health\");\n            if (!res.ok) {\n                throw new Error(`${res.status} ${res.statusText}: ${await res.text()}`);\n            }\n        });\n        const prodBackend = await tryRequest(async () => {\n            const res = await fetch(\"https://api.stack-auth.com/health\");\n            if (!res.ok) {\n                throw new Error(`${res.status} ${res.statusText}: ${await res.text()}`);\n            }\n        });\n        return {\n            \"navigator?.onLine\": _utils_globals__WEBPACK_IMPORTED_MODULE_5__.globalVar.navigator?.onLine,\n            cfTrace,\n            apiRoot,\n            baseUrlBackend,\n            prodDashboard,\n            prodBackend,\n        };\n    }\n    async _networkRetry(cb, session, requestType) {\n        const retriedResult = await _utils_results__WEBPACK_IMPORTED_MODULE_7__.Result.retry(cb, 5, { exponentialDelayBase: 1000 });\n        // try to diagnose the error for the user\n        if (retriedResult.status === \"error\") {\n            if (_utils_globals__WEBPACK_IMPORTED_MODULE_5__.globalVar.navigator && !_utils_globals__WEBPACK_IMPORTED_MODULE_5__.globalVar.navigator.onLine) {\n                throw new Error(\"Failed to send Stack network request. It seems like you are offline. (window.navigator.onLine is falsy)\", { cause: retriedResult.error });\n            }\n            throw new Error((0,_utils_strings__WEBPACK_IMPORTED_MODULE_8__.deindent) `\n        Stack is unable to connect to the server. Please check your internet connection and try again.\n        \n        If the problem persists, please contact Stack support and provide a screenshot of your entire browser console.\n\n        ${retriedResult.error}\n        \n        ${JSON.stringify(await this.runNetworkDiagnostics(session, requestType), null, 2)}\n      `, { cause: retriedResult.error });\n        }\n        return retriedResult.data;\n    }\n    async _networkRetryException(cb, session, requestType) {\n        return await this._networkRetry(async () => await _utils_results__WEBPACK_IMPORTED_MODULE_7__.Result.fromThrowingAsync(cb), session, requestType);\n    }\n    async fetchNewAccessToken(refreshToken) {\n        if (!('publishableClientKey' in this.options)) {\n            // TODO support it\n            throw new Error(\"Admin session token is currently not supported for fetching new access token. Did you try to log in on a StackApp initiated with the admin session?\");\n        }\n        const as = {\n            issuer: this.options.baseUrl,\n            algorithm: 'oauth2',\n            token_endpoint: this.getApiUrl() + '/auth/oauth/token',\n        };\n        const client = {\n            client_id: this.projectId,\n            client_secret: this.options.publishableClientKey,\n            token_endpoint_auth_method: 'client_secret_post',\n        };\n        const rawResponse = await this._networkRetryException(async () => await oauth4webapi__WEBPACK_IMPORTED_MODULE_9__.refreshTokenGrantRequest(as, client, refreshToken.token));\n        const response = await this._processResponse(rawResponse);\n        if (response.status === \"error\") {\n            const error = response.error;\n            if (error instanceof _known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.RefreshTokenError) {\n                return null;\n            }\n            throw error;\n        }\n        if (!response.data.ok) {\n            const body = await response.data.text();\n            throw new Error(`Failed to send refresh token request: ${response.status} ${body}`);\n        }\n        const result = await oauth4webapi__WEBPACK_IMPORTED_MODULE_9__.processRefreshTokenResponse(as, client, response.data);\n        if (oauth4webapi__WEBPACK_IMPORTED_MODULE_9__.isOAuth2Error(result)) {\n            // TODO Handle OAuth 2.0 response body error\n            throw new _utils_errors__WEBPACK_IMPORTED_MODULE_4__.StackAssertionError(\"OAuth error\", { result });\n        }\n        if (!result.access_token) {\n            throw new _utils_errors__WEBPACK_IMPORTED_MODULE_4__.StackAssertionError(\"Access token not found in token endpoint response, this is weird!\");\n        }\n        return new _sessions__WEBPACK_IMPORTED_MODULE_2__.AccessToken(result.access_token);\n    }\n    async sendClientRequest(path, requestOptions, session, requestType = \"client\") {\n        session ??= this.createSession({\n            refreshToken: null,\n        });\n        return await this._networkRetry(() => this.sendClientRequestInner(path, requestOptions, session, requestType), session, requestType);\n    }\n    createSession(options) {\n        const session = new _sessions__WEBPACK_IMPORTED_MODULE_2__.InternalSession({\n            refreshAccessTokenCallback: async (refreshToken) => await this.fetchNewAccessToken(refreshToken),\n            ...options,\n        });\n        return session;\n    }\n    async sendClientRequestAndCatchKnownError(path, requestOptions, tokenStoreOrNull, errorsToCatch) {\n        try {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_7__.Result.ok(await this.sendClientRequest(path, requestOptions, tokenStoreOrNull));\n        }\n        catch (e) {\n            for (const errorType of errorsToCatch) {\n                if (e instanceof errorType) {\n                    return _utils_results__WEBPACK_IMPORTED_MODULE_7__.Result.error(e);\n                }\n            }\n            throw e;\n        }\n    }\n    async sendClientRequestInner(path, options, session, requestType) {\n        /**\n         * `tokenObj === null` means the session is invalid/not logged in\n         */\n        let tokenObj = await session.getPotentiallyExpiredTokens();\n        let adminSession = \"projectOwnerSession\" in this.options ? this.options.projectOwnerSession : null;\n        let adminTokenObj = adminSession ? await adminSession.getPotentiallyExpiredTokens() : null;\n        // all requests should be dynamic to prevent Next.js caching\n        (0,_stackframe_stack_sc__WEBPACK_IMPORTED_MODULE_0__.cookies)?.();\n        const url = this.getApiUrl() + path;\n        const params = {\n            /**\n             * This fetch may be cross-origin, in which case we don't want to send cookies of the\n             * original origin (this is the default behavior of `credentials`).\n             *\n             * To help debugging, also omit cookies on same-origin, so we don't accidentally\n             * implement reliance on cookies anywhere.\n             *\n             * However, Cloudflare Workers don't actually support `credentials`, so we only set it\n             * if Cloudflare-exclusive globals are not detected. https://github.com/cloudflare/workers-sdk/issues/2514\n             */\n            ...(\"WebSocketPair\" in _utils_globals__WEBPACK_IMPORTED_MODULE_5__.globalVar ? {} : {\n                credentials: \"omit\",\n            }),\n            ...options,\n            headers: {\n                \"X-Stack-Override-Error-Status\": \"true\",\n                \"X-Stack-Project-Id\": this.projectId,\n                \"X-Stack-Access-Type\": requestType,\n                \"X-Stack-Client-Version\": this.options.clientVersion,\n                ...(tokenObj ? {\n                    \"X-Stack-Access-Token\": tokenObj.accessToken.token,\n                } : {}),\n                ...(tokenObj?.refreshToken ? {\n                    \"X-Stack-Refresh-Token\": tokenObj.refreshToken.token,\n                } : {}),\n                ...('publishableClientKey' in this.options ? {\n                    \"X-Stack-Publishable-Client-Key\": this.options.publishableClientKey,\n                } : {}),\n                ...(adminTokenObj ? {\n                    \"X-Stack-Admin-Access-Token\": adminTokenObj.accessToken.token,\n                } : {}),\n                /**\n                 * Next.js until v15 would cache fetch requests by default, and forcefully disabling it was nearly impossible.\n                 *\n                 * This header is used to change the cache key and hence always disable it, because we do our own caching.\n                 *\n                 * When we drop support for Next.js <15, we may be able to remove this header, but please make sure that this is\n                 * the case (I haven't actually tested.)\n                 */\n                \"X-Stack-Random-Nonce\": (0,_utils_crypto__WEBPACK_IMPORTED_MODULE_3__.generateSecureRandomString)(),\n                ...options.headers,\n            },\n            /**\n             * Cloudflare Workers does not support cache, so don't pass it there\n             */\n            ...(\"WebSocketPair\" in _utils_globals__WEBPACK_IMPORTED_MODULE_5__.globalVar ? {} : {\n                cache: \"no-store\",\n            }),\n        };\n        let rawRes;\n        try {\n            rawRes = await fetch(url, params);\n        }\n        catch (e) {\n            if (e instanceof TypeError) {\n                // Network error, retry\n                return _utils_results__WEBPACK_IMPORTED_MODULE_7__.Result.error(e);\n            }\n            throw e;\n        }\n        const processedRes = await this._processResponse(rawRes);\n        if (processedRes.status === \"error\") {\n            // If the access token is invalid, reset it and retry\n            if (processedRes.error instanceof _known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.InvalidAccessToken) {\n                if (!tokenObj) {\n                    throw new _utils_errors__WEBPACK_IMPORTED_MODULE_4__.StackAssertionError(\"Received invalid access token, but session is not logged in\", { tokenObj, processedRes });\n                }\n                session.markAccessTokenExpired(tokenObj.accessToken);\n                return _utils_results__WEBPACK_IMPORTED_MODULE_7__.Result.error(processedRes.error);\n            }\n            // Same for the admin access token\n            // TODO HACK: Some of the backend hasn't been ported to use the new error codes, so if we have project owner tokens we need to check for ApiKeyNotFound too. Once the migration to smartRouteHandlers is complete, we can check for InvalidAdminAccessToken only.\n            if (adminSession && (processedRes.error instanceof _known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.InvalidAdminAccessToken || processedRes.error instanceof _known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.ApiKeyNotFound)) {\n                if (!adminTokenObj) {\n                    throw new _utils_errors__WEBPACK_IMPORTED_MODULE_4__.StackAssertionError(\"Received invalid admin access token, but admin session is not logged in\", { adminTokenObj, processedRes });\n                }\n                adminSession.markAccessTokenExpired(adminTokenObj.accessToken);\n                return _utils_results__WEBPACK_IMPORTED_MODULE_7__.Result.error(processedRes.error);\n            }\n            // Known errors are client side errors, so except for the ones above they should not be retried\n            // Hence, throw instead of returning an error\n            throw processedRes.error;\n        }\n        const res = Object.assign(processedRes.data, {\n            usedTokens: tokenObj,\n        });\n        if (res.ok) {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_7__.Result.ok(res);\n        }\n        else {\n            const error = await res.text();\n            // Do not retry, throw error instead of returning one\n            throw new _utils_errors__WEBPACK_IMPORTED_MODULE_4__.StackAssertionError(`Failed to send request to ${url}: ${res.status} ${error}`, { request: params, res });\n        }\n    }\n    async _processResponse(rawRes) {\n        let res = rawRes;\n        if (rawRes.headers.has(\"x-stack-actual-status\")) {\n            const actualStatus = Number(rawRes.headers.get(\"x-stack-actual-status\"));\n            res = new Response(rawRes.body, {\n                status: actualStatus,\n                statusText: rawRes.statusText,\n                headers: rawRes.headers,\n            });\n        }\n        // Handle known errors\n        if (res.headers.has(\"x-stack-known-error\")) {\n            const errorJson = await res.json();\n            if (res.headers.get(\"x-stack-known-error\") !== errorJson.code) {\n                throw new _utils_errors__WEBPACK_IMPORTED_MODULE_4__.StackAssertionError(\"Mismatch between x-stack-known-error header and error code in body; the server's response is invalid\");\n            }\n            const error = _known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownError.fromJson(errorJson);\n            return _utils_results__WEBPACK_IMPORTED_MODULE_7__.Result.error(error);\n        }\n        return _utils_results__WEBPACK_IMPORTED_MODULE_7__.Result.ok(res);\n    }\n    async checkFeatureSupport(options) {\n        const res = await this.sendClientRequest(\"/check-feature-support\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(options),\n        }, null);\n        throw new _utils_errors__WEBPACK_IMPORTED_MODULE_4__.StackAssertionError(await res.text());\n    }\n    async sendForgotPasswordEmail(email, callbackUrl) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/auth/password/send-reset-code\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email,\n                callback_url: callbackUrl,\n            }),\n        }, null, [_known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.UserNotFound]);\n        if (res.status === \"error\") {\n            return res.error;\n        }\n    }\n    async sendVerificationEmail(email, callbackUrl, session) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/contact-channels/send-verification-code\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email,\n                callback_url: callbackUrl,\n            }),\n        }, session, [_known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.EmailAlreadyVerified]);\n        if (res.status === \"error\") {\n            return res.error;\n        }\n    }\n    async sendMagicLinkEmail(email, callbackUrl) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/auth/otp/send-sign-in-code\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email,\n                callback_url: callbackUrl,\n            }),\n        }, null, [_known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.RedirectUrlNotWhitelisted]);\n        if (res.status === \"error\") {\n            return res.error;\n        }\n    }\n    async resetPassword(options) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"onlyVerifyCode\" in options ? \"/auth/password/reset/check-code\" : \"/auth/password/reset\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                code: options.code,\n                ...(\"password\" in options ? { password: options.password } : {}),\n            }),\n        }, null, [_known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.VerificationCodeError]);\n        if (res.status === \"error\") {\n            return res.error;\n        }\n    }\n    async updatePassword(options, session) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/auth/password/update\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                old_password: options.oldPassword,\n                new_password: options.newPassword,\n            }),\n        }, session, [_known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.PasswordConfirmationMismatch, _known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.PasswordRequirementsNotMet]);\n        if (res.status === \"error\") {\n            return res.error;\n        }\n    }\n    async verifyPasswordResetCode(code) {\n        const res = await this.resetPassword({ code, onlyVerifyCode: true });\n        if (res && !(res instanceof _known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.VerificationCodeError)) {\n            throw res;\n        }\n        return res;\n    }\n    async verifyEmail(code) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/contact-channels/verify\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                code,\n            }),\n        }, null, [_known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.VerificationCodeError]);\n        if (res.status === \"error\") {\n            return res.error;\n        }\n    }\n    async sendTeamInvitation(options) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/team-invitations/send-code\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email: options.email,\n                team_id: options.teamId,\n                callback_url: options.callbackUrl,\n            }),\n        }, options.session, [_known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.TeamPermissionRequired]);\n        if (res.status === \"error\") {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_7__.Result.error(res.error);\n        }\n        else {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_7__.Result.ok(undefined);\n        }\n    }\n    async acceptTeamInvitation(options) {\n        const res = await this.sendClientRequestAndCatchKnownError(options.type === 'check' ?\n            \"/team-invitations/accept/check-code\" :\n            options.type === 'details' ?\n                \"/team-invitations/accept/details\" :\n                \"/team-invitations/accept\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                code: options.code,\n            }),\n        }, options.session, [_known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.VerificationCodeError]);\n        if (res.status === \"error\") {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_7__.Result.error(res.error);\n        }\n        else {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_7__.Result.ok(await res.data.json());\n        }\n    }\n    async totpMfa(attemptCode, totp, session) {\n        const res = await this.sendClientRequest(\"/auth/mfa/sign-in\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                code: attemptCode,\n                type: \"totp\",\n                totp: totp,\n            }),\n        }, session);\n        const result = await res.json();\n        return {\n            accessToken: result.access_token,\n            refreshToken: result.refresh_token,\n            newUser: result.is_new_user,\n        };\n    }\n    async signInWithCredential(email, password, session) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/auth/password/sign-in\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email,\n                password,\n            }),\n        }, session, [_known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.EmailPasswordMismatch]);\n        if (res.status === \"error\") {\n            return res.error;\n        }\n        const result = await res.data.json();\n        return {\n            accessToken: result.access_token,\n            refreshToken: result.refresh_token,\n        };\n    }\n    async signUpWithCredential(email, password, emailVerificationRedirectUrl, session) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/auth/password/sign-up\", {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            method: \"POST\",\n            body: JSON.stringify({\n                email,\n                password,\n                verification_callback_url: emailVerificationRedirectUrl,\n            }),\n        }, session, [_known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.UserEmailAlreadyExists, _known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.PasswordRequirementsNotMet]);\n        if (res.status === \"error\") {\n            return res.error;\n        }\n        const result = await res.data.json();\n        return {\n            accessToken: result.access_token,\n            refreshToken: result.refresh_token,\n        };\n    }\n    async signInWithMagicLink(code) {\n        const res = await this.sendClientRequestAndCatchKnownError(\"/auth/otp/sign-in\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                code,\n            }),\n        }, null, [_known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.VerificationCodeError]);\n        if (res.status === \"error\") {\n            return res.error;\n        }\n        const result = await res.data.json();\n        return {\n            accessToken: result.access_token,\n            refreshToken: result.refresh_token,\n            newUser: result.is_new_user,\n        };\n    }\n    async getOAuthUrl(options) {\n        const updatedRedirectUrl = new URL(options.redirectUrl);\n        for (const key of [\"code\", \"state\"]) {\n            if (updatedRedirectUrl.searchParams.has(key)) {\n                console.warn(\"Redirect URL already contains \" + key + \" parameter, removing it as it will be overwritten by the OAuth callback\");\n            }\n            updatedRedirectUrl.searchParams.delete(key);\n        }\n        if (!('publishableClientKey' in this.options)) {\n            // TODO fix\n            throw new Error(\"Admin session token is currently not supported for OAuth\");\n        }\n        const url = new URL(this.getApiUrl() + \"/auth/oauth/authorize/\" + options.provider.toLowerCase());\n        url.searchParams.set(\"client_id\", this.projectId);\n        url.searchParams.set(\"client_secret\", this.options.publishableClientKey);\n        url.searchParams.set(\"redirect_uri\", updatedRedirectUrl.toString());\n        url.searchParams.set(\"scope\", \"legacy\");\n        url.searchParams.set(\"state\", options.state);\n        url.searchParams.set(\"grant_type\", \"authorization_code\");\n        url.searchParams.set(\"code_challenge\", options.codeChallenge);\n        url.searchParams.set(\"code_challenge_method\", \"S256\");\n        url.searchParams.set(\"response_type\", \"code\");\n        url.searchParams.set(\"type\", options.type);\n        url.searchParams.set(\"error_redirect_url\", options.errorRedirectUrl);\n        if (options.afterCallbackRedirectUrl) {\n            url.searchParams.set(\"after_callback_redirect_url\", options.afterCallbackRedirectUrl);\n        }\n        if (options.type === \"link\") {\n            const tokens = await options.session.getPotentiallyExpiredTokens();\n            url.searchParams.set(\"token\", tokens?.accessToken.token || \"\");\n            if (options.providerScope) {\n                url.searchParams.set(\"provider_scope\", options.providerScope);\n            }\n        }\n        return url.toString();\n    }\n    async callOAuthCallback(options) {\n        if (!('publishableClientKey' in this.options)) {\n            // TODO fix\n            throw new Error(\"Admin session token is currently not supported for OAuth\");\n        }\n        const as = {\n            issuer: this.options.baseUrl,\n            algorithm: 'oauth2',\n            token_endpoint: this.getApiUrl() + '/auth/oauth/token',\n        };\n        const client = {\n            client_id: this.projectId,\n            client_secret: this.options.publishableClientKey,\n            token_endpoint_auth_method: 'client_secret_post',\n        };\n        const params = await this._networkRetryException(async () => oauth4webapi__WEBPACK_IMPORTED_MODULE_9__.validateAuthResponse(as, client, options.oauthParams, options.state));\n        if (oauth4webapi__WEBPACK_IMPORTED_MODULE_9__.isOAuth2Error(params)) {\n            throw new _utils_errors__WEBPACK_IMPORTED_MODULE_4__.StackAssertionError(\"Error validating outer OAuth response\", { params }); // Handle OAuth 2.0 redirect error\n        }\n        const response = await oauth4webapi__WEBPACK_IMPORTED_MODULE_9__.authorizationCodeGrantRequest(as, client, params, options.redirectUri, options.codeVerifier);\n        const result = await oauth4webapi__WEBPACK_IMPORTED_MODULE_9__.processAuthorizationCodeOAuth2Response(as, client, response);\n        if (oauth4webapi__WEBPACK_IMPORTED_MODULE_9__.isOAuth2Error(result)) {\n            if (\"code\" in result && result.code === \"MULTI_FACTOR_AUTHENTICATION_REQUIRED\") {\n                throw new _known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.MultiFactorAuthenticationRequired(result.details.attempt_code);\n            }\n            // TODO Handle OAuth 2.0 response body error\n            throw new _utils_errors__WEBPACK_IMPORTED_MODULE_4__.StackAssertionError(\"Outer OAuth error during authorization code response\", { result });\n        }\n        return {\n            newUser: result.is_new_user,\n            afterCallbackRedirectUrl: result.after_callback_redirect_url,\n            accessToken: result.access_token,\n            refreshToken: result.refresh_token ?? (0,_utils_errors__WEBPACK_IMPORTED_MODULE_4__.throwErr)(\"Refresh token not found in outer OAuth response\"),\n        };\n    }\n    async signOut(session) {\n        const tokenObj = await session.getPotentiallyExpiredTokens();\n        if (tokenObj) {\n            const resOrError = await this.sendClientRequestAndCatchKnownError(\"/auth/sessions/current\", {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({}),\n            }, session, [_known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.RefreshTokenError]);\n            if (resOrError.status === \"error\") {\n                if (resOrError.error instanceof _known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.RefreshTokenError) {\n                    // refresh token was already invalid, just continue like nothing happened\n                }\n                else {\n                    // this should never happen\n                    throw new _utils_errors__WEBPACK_IMPORTED_MODULE_4__.StackAssertionError(\"Unexpected error\", { error: resOrError.error });\n                }\n            }\n            else {\n                // user was signed out successfully, all good\n            }\n        }\n        session.markInvalid();\n    }\n    async getClientUserByToken(session) {\n        const responseOrError = await this.sendClientRequestAndCatchKnownError(\"/users/me\", {}, session, [_known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.CannotGetOwnUserWithoutUser]);\n        if (responseOrError.status === \"error\") {\n            if (responseOrError.error instanceof _known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.CannotGetOwnUserWithoutUser) {\n                return null;\n            }\n            else {\n                throw new _utils_errors__WEBPACK_IMPORTED_MODULE_4__.StackAssertionError(\"Unexpected uncaught error\", { cause: responseOrError.error });\n            }\n        }\n        const response = responseOrError.data;\n        const user = await response.json();\n        if (!user)\n            throw new _utils_errors__WEBPACK_IMPORTED_MODULE_4__.StackAssertionError(\"User endpoint returned null; this should never happen\");\n        return user;\n    }\n    async listTeamMemberProfiles(options, session) {\n        const response = await this.sendClientRequest(\"/team-member-profiles?\" + new URLSearchParams((0,_utils_objects__WEBPACK_IMPORTED_MODULE_6__.filterUndefined)({\n            team_id: options.teamId,\n            user_id: options.userId,\n        })), {}, session);\n        const result = await response.json();\n        return result.items;\n    }\n    async getTeamMemberProfile(options, session) {\n        const response = await this.sendClientRequest(`/team-member-profiles/${options.teamId}/${options.userId}`, {}, session);\n        return await response.json();\n    }\n    async leaveTeam(teamId, session) {\n        await this.sendClientRequest(`/team-memberships/${teamId}/me`, {\n            method: \"DELETE\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({}),\n        }, session);\n    }\n    async updateTeamMemberProfile(options, session) {\n        await this.sendClientRequest(`/team-member-profiles/${options.teamId}/${options.userId}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(options.profile),\n        }, session);\n    }\n    async updateTeam(options, session) {\n        await this.sendClientRequest(`/teams/${options.teamId}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(options.data),\n        }, session);\n    }\n    async listCurrentUserTeamPermissions(options, session) {\n        const response = await this.sendClientRequest(`/team-permissions?team_id=${options.teamId}&user_id=me&recursive=${options.recursive}`, {}, session);\n        const result = await response.json();\n        return result.items;\n    }\n    async listCurrentUserTeams(session) {\n        const response = await this.sendClientRequest(\"/teams?user_id=me\", {}, session);\n        const result = await response.json();\n        return result.items;\n    }\n    async getClientProject() {\n        const responseOrError = await this.sendClientRequestAndCatchKnownError(\"/projects/current\", {}, null, [_known_errors__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.ProjectNotFound]);\n        if (responseOrError.status === \"error\") {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_7__.Result.error(responseOrError.error);\n        }\n        const response = responseOrError.data;\n        const project = await response.json();\n        return _utils_results__WEBPACK_IMPORTED_MODULE_7__.Result.ok(project);\n    }\n    async updateClientUser(update, session) {\n        await this.sendClientRequest(\"/users/me\", {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(update),\n        }, session);\n    }\n    async listProjects(session) {\n        const response = await this.sendClientRequest(\"/internal/projects\", {}, session);\n        if (!response.ok) {\n            throw new Error(\"Failed to list projects: \" + response.status + \" \" + (await response.text()));\n        }\n        const json = await response.json();\n        return json.items;\n    }\n    async createProject(project, session) {\n        const fetchResponse = await this.sendClientRequest(\"/internal/projects\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(project),\n        }, session);\n        if (!fetchResponse.ok) {\n            throw new Error(\"Failed to create project: \" + fetchResponse.status + \" \" + (await fetchResponse.text()));\n        }\n        const json = await fetchResponse.json();\n        return json;\n    }\n    async createProviderAccessToken(provider, scope, session) {\n        const response = await this.sendClientRequest(`/connected-accounts/me/${provider}/access-token`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({ scope }),\n        }, session);\n        return await response.json();\n    }\n    async createTeamForCurrentUser(data, session) {\n        const response = await this.sendClientRequest(\"/teams?add_current_user=true\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, session);\n        return await response.json();\n    }\n    async deleteCurrentUser(session) {\n        await this.sendClientRequest(\"/users/me\", {\n            method: \"DELETE\",\n        }, session);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/interface/clientInterface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/interface/serverInterface.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/interface/serverInterface.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StackServerInterface: () => (/* binding */ StackServerInterface)\n/* harmony export */ });\n/* harmony import */ var _known_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../known-errors */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/known-errors.js\");\n/* harmony import */ var _utils_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/errors */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _utils_objects__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/objects */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/objects.js\");\n/* harmony import */ var _utils_results__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/results */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/results.js\");\n/* harmony import */ var _clientInterface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./clientInterface */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/interface/clientInterface.js\");\n\n\n\n\n\nclass StackServerInterface extends _clientInterface__WEBPACK_IMPORTED_MODULE_4__.StackClientInterface {\n    constructor(options) {\n        super(options);\n        this.options = options;\n    }\n    async sendServerRequest(path, options, session, requestType = \"server\") {\n        return await this.sendClientRequest(path, {\n            ...options,\n            headers: {\n                \"x-stack-secret-server-key\": \"secretServerKey\" in this.options ? this.options.secretServerKey : \"\",\n                ...options.headers,\n            },\n        }, session, requestType);\n    }\n    async sendServerRequestAndCatchKnownError(path, requestOptions, tokenStoreOrNull, errorsToCatch) {\n        try {\n            return _utils_results__WEBPACK_IMPORTED_MODULE_3__.Result.ok(await this.sendServerRequest(path, requestOptions, tokenStoreOrNull));\n        }\n        catch (e) {\n            for (const errorType of errorsToCatch) {\n                if (e instanceof errorType) {\n                    return _utils_results__WEBPACK_IMPORTED_MODULE_3__.Result.error(e);\n                }\n            }\n            throw e;\n        }\n    }\n    async createServerUser(data) {\n        const response = await this.sendServerRequest(\"/users\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, null);\n        return await response.json();\n    }\n    async getServerUserByToken(session) {\n        const responseOrError = await this.sendServerRequestAndCatchKnownError(\"/users/me\", {}, session, [_known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.CannotGetOwnUserWithoutUser]);\n        if (responseOrError.status === \"error\") {\n            if (responseOrError.error instanceof _known_errors__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.CannotGetOwnUserWithoutUser) {\n                return null;\n            }\n            else {\n                throw new _utils_errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"Unexpected uncaught error\", { cause: responseOrError.error });\n            }\n        }\n        const response = responseOrError.data;\n        const user = await response.json();\n        if (!user)\n            throw new _utils_errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"User endpoint returned null; this should never happen\");\n        return user;\n    }\n    async getServerUserById(userId) {\n        const response = await this.sendServerRequest(`/users/${userId}`, {}, null);\n        const user = await response.json();\n        if (!user)\n            return _utils_results__WEBPACK_IMPORTED_MODULE_3__.Result.error(new Error(\"Failed to get user\"));\n        return _utils_results__WEBPACK_IMPORTED_MODULE_3__.Result.ok(user);\n    }\n    async listServerTeamMemberProfiles(options) {\n        const response = await this.sendServerRequest(\"/team-member-profiles?team_id=\" + options.teamId, {}, null);\n        const result = await response.json();\n        return result.items;\n    }\n    async getServerTeamMemberProfile(options) {\n        const response = await this.sendServerRequest(`/team-member-profiles/${options.teamId}/${options.userId}`, {}, null);\n        return await response.json();\n    }\n    async listServerTeamPermissions(options, session) {\n        const response = await this.sendServerRequest(\"/team-permissions?\" + new URLSearchParams((0,_utils_objects__WEBPACK_IMPORTED_MODULE_2__.filterUndefined)({\n            user_id: options.userId,\n            team_id: options.teamId,\n            recursive: options.recursive.toString(),\n        })), {}, session);\n        const result = await response.json();\n        return result.items;\n    }\n    async listServerUsers() {\n        const response = await this.sendServerRequest(\"/users\", {}, null);\n        const result = await response.json();\n        return result.items;\n    }\n    async listServerTeams(options) {\n        const response = await this.sendServerRequest(\"/teams?\" + new URLSearchParams((0,_utils_objects__WEBPACK_IMPORTED_MODULE_2__.filterUndefined)({\n            user_id: options?.userId,\n        })), {}, null);\n        const result = await response.json();\n        return result.items;\n    }\n    async listServerTeamUsers(teamId) {\n        const response = await this.sendServerRequest(`/users?team_id=${teamId}`, {}, null);\n        const result = await response.json();\n        return result.items;\n    }\n    /* when passing a session, the user will be added to the team */\n    async createServerTeam(data, session) {\n        const response = await this.sendServerRequest(\"/teams\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, session || null);\n        return await response.json();\n    }\n    async updateServerTeam(teamId, data) {\n        const response = await this.sendServerRequest(`/teams/${teamId}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        }, null);\n        return await response.json();\n    }\n    async deleteServerTeam(teamId) {\n        await this.sendServerRequest(`/teams/${teamId}`, { method: \"DELETE\" }, null);\n    }\n    async addServerUserToTeam(options) {\n        const response = await this.sendServerRequest(`/team-memberships/${options.teamId}/${options.userId}`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({}),\n        }, null);\n        return await response.json();\n    }\n    async removeServerUserFromTeam(options) {\n        await this.sendServerRequest(`/team-memberships/${options.teamId}/${options.userId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({}),\n        }, null);\n    }\n    async updateServerUser(userId, update) {\n        const response = await this.sendServerRequest(`/users/${userId}`, {\n            method: \"PATCH\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify(update),\n        }, null);\n        return await response.json();\n    }\n    async createServerProviderAccessToken(userId, provider, scope) {\n        const response = await this.sendServerRequest(`/connected-accounts/${userId}/${provider}/access-token`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({ scope }),\n        }, null);\n        return await response.json();\n    }\n    async createServerUserSession(userId, expiresInMillis) {\n        const response = await this.sendServerRequest(\"/auth/sessions\", {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                user_id: userId,\n                expires_in_millis: expiresInMillis,\n            }),\n        }, null);\n        const result = await response.json();\n        return {\n            accessToken: result.access_token,\n            refreshToken: result.refresh_token,\n        };\n    }\n    async leaveServerTeam(options) {\n        await this.sendClientRequest(`/team-memberships/${options.teamId}/${options.userId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({}),\n        }, null);\n    }\n    async grantServerTeamUserPermission(teamId, userId, permissionId) {\n        await this.sendServerRequest(`/team-permissions/${teamId}/${userId}/${permissionId}`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({}),\n        }, null);\n    }\n    async revokeServerTeamUserPermission(teamId, userId, permissionId) {\n        await this.sendServerRequest(`/team-permissions/${teamId}/${userId}/${permissionId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({}),\n        }, null);\n    }\n    async deleteServerServerUser(userId) {\n        await this.sendServerRequest(`/users/${userId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({}),\n        }, null);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/interface/serverInterface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/known-errors.js":
/*!********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/known-errors.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KnownError: () => (/* binding */ KnownError),\n/* harmony export */   KnownErrors: () => (/* binding */ KnownErrors)\n/* harmony export */ });\n/* harmony import */ var _utils_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/errors */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _utils_functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/functions */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/functions.js\");\n/* harmony import */ var _utils_strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/strings */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/strings.js\");\n\n\n\nclass KnownError extends _utils_errors__WEBPACK_IMPORTED_MODULE_0__.StatusError {\n    constructor(statusCode, humanReadableMessage, details) {\n        super(statusCode, humanReadableMessage);\n        this.statusCode = statusCode;\n        this.humanReadableMessage = humanReadableMessage;\n        this.details = details;\n        this.name = \"KnownError\";\n    }\n    getBody() {\n        return new TextEncoder().encode(JSON.stringify(this.toDescriptiveJson(), undefined, 2));\n    }\n    getHeaders() {\n        return {\n            \"Content-Type\": [\"application/json; charset=utf-8\"],\n            \"X-Stack-Known-Error\": [this.errorCode],\n        };\n    }\n    toDescriptiveJson() {\n        return {\n            code: this.errorCode,\n            ...this.details ? { details: this.details } : {},\n            error: this.humanReadableMessage,\n        };\n    }\n    get errorCode() {\n        return this.constructor.errorCode ?? (0,_utils_errors__WEBPACK_IMPORTED_MODULE_0__.throwErr)(`Can't find error code for this KnownError. Is its constructor a KnownErrorConstructor? ${this}`);\n    }\n    static constructorArgsFromJson(json) {\n        return [\n            400,\n            json.message,\n            json,\n        ];\n    }\n    static fromJson(json) {\n        for (const [_, KnownErrorType] of Object.entries(KnownErrors)) {\n            if (json.code === KnownErrorType.prototype.errorCode) {\n                const constructorArgs = KnownErrorType.constructorArgsFromJson(json);\n                return new KnownErrorType(\n                // @ts-expect-error\n                ...constructorArgs);\n            }\n        }\n        throw new Error(`Unknown KnownError code. You may need to update your version of Stack to see more detailed information. ${json.code}: ${json.message}`);\n    }\n}\nconst knownErrorConstructorErrorCodeSentinel = Symbol(\"knownErrorConstructorErrorCodeSentinel\");\nfunction createKnownErrorConstructor(SuperClass, errorCode, create, constructorArgsFromJson) {\n    const createFn = create === \"inherit\" ? _utils_functions__WEBPACK_IMPORTED_MODULE_1__.identityArgs : create;\n    const constructorArgsFromJsonFn = constructorArgsFromJson === \"inherit\" ? SuperClass.constructorArgsFromJson : constructorArgsFromJson;\n    // @ts-expect-error this is not a mixin, but TS detects it as one\n    class KnownErrorImpl extends SuperClass {\n        constructor(...args) {\n            // @ts-expect-error\n            super(...createFn(...args));\n            this.name = `KnownError<${errorCode}>`;\n            this.constructorArgs = args;\n        }\n        static constructorArgsFromJson(json) {\n            return constructorArgsFromJsonFn(json.details);\n        }\n    }\n    KnownErrorImpl.errorCode = errorCode;\n    ;\n    // @ts-expect-error\n    return KnownErrorImpl;\n}\nconst UnsupportedError = createKnownErrorConstructor(KnownError, \"UNSUPPORTED_ERROR\", (originalErrorCode) => [\n    500,\n    `An error occurred that is not currently supported (possibly because it was added in a version of Stack that is newer than this client). The original unsupported error code was: ${originalErrorCode}`,\n    {\n        originalErrorCode,\n    },\n], (json) => [\n    json?.originalErrorCode ?? (0,_utils_errors__WEBPACK_IMPORTED_MODULE_0__.throwErr)(\"originalErrorCode not found in UnsupportedError details\"),\n]);\nconst BodyParsingError = createKnownErrorConstructor(KnownError, \"BODY_PARSING_ERROR\", (message) => [\n    400,\n    message,\n], (json) => [json.message]);\nconst SchemaError = createKnownErrorConstructor(KnownError, \"SCHEMA_ERROR\", (message) => [\n    400,\n    message || (0,_utils_errors__WEBPACK_IMPORTED_MODULE_0__.throwErr)(\"SchemaError requires a message\"),\n    {\n        message,\n    },\n], (json) => [json.message]);\nconst AllOverloadsFailed = createKnownErrorConstructor(KnownError, \"ALL_OVERLOADS_FAILED\", (overloadErrors) => [\n    400,\n    (0,_utils_strings__WEBPACK_IMPORTED_MODULE_2__.deindent) `\n      This endpoint has multiple overloads, but they all failed to process the request.\n\n        ${overloadErrors.map((e, i) => (0,_utils_strings__WEBPACK_IMPORTED_MODULE_2__.deindent) `\n          Overload ${i + 1}: ${JSON.stringify(e, undefined, 2)}\n        `).join(\"\\n\\n\")}\n    `,\n    {\n        overload_errors: overloadErrors,\n    },\n], (json) => [\n    json?.overload_errors ?? (0,_utils_errors__WEBPACK_IMPORTED_MODULE_0__.throwErr)(\"overload_errors not found in AllOverloadsFailed details\"),\n]);\nconst ProjectAuthenticationError = createKnownErrorConstructor(KnownError, \"PROJECT_AUTHENTICATION_ERROR\", \"inherit\", \"inherit\");\nconst InvalidProjectAuthentication = createKnownErrorConstructor(ProjectAuthenticationError, \"INVALID_PROJECT_AUTHENTICATION\", \"inherit\", \"inherit\");\n// TODO next-release: delete deprecated error type\n/**\n * @deprecated Use ProjectKeyWithoutAccessType instead\n */\nconst ProjectKeyWithoutRequestType = createKnownErrorConstructor(InvalidProjectAuthentication, \"PROJECT_KEY_WITHOUT_REQUEST_TYPE\", () => [\n    400,\n    \"Either an API key or an admin access token was provided, but the x-stack-access-type header is missing. Set it to 'client', 'server', or 'admin' as appropriate.\",\n], () => []);\n// TODO next-release: delete deprecated error type\n/**\n * @deprecated Use InvalidAccessType instead\n */\nconst InvalidRequestType = createKnownErrorConstructor(InvalidProjectAuthentication, \"INVALID_REQUEST_TYPE\", (requestType) => [\n    400,\n    `The x-stack-access-type header must be 'client', 'server', or 'admin', but was '${requestType}'.`,\n], (json) => [\n    json?.requestType ?? (0,_utils_errors__WEBPACK_IMPORTED_MODULE_0__.throwErr)(\"requestType not found in InvalidRequestType details\"),\n]);\n// TODO next-release: delete deprecated error type\n/**\n * @deprecated Use AccessTypeWithoutProjectId instead\n */\nconst RequestTypeWithoutProjectId = createKnownErrorConstructor(InvalidProjectAuthentication, \"REQUEST_TYPE_WITHOUT_PROJECT_ID\", (requestType) => [\n    400,\n    `The x-stack-access-type header was '${requestType}', but the x-stack-project-id header was not provided.`,\n    {\n        request_type: requestType,\n    },\n], (json) => [json.request_type]);\nconst ProjectKeyWithoutAccessType = createKnownErrorConstructor(InvalidProjectAuthentication, \"PROJECT_KEY_WITHOUT_ACCESS_TYPE\", () => [\n    400,\n    \"Either an API key or an admin access token was provided, but the x-stack-access-type header is missing. Set it to 'client', 'server', or 'admin' as appropriate.\",\n], () => []);\nconst InvalidAccessType = createKnownErrorConstructor(InvalidProjectAuthentication, \"INVALID_ACCESS_TYPE\", (accessType) => [\n    400,\n    `The x-stack-access-type header must be 'client', 'server', or 'admin', but was '${accessType}'.`,\n], (json) => [\n    json?.accessType ?? (0,_utils_errors__WEBPACK_IMPORTED_MODULE_0__.throwErr)(\"accessType not found in InvalidAccessType details\"),\n]);\nconst AccessTypeWithoutProjectId = createKnownErrorConstructor(InvalidProjectAuthentication, \"ACCESS_TYPE_WITHOUT_PROJECT_ID\", (accessType) => [\n    400,\n    (0,_utils_strings__WEBPACK_IMPORTED_MODULE_2__.deindent) `\n      The x-stack-access-type header was '${accessType}', but the x-stack-project-id header was not provided.\n      \n      For more information, see the docs on REST API authentication: https://docs.stack-auth.com/rest-api/auth#authentication\n    `,\n    {\n        request_type: accessType,\n    },\n], (json) => [json.request_type]);\nconst AccessTypeRequired = createKnownErrorConstructor(InvalidProjectAuthentication, \"ACCESS_TYPE_REQUIRED\", () => [\n    400,\n    (0,_utils_strings__WEBPACK_IMPORTED_MODULE_2__.deindent) `\n      You must specify an access level for this Stack project. Make sure project API keys are provided (eg. x-stack-publishable-client-key) and you set the x-stack-access-type header to 'client', 'server', or 'admin'.\n      \n      For more information, see the docs on REST API authentication: https://docs.stack-auth.com/rest-api/auth#authentication\n    `,\n], () => []);\nconst InsufficientAccessType = createKnownErrorConstructor(InvalidProjectAuthentication, \"INSUFFICIENT_ACCESS_TYPE\", (actualAccessType, allowedAccessTypes) => [\n    401,\n    `The x-stack-access-type header must be ${allowedAccessTypes.map(s => `'${s}'`).join(\" or \")}, but was '${actualAccessType}'.`,\n    {\n        actual_access_type: actualAccessType,\n        allowed_access_types: allowedAccessTypes,\n    },\n], (json) => [\n    json.actual_access_type,\n    json.allowed_access_types,\n]);\nconst InvalidPublishableClientKey = createKnownErrorConstructor(InvalidProjectAuthentication, \"INVALID_PUBLISHABLE_CLIENT_KEY\", (projectId) => [\n    401,\n    `The publishable key is not valid for the project ${JSON.stringify(projectId)}. Does the project and/or the key exist?`,\n    {\n        project_id: projectId,\n    },\n], (json) => [json.project_id]);\nconst InvalidSecretServerKey = createKnownErrorConstructor(InvalidProjectAuthentication, \"INVALID_SECRET_SERVER_KEY\", (projectId) => [\n    401,\n    `The secret server key is not valid for the project ${JSON.stringify(projectId)}. Does the project and/or the key exist?`,\n    {\n        project_id: projectId,\n    },\n], (json) => [json.project_id]);\nconst InvalidSuperSecretAdminKey = createKnownErrorConstructor(InvalidProjectAuthentication, \"INVALID_SUPER_SECRET_ADMIN_KEY\", (projectId) => [\n    401,\n    `The super secret admin key is not valid for the project ${JSON.stringify(projectId)}. Does the project and/or the key exist?`,\n    {\n        project_id: projectId,\n    },\n], (json) => [json.project_id]);\nconst InvalidAdminAccessToken = createKnownErrorConstructor(InvalidProjectAuthentication, \"INVALID_ADMIN_ACCESS_TOKEN\", \"inherit\", \"inherit\");\nconst UnparsableAdminAccessToken = createKnownErrorConstructor(InvalidAdminAccessToken, \"UNPARSABLE_ADMIN_ACCESS_TOKEN\", () => [\n    401,\n    \"Admin access token is not parsable.\",\n], () => []);\nconst AdminAccessTokenExpired = createKnownErrorConstructor(InvalidAdminAccessToken, \"ADMIN_ACCESS_TOKEN_EXPIRED\", () => [\n    401,\n    \"Admin access token has expired. Please refresh it and try again.\",\n], () => []);\nconst InvalidProjectForAdminAccessToken = createKnownErrorConstructor(InvalidAdminAccessToken, \"INVALID_PROJECT_FOR_ADMIN_ACCESS_TOKEN\", () => [\n    401,\n    \"Admin access tokens must be created on the internal project.\",\n], () => []);\nconst AdminAccessTokenIsNotAdmin = createKnownErrorConstructor(InvalidAdminAccessToken, \"ADMIN_ACCESS_TOKEN_IS_NOT_ADMIN\", () => [\n    401,\n    \"Admin access token does not have the required permissions to access this project.\",\n], () => []);\n/**\n * @deprecated Use InsufficientAccessType instead\n */\nconst ProjectAuthenticationRequired = createKnownErrorConstructor(ProjectAuthenticationError, \"PROJECT_AUTHENTICATION_REQUIRED\", \"inherit\", \"inherit\");\n/**\n * @deprecated Use InsufficientAccessType instead\n */\nconst ClientAuthenticationRequired = createKnownErrorConstructor(ProjectAuthenticationRequired, \"CLIENT_AUTHENTICATION_REQUIRED\", () => [\n    401,\n    \"The publishable client key must be provided.\",\n], () => []);\n/**\n * @deprecated Use InsufficientAccessType instead\n */\nconst ServerAuthenticationRequired = createKnownErrorConstructor(ProjectAuthenticationRequired, \"SERVER_AUTHENTICATION_REQUIRED\", () => [\n    401,\n    \"The secret server key must be provided.\",\n], () => []);\n/**\n * @deprecated Use InsufficientAccessType instead\n */\nconst ClientOrServerAuthenticationRequired = createKnownErrorConstructor(ProjectAuthenticationRequired, \"CLIENT_OR_SERVER_AUTHENTICATION_REQUIRED\", () => [\n    401,\n    \"Either the publishable client key or the secret server key must be provided.\",\n], () => []);\n/**\n * @deprecated Use InsufficientAccessType instead\n */\nconst ClientOrAdminAuthenticationRequired = createKnownErrorConstructor(ProjectAuthenticationRequired, \"CLIENT_OR_ADMIN_AUTHENTICATION_REQUIRED\", () => [\n    401,\n    \"Either the publishable client key or the super secret admin key must be provided.\",\n], () => []);\n/**\n * @deprecated Use InsufficientAccessType instead\n */\nconst ClientOrServerOrAdminAuthenticationRequired = createKnownErrorConstructor(ProjectAuthenticationRequired, \"CLIENT_OR_SERVER_OR_ADMIN_AUTHENTICATION_REQUIRED\", () => [\n    401,\n    \"Either the publishable client key, the secret server key, or the super secret admin key must be provided.\",\n], () => []);\n/**\n * @deprecated Use InsufficientAccessType instead\n */\nconst AdminAuthenticationRequired = createKnownErrorConstructor(ProjectAuthenticationRequired, \"ADMIN_AUTHENTICATION_REQUIRED\", () => [\n    401,\n    \"The super secret admin key must be provided.\",\n], () => []);\nconst ExpectedInternalProject = createKnownErrorConstructor(ProjectAuthenticationError, \"EXPECTED_INTERNAL_PROJECT\", () => [\n    401,\n    \"The project ID is expected to be internal.\",\n], () => []);\nconst SessionAuthenticationError = createKnownErrorConstructor(KnownError, \"SESSION_AUTHENTICATION_ERROR\", \"inherit\", \"inherit\");\nconst InvalidSessionAuthentication = createKnownErrorConstructor(SessionAuthenticationError, \"INVALID_SESSION_AUTHENTICATION\", \"inherit\", \"inherit\");\nconst InvalidAccessToken = createKnownErrorConstructor(InvalidSessionAuthentication, \"INVALID_ACCESS_TOKEN\", \"inherit\", \"inherit\");\nconst UnparsableAccessToken = createKnownErrorConstructor(InvalidAccessToken, \"UNPARSABLE_ACCESS_TOKEN\", () => [\n    401,\n    \"Access token is not parsable.\",\n], () => []);\nconst AccessTokenExpired = createKnownErrorConstructor(InvalidAccessToken, \"ACCESS_TOKEN_EXPIRED\", () => [\n    401,\n    \"Access token has expired. Please refresh it and try again.\",\n], () => []);\nconst InvalidProjectForAccessToken = createKnownErrorConstructor(InvalidAccessToken, \"INVALID_PROJECT_FOR_ACCESS_TOKEN\", () => [\n    401,\n    \"Access token not valid for this project.\",\n], () => []);\nconst RefreshTokenError = createKnownErrorConstructor(KnownError, \"REFRESH_TOKEN_ERROR\", \"inherit\", \"inherit\");\nconst RefreshTokenNotFoundOrExpired = createKnownErrorConstructor(RefreshTokenError, \"REFRESH_TOKEN_NOT_FOUND_OR_EXPIRED\", () => [\n    401,\n    \"Refresh token not found for this project, or the session has expired/been revoked.\",\n], () => []);\nconst ProviderRejected = createKnownErrorConstructor(RefreshTokenError, \"PROVIDER_REJECTED\", () => [\n    401,\n    \"The provider refused to refresh their token. This usually means that the provider used to authenticate the user no longer regards this session as valid, and the user must re-authenticate.\",\n], () => []);\nconst UserEmailAlreadyExists = createKnownErrorConstructor(KnownError, \"USER_EMAIL_ALREADY_EXISTS\", () => [\n    400,\n    \"User already exists.\",\n], () => []);\nconst CannotGetOwnUserWithoutUser = createKnownErrorConstructor(KnownError, \"CANNOT_GET_OWN_USER_WITHOUT_USER\", () => [\n    400,\n    \"You have specified 'me' as a userId, but did not provide authentication for a user.\",\n], () => []);\nconst UserIdDoesNotExist = createKnownErrorConstructor(KnownError, \"USER_ID_DOES_NOT_EXIST\", (userId) => [\n    400,\n    `The given user with the ID ${userId} does not exist.`,\n    {\n        user_id: userId,\n    },\n], (json) => [json.user_id]);\nconst UserNotFound = createKnownErrorConstructor(KnownError, \"USER_NOT_FOUND\", () => [\n    404,\n    \"User not found.\",\n], () => []);\nconst ApiKeyNotFound = createKnownErrorConstructor(KnownError, \"API_KEY_NOT_FOUND\", () => [\n    404,\n    \"API key not found.\",\n], () => []);\nconst ProjectNotFound = createKnownErrorConstructor(KnownError, \"PROJECT_NOT_FOUND\", (projectId) => {\n    if (typeof projectId !== \"string\")\n        throw new _utils_errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"projectId of KnownErrors.ProjectNotFound must be a string\");\n    return [\n        404,\n        `Project ${projectId} not found or is not accessible with the current user.`,\n        {\n            project_id: projectId,\n        },\n    ];\n}, (json) => [json.project_id]);\nconst SignUpNotEnabled = createKnownErrorConstructor(KnownError, \"SIGN_UP_NOT_ENABLED\", () => [\n    400,\n    \"Creation of new accounts is not enabled for this project. Please ask the project owner to enable it.\",\n], () => []);\nconst PasswordAuthenticationNotEnabled = createKnownErrorConstructor(KnownError, \"PASSWORD_AUTHENTICATION_NOT_ENABLED\", () => [\n    400,\n    \"Password authentication is not enabled for this project.\",\n], () => []);\nconst EmailPasswordMismatch = createKnownErrorConstructor(KnownError, \"EMAIL_PASSWORD_MISMATCH\", () => [\n    400,\n    \"Wrong e-mail or password.\",\n], () => []);\nconst RedirectUrlNotWhitelisted = createKnownErrorConstructor(KnownError, \"REDIRECT_URL_NOT_WHITELISTED\", () => [\n    400,\n    \"Redirect URL not whitelisted.\",\n], () => []);\nconst PasswordRequirementsNotMet = createKnownErrorConstructor(KnownError, \"PASSWORD_REQUIREMENTS_NOT_MET\", \"inherit\", \"inherit\");\nconst PasswordTooShort = createKnownErrorConstructor(PasswordRequirementsNotMet, \"PASSWORD_TOO_SHORT\", (minLength) => [\n    400,\n    `Password too short. Minimum length is ${minLength}.`,\n    {\n        min_length: minLength,\n    },\n], (json) => [\n    json?.min_length ?? (0,_utils_errors__WEBPACK_IMPORTED_MODULE_0__.throwErr)(\"min_length not found in PasswordTooShort details\"),\n]);\nconst PasswordTooLong = createKnownErrorConstructor(PasswordRequirementsNotMet, \"PASSWORD_TOO_LONG\", (maxLength) => [\n    400,\n    `Password too long. Maximum length is ${maxLength}.`,\n    {\n        maxLength,\n    },\n], (json) => [\n    json?.maxLength ?? (0,_utils_errors__WEBPACK_IMPORTED_MODULE_0__.throwErr)(\"maxLength not found in PasswordTooLong details\"),\n]);\nconst UserDoesNotHavePassword = createKnownErrorConstructor(KnownError, \"USER_DOES_NOT_HAVE_PASSWORD\", () => [\n    400,\n    \"This user does not have password authentication enabled.\",\n], () => []);\nconst VerificationCodeError = createKnownErrorConstructor(KnownError, \"VERIFICATION_ERROR\", \"inherit\", \"inherit\");\nconst VerificationCodeNotFound = createKnownErrorConstructor(VerificationCodeError, \"VERIFICATION_CODE_NOT_FOUND\", () => [\n    404,\n    \"The verification code does not exist for this project.\",\n], () => []);\nconst VerificationCodeExpired = createKnownErrorConstructor(VerificationCodeError, \"VERIFICATION_CODE_EXPIRED\", () => [\n    400,\n    \"The verification code has expired.\",\n], () => []);\nconst VerificationCodeAlreadyUsed = createKnownErrorConstructor(VerificationCodeError, \"VERIFICATION_CODE_ALREADY_USED\", () => [\n    400,\n    \"The verification link has already been used.\",\n], () => []);\nconst PasswordConfirmationMismatch = createKnownErrorConstructor(KnownError, \"PASSWORD_CONFIRMATION_MISMATCH\", () => [\n    400,\n    \"Passwords do not match.\",\n], () => []);\nconst EmailAlreadyVerified = createKnownErrorConstructor(KnownError, \"EMAIL_ALREADY_VERIFIED\", () => [\n    400,\n    \"The e-mail is already verified.\",\n], () => []);\nconst EmailNotAssociatedWithUser = createKnownErrorConstructor(KnownError, \"EMAIL_NOT_ASSOCIATED_WITH_USER\", () => [\n    400,\n    \"The e-mail is not associated with a user that could log in with that e-mail.\",\n], () => []);\nconst EmailIsNotPrimaryEmail = createKnownErrorConstructor(KnownError, \"EMAIL_IS_NOT_PRIMARY_EMAIL\", (email, primaryEmail) => [\n    400,\n    `The given e-mail (${email}) must equal the user's primary e-mail (${primaryEmail}).`,\n    {\n        email,\n        primary_email: primaryEmail,\n    },\n], (json) => [json.email, json.primary_email]);\nconst PermissionNotFound = createKnownErrorConstructor(KnownError, \"PERMISSION_NOT_FOUND\", (permissionId) => [\n    404,\n    `Permission \"${permissionId}\" not found. Make sure you created it on the dashboard.`,\n    {\n        permission_id: permissionId,\n    },\n], (json) => [json.permission_id]);\nconst ContainedPermissionNotFound = createKnownErrorConstructor(KnownError, \"CONTAINED_PERMISSION_NOT_FOUND\", (permissionId) => [\n    400,\n    `Contained permission with ID \"${permissionId}\" not found. Make sure you created it on the dashboard.`,\n    {\n        permission_id: permissionId,\n    },\n], (json) => [json.permission_id]);\nconst TeamNotFound = createKnownErrorConstructor(KnownError, \"TEAM_NOT_FOUND\", (teamId) => [\n    404,\n    `Team ${teamId} not found.`,\n    {\n        team_id: teamId,\n    },\n], (json) => [json.team_id]);\nconst TeamAlreadyExists = createKnownErrorConstructor(KnownError, \"TEAM_ALREADY_EXISTS\", (teamId) => [\n    400,\n    `Team ${teamId} already exists.`,\n    {\n        team_id: teamId,\n    },\n], (json) => [json.team_id]);\nconst TeamMembershipNotFound = createKnownErrorConstructor(KnownError, \"TEAM_MEMBERSHIP_NOT_FOUND\", (teamId, userId) => [\n    404,\n    `User ${userId} is not found in team ${teamId}.`,\n    {\n        team_id: teamId,\n        user_id: userId,\n    },\n], (json) => [json.team_id, json.user_id]);\nconst EmailTemplateAlreadyExists = createKnownErrorConstructor(KnownError, \"EMAIL_TEMPLATE_ALREADY_EXISTS\", () => [\n    400,\n    \"Email template already exists.\",\n], () => []);\nconst OAuthConnectionNotConnectedToUser = createKnownErrorConstructor(KnownError, \"OAUTH_CONNECTION_NOT_CONNECTED_TO_USER\", () => [\n    400,\n    \"The OAuth connection is not connected to any user.\",\n], () => []);\nconst OAuthConnectionAlreadyConnectedToAnotherUser = createKnownErrorConstructor(KnownError, \"OAUTH_CONNECTION_ALREADY_CONNECTED_TO_ANOTHER_USER\", () => [\n    400,\n    \"The OAuth connection is already connected to another user.\",\n], () => []);\nconst OAuthConnectionDoesNotHaveRequiredScope = createKnownErrorConstructor(KnownError, \"OAUTH_CONNECTION_DOES_NOT_HAVE_REQUIRED_SCOPE\", () => [\n    400,\n    \"The OAuth connection does not have the required scope.\",\n], () => []);\nconst OAuthExtraScopeNotAvailableWithSharedOAuthKeys = createKnownErrorConstructor(KnownError, \"OAUTH_EXTRA_SCOPE_NOT_AVAILABLE_WITH_SHARED_OAUTH_KEYS\", () => [\n    400,\n    \"Extra scopes are not available with shared OAuth keys. Please add your own OAuth keys on the Stack dashboard to use extra scopes.\",\n], () => []);\nconst OAuthAccessTokenNotAvailableWithSharedOAuthKeys = createKnownErrorConstructor(KnownError, \"OAUTH_ACCESS_TOKEN_NOT_AVAILABLE_WITH_SHARED_OAUTH_KEYS\", () => [\n    400,\n    \"Access tokens are not available with shared OAuth keys. Please add your own OAuth keys on the Stack dashboard to use access tokens.\",\n], () => []);\nconst InvalidOAuthClientIdOrSecret = createKnownErrorConstructor(KnownError, \"INVALID_OAUTH_CLIENT_ID_OR_SECRET\", (clientId) => [\n    400,\n    \"The OAuth client ID or secret is invalid. The client ID must be equal to the project ID, and the client secret must be a publishable client key.\",\n    {\n        client_id: clientId ?? null,\n    },\n], (json) => [json.client_id ?? undefined]);\nconst InvalidScope = createKnownErrorConstructor(KnownError, \"INVALID_SCOPE\", (scope) => [\n    400,\n    `The scope \"${scope}\" is not a valid OAuth scope for Stack.`,\n], (json) => [json.scope]);\nconst UserAlreadyConnectedToAnotherOAuthConnection = createKnownErrorConstructor(KnownError, \"USER_ALREADY_CONNECTED_TO_ANOTHER_OAUTH_CONNECTION\", () => [\n    400,\n    \"The user is already connected to another OAuth account. Did you maybe selected the wrong account?\",\n], () => []);\nconst OuterOAuthTimeout = createKnownErrorConstructor(KnownError, \"OUTER_OAUTH_TIMEOUT\", () => [\n    408,\n    \"The OAuth flow has timed out. Please sign in again.\",\n], () => []);\nconst OAuthProviderNotFoundOrNotEnabled = createKnownErrorConstructor(KnownError, \"OAUTH_PROVIDER_NOT_FOUND_OR_NOT_ENABLED\", () => [\n    400,\n    \"The OAuth provider is not found or not enabled.\",\n], () => []);\nconst MultiFactorAuthenticationRequired = createKnownErrorConstructor(KnownError, \"MULTI_FACTOR_AUTHENTICATION_REQUIRED\", (attemptCode) => [\n    400,\n    `Multi-factor authentication is required for this user.`,\n    {\n        attempt_code: attemptCode,\n    },\n], (json) => [json.attempt_code]);\nconst InvalidTotpCode = createKnownErrorConstructor(KnownError, \"INVALID_TOTP_CODE\", () => [\n    400,\n    \"The TOTP code is invalid. Please try again.\",\n], () => []);\nconst UserAuthenticationRequired = createKnownErrorConstructor(KnownError, \"USER_AUTHENTICATION_REQUIRED\", () => [\n    401,\n    \"User authentication required for this endpoint.\",\n], () => []);\nconst TeamMembershipAlreadyExists = createKnownErrorConstructor(KnownError, \"TEAM_MEMBERSHIP_ALREADY_EXISTS\", () => [\n    400,\n    \"Team membership already exists.\",\n], () => []);\nconst TeamPermissionRequired = createKnownErrorConstructor(KnownError, \"TEAM_PERMISSION_REQUIRED\", (teamId, userId, permissionId) => [\n    401,\n    `User ${userId} does not have permission ${permissionId} in team ${teamId}.`,\n    {\n        team_id: teamId,\n        user_id: userId,\n        permission_id: permissionId,\n    },\n], (json) => [json.team_id, json.user_id, json.permission_id]);\nconst TeamPermissionNotFound = createKnownErrorConstructor(KnownError, \"TEAM_PERMISSION_NOT_FOUND\", (teamId, userId, permissionId) => [\n    401,\n    `User ${userId} does not have permission ${permissionId} in team ${teamId}.`,\n    {\n        team_id: teamId,\n        user_id: userId,\n        permission_id: permissionId,\n    },\n], (json) => [json.team_id, json.user_id, json.permission_id]);\nconst InvalidSharedOAuthProviderId = createKnownErrorConstructor(KnownError, \"INVALID_SHARED_OAUTH_PROVIDER_ID\", (providerId) => [\n    400,\n    `The shared OAuth provider with ID ${providerId} is not valid.`,\n    {\n        provider_id: providerId,\n    },\n], (json) => [json.provider_id]);\nconst InvalidStandardOAuthProviderId = createKnownErrorConstructor(KnownError, \"INVALID_STANDARD_OAUTH_PROVIDER_ID\", (providerId) => [\n    400,\n    `The standard OAuth provider with ID ${providerId} is not valid.`,\n    {\n        provider_id: providerId,\n    },\n], (json) => [json.provider_id]);\nconst InvalidAuthorizationCode = createKnownErrorConstructor(KnownError, \"INVALID_AUTHORIZATION_CODE\", () => [\n    400,\n    \"The given authorization code is invalid.\",\n], () => []);\nconst KnownErrors = {\n    UnsupportedError,\n    BodyParsingError,\n    SchemaError,\n    AllOverloadsFailed,\n    ProjectAuthenticationError,\n    InvalidProjectAuthentication,\n    ProjectKeyWithoutRequestType,\n    InvalidRequestType,\n    RequestTypeWithoutProjectId,\n    ProjectKeyWithoutAccessType,\n    InvalidAccessType,\n    AccessTypeWithoutProjectId,\n    AccessTypeRequired,\n    CannotGetOwnUserWithoutUser,\n    InsufficientAccessType,\n    InvalidPublishableClientKey,\n    InvalidSecretServerKey,\n    InvalidSuperSecretAdminKey,\n    InvalidAdminAccessToken,\n    UnparsableAdminAccessToken,\n    AdminAccessTokenExpired,\n    InvalidProjectForAdminAccessToken,\n    AdminAccessTokenIsNotAdmin,\n    ProjectAuthenticationRequired,\n    ClientAuthenticationRequired,\n    ServerAuthenticationRequired,\n    ClientOrServerAuthenticationRequired,\n    ClientOrAdminAuthenticationRequired,\n    ClientOrServerOrAdminAuthenticationRequired,\n    AdminAuthenticationRequired,\n    ExpectedInternalProject,\n    SessionAuthenticationError,\n    InvalidSessionAuthentication,\n    InvalidAccessToken,\n    UnparsableAccessToken,\n    AccessTokenExpired,\n    InvalidProjectForAccessToken,\n    RefreshTokenError,\n    ProviderRejected,\n    RefreshTokenNotFoundOrExpired,\n    UserEmailAlreadyExists,\n    UserIdDoesNotExist,\n    UserNotFound,\n    ApiKeyNotFound,\n    ProjectNotFound,\n    SignUpNotEnabled,\n    PasswordAuthenticationNotEnabled,\n    EmailPasswordMismatch,\n    RedirectUrlNotWhitelisted,\n    PasswordRequirementsNotMet,\n    PasswordTooShort,\n    PasswordTooLong,\n    UserDoesNotHavePassword,\n    VerificationCodeError,\n    VerificationCodeNotFound,\n    VerificationCodeExpired,\n    VerificationCodeAlreadyUsed,\n    PasswordConfirmationMismatch,\n    EmailAlreadyVerified,\n    EmailNotAssociatedWithUser,\n    EmailIsNotPrimaryEmail,\n    PermissionNotFound,\n    ContainedPermissionNotFound,\n    TeamNotFound,\n    TeamMembershipNotFound,\n    EmailTemplateAlreadyExists,\n    OAuthConnectionNotConnectedToUser,\n    OAuthConnectionAlreadyConnectedToAnotherUser,\n    OAuthConnectionDoesNotHaveRequiredScope,\n    OAuthExtraScopeNotAvailableWithSharedOAuthKeys,\n    OAuthAccessTokenNotAvailableWithSharedOAuthKeys,\n    InvalidOAuthClientIdOrSecret,\n    InvalidScope,\n    UserAlreadyConnectedToAnotherOAuthConnection,\n    OuterOAuthTimeout,\n    OAuthProviderNotFoundOrNotEnabled,\n    MultiFactorAuthenticationRequired,\n    InvalidTotpCode,\n    UserAuthenticationRequired,\n    TeamMembershipAlreadyExists,\n    TeamPermissionRequired,\n    InvalidSharedOAuthProviderId,\n    InvalidStandardOAuthProviderId,\n    InvalidAuthorizationCode,\n    TeamPermissionNotFound,\n};\n// ensure that all known error codes are unique\nconst knownErrorCodes = new Set();\nfor (const [_, KnownError] of Object.entries(KnownErrors)) {\n    if (knownErrorCodes.has(KnownError.errorCode)) {\n        throw new Error(`Duplicate known error code: ${KnownError.errorCode}`);\n    }\n    knownErrorCodes.add(KnownError.errorCode);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/known-errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/sessions.js":
/*!****************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/sessions.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessToken: () => (/* binding */ AccessToken),\n/* harmony export */   InternalSession: () => (/* binding */ InternalSession),\n/* harmony export */   RefreshToken: () => (/* binding */ RefreshToken)\n/* harmony export */ });\n/* harmony import */ var _utils_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/errors */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _utils_stores__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/stores */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/stores.js\");\n\n\nclass AccessToken {\n    constructor(token) {\n        this.token = token;\n        if (token === \"undefined\") {\n            throw new _utils_errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"Access token is the string 'undefined'; it's unlikely this is the correct value. They're supposed to be unguessable!\");\n        }\n    }\n}\nclass RefreshToken {\n    constructor(token) {\n        this.token = token;\n        if (token === \"undefined\") {\n            throw new _utils_errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"Refresh token is the string 'undefined'; it's unlikely this is the correct value. They're supposed to be unguessable!\");\n        }\n    }\n}\n/**\n * An InternalSession represents a user's session, which may or may not be valid. It may contain an access token, a refresh token, or both.\n *\n * A session never changes which user or session it belongs to, but the tokens in it may change over time.\n */\nclass InternalSession {\n    constructor(_options) {\n        this._options = _options;\n        /**\n         * Whether the session as a whole is known to be invalid. Used as a cache to avoid making multiple requests to the server (sessions never go back to being valid after being invalidated).\n         *\n         * Applies to both the access token and the refresh token (it is possible for the access token to be invalid but the refresh token to be valid, in which case the session is still valid).\n         */\n        this._knownToBeInvalid = new _utils_stores__WEBPACK_IMPORTED_MODULE_1__.Store(false);\n        this._refreshPromise = null;\n        this._accessToken = new _utils_stores__WEBPACK_IMPORTED_MODULE_1__.Store(_options.accessToken ? new AccessToken(_options.accessToken) : null);\n        this._refreshToken = _options.refreshToken ? new RefreshToken(_options.refreshToken) : null;\n        this.sessionKey = InternalSession.calculateSessionKey({ accessToken: _options.accessToken ?? null, refreshToken: _options.refreshToken });\n    }\n    static calculateSessionKey(ofTokens) {\n        if (ofTokens.refreshToken) {\n            return `refresh-${ofTokens.refreshToken}`;\n        }\n        else if (ofTokens.accessToken) {\n            return `access-${ofTokens.accessToken}`;\n        }\n        else {\n            return \"not-logged-in\";\n        }\n    }\n    isKnownToBeInvalid() {\n        return this._knownToBeInvalid.get();\n    }\n    /**\n     * Marks the session object as invalid, meaning that the refresh and access tokens can no longer be used.\n     */\n    markInvalid() {\n        this._accessToken.set(null);\n        this._knownToBeInvalid.set(true);\n    }\n    onInvalidate(callback) {\n        return this._knownToBeInvalid.onChange(() => callback());\n    }\n    /**\n     * Returns the access token if it is found in the cache, fetching it otherwise.\n     *\n     * This is usually the function you want to call to get an access token. When using the access token, you should catch errors that occur if it expires, and call `markAccessTokenExpired` to mark the token as expired if so (after which a call to this function will always refetch the token).\n     *\n     * @returns null if the session is known to be invalid, cached tokens if they exist in the cache (which may or may not be valid still), or new tokens otherwise.\n     */\n    async getPotentiallyExpiredTokens() {\n        const accessToken = await this._getPotentiallyExpiredAccessToken();\n        return accessToken ? { accessToken, refreshToken: this._refreshToken } : null;\n    }\n    /**\n     * Fetches new tokens that are, at the time of fetching, guaranteed to be valid.\n     *\n     * The newly generated tokens are shortlived, so it's good practice not to rely on their validity (if possible). However, this function is useful in some cases where you only want to pass access tokens to a service, and you want to make sure said access token has the longest possible lifetime.\n     *\n     * In most cases, you should prefer `getPotentiallyExpiredTokens` with a fallback to `markAccessTokenExpired` and a retry mechanism if the endpoint rejects the token.\n     *\n     * @returns null if the session is known to be invalid, or new tokens otherwise (which, at the time of fetching, are guaranteed to be valid).\n     */\n    async fetchNewTokens() {\n        const accessToken = await this._getNewlyFetchedAccessToken();\n        return accessToken ? { accessToken, refreshToken: this._refreshToken } : null;\n    }\n    markAccessTokenExpired(accessToken) {\n        if (this._accessToken.get() === accessToken) {\n            this._accessToken.set(null);\n        }\n    }\n    /**\n     * Note that a callback invocation with `null` does not mean the session has been invalidated; the access token may just have expired. Use `onInvalidate` to detect invalidation.\n     */\n    onAccessTokenChange(callback) {\n        return this._accessToken.onChange(callback);\n    }\n    /**\n     * @returns An access token (cached if possible), or null if the session either does not represent a user or the session is invalid.\n     */\n    async _getPotentiallyExpiredAccessToken() {\n        if (!this._refreshToken)\n            return null;\n        if (this._knownToBeInvalid.get())\n            return null;\n        const oldAccessToken = this._accessToken.get();\n        if (oldAccessToken)\n            return oldAccessToken;\n        // refresh access token\n        if (!this._refreshPromise) {\n            this._refreshAndSetRefreshPromise(this._refreshToken);\n        }\n        return await this._refreshPromise;\n    }\n    /**\n     * You should prefer `getPotentiallyExpiredAccessToken` in almost all cases.\n     *\n     * @returns A newly fetched access token (never read from cache), or null if the session either does not represent a user or the session is invalid.\n     */\n    async _getNewlyFetchedAccessToken() {\n        if (!this._refreshToken)\n            return null;\n        if (this._knownToBeInvalid.get())\n            return null;\n        this._refreshAndSetRefreshPromise(this._refreshToken);\n        return await this._refreshPromise;\n    }\n    _refreshAndSetRefreshPromise(refreshToken) {\n        let refreshPromise = this._options.refreshAccessTokenCallback(refreshToken).then((accessToken) => {\n            if (refreshPromise === this._refreshPromise) {\n                this._refreshPromise = null;\n                this._accessToken.set(accessToken);\n                if (!accessToken) {\n                    this.markInvalid();\n                }\n            }\n            return accessToken;\n        });\n        this._refreshPromise = refreshPromise;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/sessions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/arrays.js":
/*!********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/arrays.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   enumerate: () => (/* binding */ enumerate),\n/* harmony export */   findLastIndex: () => (/* binding */ findLastIndex),\n/* harmony export */   groupBy: () => (/* binding */ groupBy),\n/* harmony export */   isShallowEqual: () => (/* binding */ isShallowEqual),\n/* harmony export */   outerProduct: () => (/* binding */ outerProduct),\n/* harmony export */   range: () => (/* binding */ range),\n/* harmony export */   rotateLeft: () => (/* binding */ rotateLeft),\n/* harmony export */   rotateRight: () => (/* binding */ rotateRight),\n/* harmony export */   shuffle: () => (/* binding */ shuffle),\n/* harmony export */   typedIncludes: () => (/* binding */ typedIncludes),\n/* harmony export */   unique: () => (/* binding */ unique)\n/* harmony export */ });\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/math.js\");\n\nfunction typedIncludes(arr, item) {\n    return arr.includes(item);\n}\nfunction enumerate(arr) {\n    return arr.map((item, index) => [index, item]);\n}\nfunction isShallowEqual(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i])\n            return false;\n    }\n    return true;\n}\n/**\n * Ponyfill for ES2023's findLastIndex.\n */\nfunction findLastIndex(arr, predicate) {\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (predicate(arr[i]))\n            return i;\n    }\n    return -1;\n}\nfunction groupBy(arr, key) {\n    const result = new Map;\n    for (const item of arr) {\n        const k = key(item);\n        if (result.get(k) === undefined)\n            result.set(k, []);\n        result.get(k).push(item);\n    }\n    return result;\n}\nfunction range(startInclusive, endExclusive, step) {\n    if (endExclusive === undefined) {\n        endExclusive = startInclusive;\n        startInclusive = 0;\n    }\n    if (step === undefined)\n        step = 1;\n    const result = [];\n    for (let i = startInclusive; step > 0 ? (i < endExclusive) : (i > endExclusive); i += step) {\n        result.push(i);\n    }\n    return result;\n}\nfunction rotateLeft(arr, n) {\n    const index = (0,_math__WEBPACK_IMPORTED_MODULE_0__.remainder)(n, arr.length);\n    return [...arr.slice(n), arr.slice(0, n)];\n}\nfunction rotateRight(arr, n) {\n    return rotateLeft(arr, -n);\n}\nfunction shuffle(arr) {\n    const result = [...arr];\n    for (let i = result.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [result[i], result[j]] = [result[j], result[i]];\n    }\n    return result;\n}\nfunction outerProduct(arr1, arr2) {\n    return arr1.flatMap((item1) => arr2.map((item2) => [item1, item2]));\n}\nfunction unique(arr) {\n    return [...new Set(arr)];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvYXJyYXlzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFtQztBQUM1QjtBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxvQkFBb0IsY0FBYztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxpQ0FBaUMsUUFBUTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLG9EQUFvRDtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asa0JBQWtCLGdEQUFTO0FBQzNCO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0Esb0NBQW9DLE9BQU87QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtlcnBsQUljZS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9hcnJheXMuanM/MzdhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW1haW5kZXIgfSBmcm9tIFwiLi9tYXRoXCI7XG5leHBvcnQgZnVuY3Rpb24gdHlwZWRJbmNsdWRlcyhhcnIsIGl0ZW0pIHtcbiAgICByZXR1cm4gYXJyLmluY2x1ZGVzKGl0ZW0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVudW1lcmF0ZShhcnIpIHtcbiAgICByZXR1cm4gYXJyLm1hcCgoaXRlbSwgaW5kZXgpID0+IFtpbmRleCwgaXRlbV0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzU2hhbGxvd0VxdWFsKGEsIGIpIHtcbiAgICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChhW2ldICE9PSBiW2ldKVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbi8qKlxuICogUG9ueWZpbGwgZm9yIEVTMjAyMydzIGZpbmRMYXN0SW5kZXguXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmaW5kTGFzdEluZGV4KGFyciwgcHJlZGljYXRlKSB7XG4gICAgZm9yIChsZXQgaSA9IGFyci5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICBpZiAocHJlZGljYXRlKGFycltpXSkpXG4gICAgICAgICAgICByZXR1cm4gaTtcbiAgICB9XG4gICAgcmV0dXJuIC0xO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdyb3VwQnkoYXJyLCBrZXkpIHtcbiAgICBjb25zdCByZXN1bHQgPSBuZXcgTWFwO1xuICAgIGZvciAoY29uc3QgaXRlbSBvZiBhcnIpIHtcbiAgICAgICAgY29uc3QgayA9IGtleShpdGVtKTtcbiAgICAgICAgaWYgKHJlc3VsdC5nZXQoaykgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHJlc3VsdC5zZXQoaywgW10pO1xuICAgICAgICByZXN1bHQuZ2V0KGspLnB1c2goaXRlbSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnQgZnVuY3Rpb24gcmFuZ2Uoc3RhcnRJbmNsdXNpdmUsIGVuZEV4Y2x1c2l2ZSwgc3RlcCkge1xuICAgIGlmIChlbmRFeGNsdXNpdmUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBlbmRFeGNsdXNpdmUgPSBzdGFydEluY2x1c2l2ZTtcbiAgICAgICAgc3RhcnRJbmNsdXNpdmUgPSAwO1xuICAgIH1cbiAgICBpZiAoc3RlcCA9PT0gdW5kZWZpbmVkKVxuICAgICAgICBzdGVwID0gMTtcbiAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gc3RhcnRJbmNsdXNpdmU7IHN0ZXAgPiAwID8gKGkgPCBlbmRFeGNsdXNpdmUpIDogKGkgPiBlbmRFeGNsdXNpdmUpOyBpICs9IHN0ZXApIHtcbiAgICAgICAgcmVzdWx0LnB1c2goaSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnQgZnVuY3Rpb24gcm90YXRlTGVmdChhcnIsIG4pIHtcbiAgICBjb25zdCBpbmRleCA9IHJlbWFpbmRlcihuLCBhcnIubGVuZ3RoKTtcbiAgICByZXR1cm4gWy4uLmFyci5zbGljZShuKSwgYXJyLnNsaWNlKDAsIG4pXTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByb3RhdGVSaWdodChhcnIsIG4pIHtcbiAgICByZXR1cm4gcm90YXRlTGVmdChhcnIsIC1uKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzaHVmZmxlKGFycikge1xuICAgIGNvbnN0IHJlc3VsdCA9IFsuLi5hcnJdO1xuICAgIGZvciAobGV0IGkgPSByZXN1bHQubGVuZ3RoIC0gMTsgaSA+IDA7IGktLSkge1xuICAgICAgICBjb25zdCBqID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKGkgKyAxKSk7XG4gICAgICAgIFtyZXN1bHRbaV0sIHJlc3VsdFtqXV0gPSBbcmVzdWx0W2pdLCByZXN1bHRbaV1dO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZXhwb3J0IGZ1bmN0aW9uIG91dGVyUHJvZHVjdChhcnIxLCBhcnIyKSB7XG4gICAgcmV0dXJuIGFycjEuZmxhdE1hcCgoaXRlbTEpID0+IGFycjIubWFwKChpdGVtMikgPT4gW2l0ZW0xLCBpdGVtMl0pKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB1bmlxdWUoYXJyKSB7XG4gICAgcmV0dXJuIFsuLi5uZXcgU2V0KGFycildO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/arrays.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/bytes.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/bytes.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeBase32: () => (/* binding */ decodeBase32),\n/* harmony export */   decodeBase64: () => (/* binding */ decodeBase64),\n/* harmony export */   encodeBase32: () => (/* binding */ encodeBase32),\n/* harmony export */   encodeBase64: () => (/* binding */ encodeBase64),\n/* harmony export */   isBase32: () => (/* binding */ isBase32),\n/* harmony export */   isBase64: () => (/* binding */ isBase64)\n/* harmony export */ });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n\nconst crockfordAlphabet = \"0123456789ABCDEFGHJKMNPQRSTVWXYZ\";\nconst crockfordReplacements = new Map([\n    [\"o\", \"0\"],\n    [\"i\", \"1\"],\n    [\"l\", \"1\"],\n]);\nfunction encodeBase32(input) {\n    let bits = 0;\n    let value = 0;\n    let output = \"\";\n    for (let i = 0; i < input.length; i++) {\n        value = (value << 8) | input[i];\n        bits += 8;\n        while (bits >= 5) {\n            output += crockfordAlphabet[(value >>> (bits - 5)) & 31];\n            bits -= 5;\n        }\n    }\n    if (bits > 0) {\n        output += crockfordAlphabet[(value << (5 - bits)) & 31];\n    }\n    // sanity check\n    if (!isBase32(output)) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"Invalid base32 output; this should never happen\");\n    }\n    return output;\n}\nfunction decodeBase32(input) {\n    if (!isBase32(input)) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"Invalid base32 string\");\n    }\n    const output = new Uint8Array((input.length * 5 / 8) | 0);\n    let bits = 0;\n    let value = 0;\n    let outputIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n        let char = input[i].toLowerCase();\n        if (char === \" \")\n            continue;\n        if (crockfordReplacements.has(char)) {\n            char = crockfordReplacements.get(char);\n        }\n        const index = crockfordAlphabet.indexOf(char);\n        if (index === -1) {\n            throw new Error(`Invalid character: ${char}`);\n        }\n        value = (value << 5) | index;\n        bits += 5;\n        if (bits >= 8) {\n            output[outputIndex++] = (value >>> (bits - 8)) & 255;\n            bits -= 8;\n        }\n    }\n    return output;\n}\nfunction encodeBase64(input) {\n    const res = btoa(String.fromCharCode(...input));\n    // sanity check\n    if (!isBase64(res)) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"Invalid base64 output; this should never happen\");\n    }\n    return res;\n}\nfunction decodeBase64(input) {\n    if (!isBase64(input)) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"Invalid base64 string\");\n    }\n    return new Uint8Array(atob(input).split(\"\").map((char) => char.charCodeAt(0)));\n}\nfunction isBase32(input) {\n    for (const char of input) {\n        if (char === \" \")\n            continue;\n        if (!crockfordAlphabet.includes(char)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isBase64(input) {\n    const regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n    return regex.test(input);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvYnl0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUErQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixrQkFBa0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdEQUFtQix5QkFBeUI7QUFDOUQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGtCQUFrQix3REFBbUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixrQkFBa0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxLQUFLO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isd0RBQW1CLHlCQUF5QjtBQUM5RDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esa0JBQWtCLHdEQUFtQjtBQUNyQztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsbUNBQW1DLEVBQUUsa0JBQWtCLEVBQUUsbUJBQW1CLEVBQUU7QUFDOUU7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtlcnBsQUljZS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9ieXRlcy5qcz8yMDk3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0YWNrQXNzZXJ0aW9uRXJyb3IgfSBmcm9tIFwiLi9lcnJvcnNcIjtcbmNvbnN0IGNyb2NrZm9yZEFscGhhYmV0ID0gXCIwMTIzNDU2Nzg5QUJDREVGR0hKS01OUFFSU1RWV1hZWlwiO1xuY29uc3QgY3JvY2tmb3JkUmVwbGFjZW1lbnRzID0gbmV3IE1hcChbXG4gICAgW1wib1wiLCBcIjBcIl0sXG4gICAgW1wiaVwiLCBcIjFcIl0sXG4gICAgW1wibFwiLCBcIjFcIl0sXG5dKTtcbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVCYXNlMzIoaW5wdXQpIHtcbiAgICBsZXQgYml0cyA9IDA7XG4gICAgbGV0IHZhbHVlID0gMDtcbiAgICBsZXQgb3V0cHV0ID0gXCJcIjtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhbHVlID0gKHZhbHVlIDw8IDgpIHwgaW5wdXRbaV07XG4gICAgICAgIGJpdHMgKz0gODtcbiAgICAgICAgd2hpbGUgKGJpdHMgPj0gNSkge1xuICAgICAgICAgICAgb3V0cHV0ICs9IGNyb2NrZm9yZEFscGhhYmV0Wyh2YWx1ZSA+Pj4gKGJpdHMgLSA1KSkgJiAzMV07XG4gICAgICAgICAgICBiaXRzIC09IDU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKGJpdHMgPiAwKSB7XG4gICAgICAgIG91dHB1dCArPSBjcm9ja2ZvcmRBbHBoYWJldFsodmFsdWUgPDwgKDUgLSBiaXRzKSkgJiAzMV07XG4gICAgfVxuICAgIC8vIHNhbml0eSBjaGVja1xuICAgIGlmICghaXNCYXNlMzIob3V0cHV0KSkge1xuICAgICAgICB0aHJvdyBuZXcgU3RhY2tBc3NlcnRpb25FcnJvcihcIkludmFsaWQgYmFzZTMyIG91dHB1dDsgdGhpcyBzaG91bGQgbmV2ZXIgaGFwcGVuXCIpO1xuICAgIH1cbiAgICByZXR1cm4gb3V0cHV0O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUJhc2UzMihpbnB1dCkge1xuICAgIGlmICghaXNCYXNlMzIoaW5wdXQpKSB7XG4gICAgICAgIHRocm93IG5ldyBTdGFja0Fzc2VydGlvbkVycm9yKFwiSW52YWxpZCBiYXNlMzIgc3RyaW5nXCIpO1xuICAgIH1cbiAgICBjb25zdCBvdXRwdXQgPSBuZXcgVWludDhBcnJheSgoaW5wdXQubGVuZ3RoICogNSAvIDgpIHwgMCk7XG4gICAgbGV0IGJpdHMgPSAwO1xuICAgIGxldCB2YWx1ZSA9IDA7XG4gICAgbGV0IG91dHB1dEluZGV4ID0gMDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGxldCBjaGFyID0gaW5wdXRbaV0udG9Mb3dlckNhc2UoKTtcbiAgICAgICAgaWYgKGNoYXIgPT09IFwiIFwiKVxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIGlmIChjcm9ja2ZvcmRSZXBsYWNlbWVudHMuaGFzKGNoYXIpKSB7XG4gICAgICAgICAgICBjaGFyID0gY3JvY2tmb3JkUmVwbGFjZW1lbnRzLmdldChjaGFyKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBpbmRleCA9IGNyb2NrZm9yZEFscGhhYmV0LmluZGV4T2YoY2hhcik7XG4gICAgICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBjaGFyYWN0ZXI6ICR7Y2hhcn1gKTtcbiAgICAgICAgfVxuICAgICAgICB2YWx1ZSA9ICh2YWx1ZSA8PCA1KSB8IGluZGV4O1xuICAgICAgICBiaXRzICs9IDU7XG4gICAgICAgIGlmIChiaXRzID49IDgpIHtcbiAgICAgICAgICAgIG91dHB1dFtvdXRwdXRJbmRleCsrXSA9ICh2YWx1ZSA+Pj4gKGJpdHMgLSA4KSkgJiAyNTU7XG4gICAgICAgICAgICBiaXRzIC09IDg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG91dHB1dDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVCYXNlNjQoaW5wdXQpIHtcbiAgICBjb25zdCByZXMgPSBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUoLi4uaW5wdXQpKTtcbiAgICAvLyBzYW5pdHkgY2hlY2tcbiAgICBpZiAoIWlzQmFzZTY0KHJlcykpIHtcbiAgICAgICAgdGhyb3cgbmV3IFN0YWNrQXNzZXJ0aW9uRXJyb3IoXCJJbnZhbGlkIGJhc2U2NCBvdXRwdXQ7IHRoaXMgc2hvdWxkIG5ldmVyIGhhcHBlblwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVCYXNlNjQoaW5wdXQpIHtcbiAgICBpZiAoIWlzQmFzZTY0KGlucHV0KSkge1xuICAgICAgICB0aHJvdyBuZXcgU3RhY2tBc3NlcnRpb25FcnJvcihcIkludmFsaWQgYmFzZTY0IHN0cmluZ1wiKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGF0b2IoaW5wdXQpLnNwbGl0KFwiXCIpLm1hcCgoY2hhcikgPT4gY2hhci5jaGFyQ29kZUF0KDApKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNCYXNlMzIoaW5wdXQpIHtcbiAgICBmb3IgKGNvbnN0IGNoYXIgb2YgaW5wdXQpIHtcbiAgICAgICAgaWYgKGNoYXIgPT09IFwiIFwiKVxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIGlmICghY3JvY2tmb3JkQWxwaGFiZXQuaW5jbHVkZXMoY2hhcikpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0Jhc2U2NChpbnB1dCkge1xuICAgIGNvbnN0IHJlZ2V4ID0gL14oWzAtOWEtekEtWisvXXs0fSkqKChbMC05YS16QS1aKy9dezJ9PT0pfChbMC05YS16QS1aKy9dezN9PSkpPyQvO1xuICAgIHJldHVybiByZWdleC50ZXN0KGlucHV0KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/caches.js":
/*!********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/caches.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncCache: () => (/* binding */ AsyncCache),\n/* harmony export */   cacheFunction: () => (/* binding */ cacheFunction)\n/* harmony export */ });\n/* harmony import */ var _maps__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./maps */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/maps.js\");\n/* harmony import */ var _objects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./objects */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/objects.js\");\n/* harmony import */ var _promises__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./promises */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/promises.js\");\n/* harmony import */ var _stores__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stores */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/stores.js\");\n\n\n\n\n/**\n * Can be used to cache the result of a function call, for example for the `use` hook in React.\n */\nfunction cacheFunction(f) {\n    const dependenciesMap = new _maps__WEBPACK_IMPORTED_MODULE_0__.DependenciesMap();\n    return ((...args) => {\n        if (dependenciesMap.has(args)) {\n            return dependenciesMap.get(args);\n        }\n        const value = f(...args);\n        dependenciesMap.set(args, value);\n        return value;\n    });\n}\nclass AsyncCache {\n    constructor(_fetcher, _options = {}) {\n        this._fetcher = _fetcher;\n        this._options = _options;\n        this._map = new _maps__WEBPACK_IMPORTED_MODULE_0__.DependenciesMap();\n        this.isCacheAvailable = this._createKeyed(\"isCacheAvailable\");\n        this.getIfCached = this._createKeyed(\"getIfCached\");\n        this.getOrWait = this._createKeyed(\"getOrWait\");\n        this.forceSetCachedValue = this._createKeyed(\"forceSetCachedValue\");\n        this.forceSetCachedValueAsync = this._createKeyed(\"forceSetCachedValueAsync\");\n        this.refresh = this._createKeyed(\"refresh\");\n        this.invalidate = this._createKeyed(\"invalidate\");\n        this.onStateChange = this._createKeyed(\"onStateChange\");\n        // nothing here yet\n    }\n    _createKeyed(functionName) {\n        return (key, ...args) => {\n            const valueCache = this.getValueCache(key);\n            return valueCache[functionName].apply(valueCache, args);\n        };\n    }\n    getValueCache(dependencies) {\n        let cache = this._map.get(dependencies);\n        if (!cache) {\n            cache = new AsyncValueCache(async () => await this._fetcher(dependencies), {\n                ...this._options,\n                onSubscribe: this._options.onSubscribe ? (cb) => this._options.onSubscribe(dependencies, cb) : undefined,\n            });\n            this._map.set(dependencies, cache);\n        }\n        return cache;\n    }\n}\nclass AsyncValueCache {\n    constructor(fetcher, _options = {}) {\n        this._options = _options;\n        this._subscriptionsCount = 0;\n        this._unsubscribers = [];\n        this._store = new _stores__WEBPACK_IMPORTED_MODULE_3__.AsyncStore();\n        this._rateLimitOptions = {\n            concurrency: 1,\n            throttleMs: 300,\n            ...(0,_objects__WEBPACK_IMPORTED_MODULE_1__.filterUndefined)(_options.rateLimiter ?? {}),\n        };\n        this._fetcher = (0,_promises__WEBPACK_IMPORTED_MODULE_2__.rateLimited)(fetcher, {\n            ...this._rateLimitOptions,\n            batchCalls: true,\n        });\n    }\n    isCacheAvailable() {\n        return this._store.isAvailable();\n    }\n    getIfCached() {\n        return this._store.get();\n    }\n    getOrWait(cacheStrategy) {\n        const cached = this.getIfCached();\n        if (cacheStrategy === \"read-write\" && cached.status === \"ok\") {\n            return (0,_promises__WEBPACK_IMPORTED_MODULE_2__.resolved)(cached.data);\n        }\n        return this._refetch(cacheStrategy);\n    }\n    _set(value) {\n        this._store.set(value);\n    }\n    _setAsync(value) {\n        const promise = (0,_promises__WEBPACK_IMPORTED_MODULE_2__.pending)(value);\n        this._pendingPromise = promise;\n        return (0,_promises__WEBPACK_IMPORTED_MODULE_2__.pending)(this._store.setAsync(promise));\n    }\n    _refetch(cacheStrategy) {\n        if (cacheStrategy === \"read-write\" && this._pendingPromise) {\n            return this._pendingPromise;\n        }\n        const promise = (0,_promises__WEBPACK_IMPORTED_MODULE_2__.pending)(this._fetcher());\n        if (cacheStrategy === \"never\") {\n            return promise;\n        }\n        return (0,_promises__WEBPACK_IMPORTED_MODULE_2__.pending)(this._setAsync(promise).then(() => promise));\n    }\n    forceSetCachedValue(value) {\n        this._set(value);\n    }\n    forceSetCachedValueAsync(value) {\n        return this._setAsync(value);\n    }\n    async refresh() {\n        return await this.getOrWait(\"write-only\");\n    }\n    async invalidate() {\n        this._store.setUnavailable();\n        this._pendingPromise = undefined;\n        return await this.refresh();\n    }\n    onStateChange(callback) {\n        const storeObj = this._store.onChange(callback);\n        if (this._subscriptionsCount++ === 0 && this._options.onSubscribe) {\n            const unsubscribe = this._options.onSubscribe(() => {\n                (0,_promises__WEBPACK_IMPORTED_MODULE_2__.runAsynchronously)(this.refresh());\n            });\n            this._unsubscribers.push(unsubscribe);\n        }\n        (0,_promises__WEBPACK_IMPORTED_MODULE_2__.runAsynchronously)(this.refresh());\n        let hasUnsubscribed = false;\n        return {\n            unsubscribe: () => {\n                if (hasUnsubscribed)\n                    return;\n                hasUnsubscribed = true;\n                storeObj.unsubscribe();\n                if (--this._subscriptionsCount === 0) {\n                    for (const unsubscribe of this._unsubscribers) {\n                        unsubscribe();\n                    }\n                }\n            },\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/caches.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/compile-time.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/compile-time.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   scrambleDuringCompileTime: () => (/* binding */ scrambleDuringCompileTime)\n/* harmony export */ });\n/**\n * Returns the first argument passed to it, but compilers won't be able to optimize it out. This is useful in some\n * cases where compiler warnings go awry; for example, when importing things that may not exist (but are guaranteed\n * to exist at runtime).\n */\nfunction scrambleDuringCompileTime(t) {\n    return t;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvY29tcGlsZS10aW1lLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7QUFDTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZXJwbEFJY2UvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvY29tcGlsZS10aW1lLmpzP2NmMTciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXR1cm5zIHRoZSBmaXJzdCBhcmd1bWVudCBwYXNzZWQgdG8gaXQsIGJ1dCBjb21waWxlcnMgd29uJ3QgYmUgYWJsZSB0byBvcHRpbWl6ZSBpdCBvdXQuIFRoaXMgaXMgdXNlZnVsIGluIHNvbWVcbiAqIGNhc2VzIHdoZXJlIGNvbXBpbGVyIHdhcm5pbmdzIGdvIGF3cnk7IGZvciBleGFtcGxlLCB3aGVuIGltcG9ydGluZyB0aGluZ3MgdGhhdCBtYXkgbm90IGV4aXN0IChidXQgYXJlIGd1YXJhbnRlZWRcbiAqIHRvIGV4aXN0IGF0IHJ1bnRpbWUpLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2NyYW1ibGVEdXJpbmdDb21waWxlVGltZSh0KSB7XG4gICAgcmV0dXJuIHQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/compile-time.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/crypto.js":
/*!********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/crypto.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateRandomValues: () => (/* binding */ generateRandomValues),\n/* harmony export */   generateSecureRandomString: () => (/* binding */ generateSecureRandomString)\n/* harmony export */ });\n/* harmony import */ var _bytes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytes */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/bytes.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./globals */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/globals.js\");\n\n\n\nfunction generateRandomValues(array) {\n    if (!_globals__WEBPACK_IMPORTED_MODULE_2__.globalVar.crypto) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"Crypto API is not available in this environment. Are you using an old browser?\");\n    }\n    if (!_globals__WEBPACK_IMPORTED_MODULE_2__.globalVar.crypto.getRandomValues) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"crypto.getRandomValues is not available in this environment. Are you using an old browser?\");\n    }\n    return _globals__WEBPACK_IMPORTED_MODULE_2__.globalVar.crypto.getRandomValues(array);\n}\n/**\n * Generates a secure alphanumeric string using the system's cryptographically secure\n * random number generator.\n */\nfunction generateSecureRandomString(minBitsOfEntropy = 224) {\n    const base32CharactersCount = Math.ceil(minBitsOfEntropy / 5);\n    const bytesCount = Math.ceil(base32CharactersCount * 5 / 8);\n    const randomBytes = generateRandomValues(new Uint8Array(bytesCount));\n    const str = (0,_bytes__WEBPACK_IMPORTED_MODULE_0__.encodeBase32)(randomBytes);\n    return str.slice(str.length - base32CharactersCount).toLowerCase();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvY3J5cHRvLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXVDO0FBQ1E7QUFDVDtBQUMvQjtBQUNQLFNBQVMsK0NBQVM7QUFDbEIsa0JBQWtCLHdEQUFtQjtBQUNyQztBQUNBLFNBQVMsK0NBQVM7QUFDbEIsa0JBQWtCLHdEQUFtQjtBQUNyQztBQUNBLFdBQVcsK0NBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG9EQUFZO0FBQzVCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZXJwbEFJY2UvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvY3J5cHRvLmpzP2VjMjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW5jb2RlQmFzZTMyIH0gZnJvbSBcIi4vYnl0ZXNcIjtcbmltcG9ydCB7IFN0YWNrQXNzZXJ0aW9uRXJyb3IgfSBmcm9tIFwiLi9lcnJvcnNcIjtcbmltcG9ydCB7IGdsb2JhbFZhciB9IGZyb20gXCIuL2dsb2JhbHNcIjtcbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZVJhbmRvbVZhbHVlcyhhcnJheSkge1xuICAgIGlmICghZ2xvYmFsVmFyLmNyeXB0bykge1xuICAgICAgICB0aHJvdyBuZXcgU3RhY2tBc3NlcnRpb25FcnJvcihcIkNyeXB0byBBUEkgaXMgbm90IGF2YWlsYWJsZSBpbiB0aGlzIGVudmlyb25tZW50LiBBcmUgeW91IHVzaW5nIGFuIG9sZCBicm93c2VyP1wiKTtcbiAgICB9XG4gICAgaWYgKCFnbG9iYWxWYXIuY3J5cHRvLmdldFJhbmRvbVZhbHVlcykge1xuICAgICAgICB0aHJvdyBuZXcgU3RhY2tBc3NlcnRpb25FcnJvcihcImNyeXB0by5nZXRSYW5kb21WYWx1ZXMgaXMgbm90IGF2YWlsYWJsZSBpbiB0aGlzIGVudmlyb25tZW50LiBBcmUgeW91IHVzaW5nIGFuIG9sZCBicm93c2VyP1wiKTtcbiAgICB9XG4gICAgcmV0dXJuIGdsb2JhbFZhci5jcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKGFycmF5KTtcbn1cbi8qKlxuICogR2VuZXJhdGVzIGEgc2VjdXJlIGFscGhhbnVtZXJpYyBzdHJpbmcgdXNpbmcgdGhlIHN5c3RlbSdzIGNyeXB0b2dyYXBoaWNhbGx5IHNlY3VyZVxuICogcmFuZG9tIG51bWJlciBnZW5lcmF0b3IuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZVNlY3VyZVJhbmRvbVN0cmluZyhtaW5CaXRzT2ZFbnRyb3B5ID0gMjI0KSB7XG4gICAgY29uc3QgYmFzZTMyQ2hhcmFjdGVyc0NvdW50ID0gTWF0aC5jZWlsKG1pbkJpdHNPZkVudHJvcHkgLyA1KTtcbiAgICBjb25zdCBieXRlc0NvdW50ID0gTWF0aC5jZWlsKGJhc2UzMkNoYXJhY3RlcnNDb3VudCAqIDUgLyA4KTtcbiAgICBjb25zdCByYW5kb21CeXRlcyA9IGdlbmVyYXRlUmFuZG9tVmFsdWVzKG5ldyBVaW50OEFycmF5KGJ5dGVzQ291bnQpKTtcbiAgICBjb25zdCBzdHIgPSBlbmNvZGVCYXNlMzIocmFuZG9tQnl0ZXMpO1xuICAgIHJldHVybiBzdHIuc2xpY2Uoc3RyLmxlbmd0aCAtIGJhc2UzMkNoYXJhY3RlcnNDb3VudCkudG9Mb3dlckNhc2UoKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/crypto.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/env.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/env.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnvVariable: () => (/* binding */ getEnvVariable),\n/* harmony export */   getNodeEnvironment: () => (/* binding */ getNodeEnvironment),\n/* harmony export */   isBrowserLike: () => (/* binding */ isBrowserLike)\n/* harmony export */ });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./strings */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/strings.js\");\n\n\nfunction isBrowserLike() {\n    return typeof window !== \"undefined\" && typeof document !== \"undefined\" && typeof document.createElement !== \"undefined\";\n}\n/**\n * Returns the environment variable with the given name, returning the default (if given) or throwing an error (otherwise) if it's undefined or the empty string.\n */\nfunction getEnvVariable(name, defaultValue) {\n    if (isBrowserLike()) {\n        throw new Error((0,_strings__WEBPACK_IMPORTED_MODULE_1__.deindent) `\n      Can't use getEnvVariable on the client because Next.js transpiles expressions of the kind process.env.XYZ at build-time on the client.\n    \n      Use process.env.XYZ directly instead.\n    `);\n    }\n    return ((process.env[name] || defaultValue) ?? (0,_errors__WEBPACK_IMPORTED_MODULE_0__.throwErr)(`Missing environment variable: ${name}`)) || (defaultValue ?? (0,_errors__WEBPACK_IMPORTED_MODULE_0__.throwErr)(`Empty environment variable: ${name}`));\n}\nfunction getNodeEnvironment() {\n    return getEnvVariable(\"NODE_ENV\", \"\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvZW52LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW9DO0FBQ0M7QUFDOUI7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLHdCQUF3QixrREFBUTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELGlEQUFRLGtDQUFrQyxLQUFLLHdCQUF3QixpREFBUSxnQ0FBZ0MsS0FBSztBQUN2SztBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtlcnBsQUljZS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9lbnYuanM/MTc0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0aHJvd0VyciB9IGZyb20gXCIuL2Vycm9yc1wiO1xuaW1wb3J0IHsgZGVpbmRlbnQgfSBmcm9tIFwiLi9zdHJpbmdzXCI7XG5leHBvcnQgZnVuY3Rpb24gaXNCcm93c2VyTGlrZSgpIHtcbiAgICByZXR1cm4gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0eXBlb2YgZG9jdW1lbnQgIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQgIT09IFwidW5kZWZpbmVkXCI7XG59XG4vKipcbiAqIFJldHVybnMgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlIHdpdGggdGhlIGdpdmVuIG5hbWUsIHJldHVybmluZyB0aGUgZGVmYXVsdCAoaWYgZ2l2ZW4pIG9yIHRocm93aW5nIGFuIGVycm9yIChvdGhlcndpc2UpIGlmIGl0J3MgdW5kZWZpbmVkIG9yIHRoZSBlbXB0eSBzdHJpbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRFbnZWYXJpYWJsZShuYW1lLCBkZWZhdWx0VmFsdWUpIHtcbiAgICBpZiAoaXNCcm93c2VyTGlrZSgpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihkZWluZGVudCBgXG4gICAgICBDYW4ndCB1c2UgZ2V0RW52VmFyaWFibGUgb24gdGhlIGNsaWVudCBiZWNhdXNlIE5leHQuanMgdHJhbnNwaWxlcyBleHByZXNzaW9ucyBvZiB0aGUga2luZCBwcm9jZXNzLmVudi5YWVogYXQgYnVpbGQtdGltZSBvbiB0aGUgY2xpZW50LlxuICAgIFxuICAgICAgVXNlIHByb2Nlc3MuZW52LlhZWiBkaXJlY3RseSBpbnN0ZWFkLlxuICAgIGApO1xuICAgIH1cbiAgICByZXR1cm4gKChwcm9jZXNzLmVudltuYW1lXSB8fCBkZWZhdWx0VmFsdWUpID8/IHRocm93RXJyKGBNaXNzaW5nIGVudmlyb25tZW50IHZhcmlhYmxlOiAke25hbWV9YCkpIHx8IChkZWZhdWx0VmFsdWUgPz8gdGhyb3dFcnIoYEVtcHR5IGVudmlyb25tZW50IHZhcmlhYmxlOiAke25hbWV9YCkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldE5vZGVFbnZpcm9ubWVudCgpIHtcbiAgICByZXR1cm4gZ2V0RW52VmFyaWFibGUoXCJOT0RFX0VOVlwiLCBcIlwiKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/env.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js":
/*!********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/errors.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StackAssertionError: () => (/* binding */ StackAssertionError),\n/* harmony export */   StatusError: () => (/* binding */ StatusError),\n/* harmony export */   captureError: () => (/* binding */ captureError),\n/* harmony export */   registerErrorSink: () => (/* binding */ registerErrorSink),\n/* harmony export */   throwErr: () => (/* binding */ throwErr)\n/* harmony export */ });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./globals */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/globals.js\");\n\nfunction throwErr(...args) {\n    if (typeof args[0] === \"string\") {\n        throw new StackAssertionError(args[0], args[1]);\n    }\n    else if (args[0] instanceof Error) {\n        throw args[0];\n    }\n    else {\n        // @ts-expect-error\n        throw new StatusError(...args);\n    }\n}\nclass StackAssertionError extends Error {\n    constructor(message, extraData, options) {\n        const disclaimer = `\\n\\nThis is likely an error in Stack. Please make sure you are running the newest version and report it.`;\n        super(`${message}${message.endsWith(disclaimer) ? \"\" : disclaimer}`, options);\n        this.extraData = extraData;\n        this.customCaptureExtraArgs = [\n            {\n                ...this.extraData,\n                ...this.cause ? { cause: this.cause } : {},\n            },\n        ];\n    }\n}\nStackAssertionError.prototype.name = \"StackAssertionError\";\nconst errorSinks = new Set();\nfunction registerErrorSink(sink) {\n    if (errorSinks.has(sink)) {\n        return;\n    }\n    errorSinks.add(sink);\n}\nregisterErrorSink((location, ...args) => {\n    console.error(`\\x1b[41mError in ${location}:`, ...args, \"\\x1b[0m\");\n});\nregisterErrorSink((location, error, ...extraArgs) => {\n    _globals__WEBPACK_IMPORTED_MODULE_0__.globalVar.stackCapturedErrors = _globals__WEBPACK_IMPORTED_MODULE_0__.globalVar.stackCapturedErrors ?? [];\n    _globals__WEBPACK_IMPORTED_MODULE_0__.globalVar.stackCapturedErrors.push({ location, error, extraArgs });\n});\nfunction captureError(location, error) {\n    for (const sink of errorSinks) {\n        sink(location, error, ...error && (typeof error === 'object' || typeof error === 'function') && \"customCaptureExtraArgs\" in error && Array.isArray(error.customCaptureExtraArgs) ? error.customCaptureExtraArgs : []);\n    }\n}\nclass StatusError extends Error {\n    constructor(status, message) {\n        if (typeof status === \"object\") {\n            message ??= status.message;\n            status = status.statusCode;\n        }\n        super(message);\n        this.name = \"StatusError\";\n        this.statusCode = status;\n        if (!message) {\n            throw new StackAssertionError(\"StatusError always requires a message unless a Status object is passed\", {}, { cause: this });\n        }\n    }\n    isClientError() {\n        return this.statusCode >= 400 && this.statusCode < 500;\n    }\n    isServerError() {\n        return !this.isClientError();\n    }\n    getStatusCode() {\n        return this.statusCode;\n    }\n    getBody() {\n        return new TextEncoder().encode(this.message);\n    }\n    getHeaders() {\n        return {\n            \"Content-Type\": [\"text/plain; charset=utf-8\"],\n        };\n    }\n    toDescriptiveJson() {\n        return {\n            status_code: this.getStatusCode(),\n            message: this.message,\n            headers: this.getHeaders(),\n        };\n    }\n    /**\n     * @deprecated this is not a good way to make status errors human-readable, use toDescriptiveJson instead\n     */\n    toHttpJson() {\n        return {\n            status_code: this.statusCode,\n            body: this.message,\n            headers: this.getHeaders(),\n        };\n    }\n}\nStatusError.BadRequest = { statusCode: 400, message: \"Bad Request\" };\nStatusError.Unauthorized = { statusCode: 401, message: \"Unauthorized\" };\nStatusError.PaymentRequired = { statusCode: 402, message: \"Payment Required\" };\nStatusError.Forbidden = { statusCode: 403, message: \"Forbidden\" };\nStatusError.NotFound = { statusCode: 404, message: \"Not Found\" };\nStatusError.MethodNotAllowed = { statusCode: 405, message: \"Method Not Allowed\" };\nStatusError.NotAcceptable = { statusCode: 406, message: \"Not Acceptable\" };\nStatusError.ProxyAuthenticationRequired = { statusCode: 407, message: \"Proxy Authentication Required\" };\nStatusError.RequestTimeout = { statusCode: 408, message: \"Request Timeout\" };\nStatusError.Conflict = { statusCode: 409, message: \"Conflict\" };\nStatusError.Gone = { statusCode: 410, message: \"Gone\" };\nStatusError.LengthRequired = { statusCode: 411, message: \"Length Required\" };\nStatusError.PreconditionFailed = { statusCode: 412, message: \"Precondition Failed\" };\nStatusError.PayloadTooLarge = { statusCode: 413, message: \"Payload Too Large\" };\nStatusError.URITooLong = { statusCode: 414, message: \"URI Too Long\" };\nStatusError.UnsupportedMediaType = { statusCode: 415, message: \"Unsupported Media Type\" };\nStatusError.RangeNotSatisfiable = { statusCode: 416, message: \"Range Not Satisfiable\" };\nStatusError.ExpectationFailed = { statusCode: 417, message: \"Expectation Failed\" };\nStatusError.ImATeapot = { statusCode: 418, message: \"I'm a teapot\" };\nStatusError.MisdirectedRequest = { statusCode: 421, message: \"Misdirected Request\" };\nStatusError.UnprocessableEntity = { statusCode: 422, message: \"Unprocessable Entity\" };\nStatusError.Locked = { statusCode: 423, message: \"Locked\" };\nStatusError.FailedDependency = { statusCode: 424, message: \"Failed Dependency\" };\nStatusError.TooEarly = { statusCode: 425, message: \"Too Early\" };\nStatusError.UpgradeRequired = { statusCode: 426, message: \"Upgrade Required\" };\nStatusError.PreconditionRequired = { statusCode: 428, message: \"Precondition Required\" };\nStatusError.TooManyRequests = { statusCode: 429, message: \"Too Many Requests\" };\nStatusError.RequestHeaderFieldsTooLarge = { statusCode: 431, message: \"Request Header Fields Too Large\" };\nStatusError.UnavailableForLegalReasons = { statusCode: 451, message: \"Unavailable For Legal Reasons\" };\nStatusError.InternalServerError = { statusCode: 500, message: \"Internal Server Error\" };\nStatusError.NotImplemented = { statusCode: 501, message: \"Not Implemented\" };\nStatusError.BadGateway = { statusCode: 502, message: \"Bad Gateway\" };\nStatusError.ServiceUnavailable = { statusCode: 503, message: \"Service Unavailable\" };\nStatusError.GatewayTimeout = { statusCode: 504, message: \"Gateway Timeout\" };\nStatusError.HTTPVersionNotSupported = { statusCode: 505, message: \"HTTP Version Not Supported\" };\nStatusError.VariantAlsoNegotiates = { statusCode: 506, message: \"Variant Also Negotiates\" };\nStatusError.InsufficientStorage = { statusCode: 507, message: \"Insufficient Storage\" };\nStatusError.LoopDetected = { statusCode: 508, message: \"Loop Detected\" };\nStatusError.NotExtended = { statusCode: 510, message: \"Not Extended\" };\nStatusError.NetworkAuthenticationRequired = { statusCode: 511, message: \"Network Authentication Required\" };\nStatusError.prototype.name = \"StatusError\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/functions.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/functions.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity),\n/* harmony export */   identityArgs: () => (/* binding */ identityArgs)\n/* harmony export */ });\nfunction identity(t) {\n    return t;\n}\nfunction identityArgs(...args) {\n    return args;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvZnVuY3Rpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2VycGxBSWNlLy4vbm9kZV9tb2R1bGVzL0BzdGFja2ZyYW1lL3N0YWNrLXNoYXJlZC9kaXN0L3V0aWxzL2Z1bmN0aW9ucy5qcz84ZDMwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpZGVudGl0eSh0KSB7XG4gICAgcmV0dXJuIHQ7XG59XG5leHBvcnQgZnVuY3Rpb24gaWRlbnRpdHlBcmdzKC4uLmFyZ3MpIHtcbiAgICByZXR1cm4gYXJncztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/functions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/globals.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/globals.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGlobal: () => (/* binding */ createGlobal),\n/* harmony export */   globalVar: () => (/* binding */ globalVar)\n/* harmony export */ });\nconst globalVar = typeof globalThis !== 'undefined' ? globalThis :\n    typeof global !== 'undefined' ? global :\n        typeof window !== 'undefined' ? window :\n            typeof self !== 'undefined' ? self :\n                {};\n\nif (typeof globalThis === 'undefined') {\n    globalVar.globalThis = globalVar;\n}\nconst stackGlobalsSymbol = Symbol.for('__stack-globals');\nglobalVar[stackGlobalsSymbol] ??= {};\nfunction createGlobal(key, init) {\n    if (!globalVar[stackGlobalsSymbol][key]) {\n        globalVar[stackGlobalsSymbol][key] = init();\n    }\n    return globalVar[stackGlobalsSymbol][key];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvZ2xvYmFscy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtlcnBsQUljZS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9nbG9iYWxzLmpzPzQ3NTIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZ2xvYmFsVmFyID0gdHlwZW9mIGdsb2JhbFRoaXMgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsVGhpcyA6XG4gICAgdHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyBnbG9iYWwgOlxuICAgICAgICB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHdpbmRvdyA6XG4gICAgICAgICAgICB0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcgPyBzZWxmIDpcbiAgICAgICAgICAgICAgICB7fTtcbmV4cG9ydCB7IGdsb2JhbFZhciwgfTtcbmlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBnbG9iYWxWYXIuZ2xvYmFsVGhpcyA9IGdsb2JhbFZhcjtcbn1cbmNvbnN0IHN0YWNrR2xvYmFsc1N5bWJvbCA9IFN5bWJvbC5mb3IoJ19fc3RhY2stZ2xvYmFscycpO1xuZ2xvYmFsVmFyW3N0YWNrR2xvYmFsc1N5bWJvbF0gPz89IHt9O1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUdsb2JhbChrZXksIGluaXQpIHtcbiAgICBpZiAoIWdsb2JhbFZhcltzdGFja0dsb2JhbHNTeW1ib2xdW2tleV0pIHtcbiAgICAgICAgZ2xvYmFsVmFyW3N0YWNrR2xvYmFsc1N5bWJvbF1ba2V5XSA9IGluaXQoKTtcbiAgICB9XG4gICAgcmV0dXJuIGdsb2JhbFZhcltzdGFja0dsb2JhbHNTeW1ib2xdW2tleV07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/globals.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/maps.js":
/*!******************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/maps.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DependenciesMap: () => (/* binding */ DependenciesMap),\n/* harmony export */   MaybeWeakMap: () => (/* binding */ MaybeWeakMap)\n/* harmony export */ });\n/* harmony import */ var _results__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./results */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/results.js\");\nvar _a, _b;\n\nclass MaybeWeakMap {\n    constructor(entries) {\n        this[_a] = \"MaybeWeakMap\";\n        const entriesArray = [...entries ?? []];\n        this._primitiveMap = new Map(entriesArray.filter((e) => !this._isAllowedInWeakMap(e[0])));\n        this._weakMap = new WeakMap(entriesArray.filter((e) => this._isAllowedInWeakMap(e[0])));\n    }\n    _isAllowedInWeakMap(key) {\n        return (typeof key === \"object\" && key !== null) || (typeof key === \"symbol\" && Symbol.keyFor(key) === undefined);\n    }\n    get(key) {\n        if (this._isAllowedInWeakMap(key)) {\n            return this._weakMap.get(key);\n        }\n        else {\n            return this._primitiveMap.get(key);\n        }\n    }\n    set(key, value) {\n        if (this._isAllowedInWeakMap(key)) {\n            this._weakMap.set(key, value);\n        }\n        else {\n            this._primitiveMap.set(key, value);\n        }\n        return this;\n    }\n    delete(key) {\n        if (this._isAllowedInWeakMap(key)) {\n            return this._weakMap.delete(key);\n        }\n        else {\n            return this._primitiveMap.delete(key);\n        }\n    }\n    has(key) {\n        if (this._isAllowedInWeakMap(key)) {\n            return this._weakMap.has(key);\n        }\n        else {\n            return this._primitiveMap.has(key);\n        }\n    }\n}\n_a = Symbol.toStringTag;\nclass DependenciesMap {\n    constructor() {\n        this._inner = { map: new MaybeWeakMap(), hasValue: false, value: undefined };\n        this[_b] = \"DependenciesMap\";\n    }\n    _valueToResult(inner) {\n        if (inner.hasValue) {\n            return _results__WEBPACK_IMPORTED_MODULE_0__.Result.ok(inner.value);\n        }\n        else {\n            return _results__WEBPACK_IMPORTED_MODULE_0__.Result.error(undefined);\n        }\n    }\n    _unwrapFromInner(dependencies, inner) {\n        if ((dependencies.length === 0)) {\n            return this._valueToResult(inner);\n        }\n        else {\n            const [key, ...rest] = dependencies;\n            const newInner = inner.map.get(key);\n            if (!newInner) {\n                return _results__WEBPACK_IMPORTED_MODULE_0__.Result.error(undefined);\n            }\n            return this._unwrapFromInner(rest, newInner);\n        }\n    }\n    _setInInner(dependencies, value, inner) {\n        if (dependencies.length === 0) {\n            const res = this._valueToResult(inner);\n            if (value.status === \"ok\") {\n                inner.hasValue = true;\n                inner.value = value.data;\n            }\n            else {\n                inner.hasValue = false;\n                inner.value = undefined;\n            }\n            return res;\n        }\n        else {\n            const [key, ...rest] = dependencies;\n            let newInner = inner.map.get(key);\n            if (!newInner) {\n                inner.map.set(key, newInner = { map: new MaybeWeakMap(), hasValue: false, value: undefined });\n            }\n            return this._setInInner(rest, value, newInner);\n        }\n    }\n    get(dependencies) {\n        return _results__WEBPACK_IMPORTED_MODULE_0__.Result.or(this._unwrapFromInner(dependencies, this._inner), undefined);\n    }\n    set(dependencies, value) {\n        this._setInInner(dependencies, _results__WEBPACK_IMPORTED_MODULE_0__.Result.ok(value), this._inner);\n        return this;\n    }\n    delete(dependencies) {\n        return this._setInInner(dependencies, _results__WEBPACK_IMPORTED_MODULE_0__.Result.error(undefined), this._inner).status === \"ok\";\n    }\n    has(dependencies) {\n        return this._unwrapFromInner(dependencies, this._inner).status === \"ok\";\n    }\n    clear() {\n        this._inner = { map: new MaybeWeakMap(), hasValue: false, value: undefined };\n    }\n}\n_b = Symbol.toStringTag;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvbWFwcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNtQztBQUM1QjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDRDQUFNO0FBQ3pCO0FBQ0E7QUFDQSxtQkFBbUIsNENBQU07QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsNENBQU07QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELDREQUE0RDtBQUM1RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSw0Q0FBTTtBQUNyQjtBQUNBO0FBQ0EsdUNBQXVDLDRDQUFNO0FBQzdDO0FBQ0E7QUFDQTtBQUNBLDhDQUE4Qyw0Q0FBTTtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtlcnBsQUljZS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9tYXBzLmpzPzc1NDgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9hLCBfYjtcbmltcG9ydCB7IFJlc3VsdCB9IGZyb20gXCIuL3Jlc3VsdHNcIjtcbmV4cG9ydCBjbGFzcyBNYXliZVdlYWtNYXAge1xuICAgIGNvbnN0cnVjdG9yKGVudHJpZXMpIHtcbiAgICAgICAgdGhpc1tfYV0gPSBcIk1heWJlV2Vha01hcFwiO1xuICAgICAgICBjb25zdCBlbnRyaWVzQXJyYXkgPSBbLi4uZW50cmllcyA/PyBbXV07XG4gICAgICAgIHRoaXMuX3ByaW1pdGl2ZU1hcCA9IG5ldyBNYXAoZW50cmllc0FycmF5LmZpbHRlcigoZSkgPT4gIXRoaXMuX2lzQWxsb3dlZEluV2Vha01hcChlWzBdKSkpO1xuICAgICAgICB0aGlzLl93ZWFrTWFwID0gbmV3IFdlYWtNYXAoZW50cmllc0FycmF5LmZpbHRlcigoZSkgPT4gdGhpcy5faXNBbGxvd2VkSW5XZWFrTWFwKGVbMF0pKSk7XG4gICAgfVxuICAgIF9pc0FsbG93ZWRJbldlYWtNYXAoa2V5KSB7XG4gICAgICAgIHJldHVybiAodHlwZW9mIGtleSA9PT0gXCJvYmplY3RcIiAmJiBrZXkgIT09IG51bGwpIHx8ICh0eXBlb2Yga2V5ID09PSBcInN5bWJvbFwiICYmIFN5bWJvbC5rZXlGb3Ioa2V5KSA9PT0gdW5kZWZpbmVkKTtcbiAgICB9XG4gICAgZ2V0KGtleSkge1xuICAgICAgICBpZiAodGhpcy5faXNBbGxvd2VkSW5XZWFrTWFwKGtleSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl93ZWFrTWFwLmdldChrZXkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3ByaW1pdGl2ZU1hcC5nZXQoa2V5KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzZXQoa2V5LCB2YWx1ZSkge1xuICAgICAgICBpZiAodGhpcy5faXNBbGxvd2VkSW5XZWFrTWFwKGtleSkpIHtcbiAgICAgICAgICAgIHRoaXMuX3dlYWtNYXAuc2V0KGtleSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fcHJpbWl0aXZlTWFwLnNldChrZXksIHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgZGVsZXRlKGtleSkge1xuICAgICAgICBpZiAodGhpcy5faXNBbGxvd2VkSW5XZWFrTWFwKGtleSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl93ZWFrTWFwLmRlbGV0ZShrZXkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3ByaW1pdGl2ZU1hcC5kZWxldGUoa2V5KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBoYXMoa2V5KSB7XG4gICAgICAgIGlmICh0aGlzLl9pc0FsbG93ZWRJbldlYWtNYXAoa2V5KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3dlYWtNYXAuaGFzKGtleSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fcHJpbWl0aXZlTWFwLmhhcyhrZXkpO1xuICAgICAgICB9XG4gICAgfVxufVxuX2EgPSBTeW1ib2wudG9TdHJpbmdUYWc7XG5leHBvcnQgY2xhc3MgRGVwZW5kZW5jaWVzTWFwIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5faW5uZXIgPSB7IG1hcDogbmV3IE1heWJlV2Vha01hcCgpLCBoYXNWYWx1ZTogZmFsc2UsIHZhbHVlOiB1bmRlZmluZWQgfTtcbiAgICAgICAgdGhpc1tfYl0gPSBcIkRlcGVuZGVuY2llc01hcFwiO1xuICAgIH1cbiAgICBfdmFsdWVUb1Jlc3VsdChpbm5lcikge1xuICAgICAgICBpZiAoaW5uZXIuaGFzVmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiBSZXN1bHQub2soaW5uZXIudmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFJlc3VsdC5lcnJvcih1bmRlZmluZWQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIF91bndyYXBGcm9tSW5uZXIoZGVwZW5kZW5jaWVzLCBpbm5lcikge1xuICAgICAgICBpZiAoKGRlcGVuZGVuY2llcy5sZW5ndGggPT09IDApKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fdmFsdWVUb1Jlc3VsdChpbm5lcik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBba2V5LCAuLi5yZXN0XSA9IGRlcGVuZGVuY2llcztcbiAgICAgICAgICAgIGNvbnN0IG5ld0lubmVyID0gaW5uZXIubWFwLmdldChrZXkpO1xuICAgICAgICAgICAgaWYgKCFuZXdJbm5lcikge1xuICAgICAgICAgICAgICAgIHJldHVybiBSZXN1bHQuZXJyb3IodW5kZWZpbmVkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLl91bndyYXBGcm9tSW5uZXIocmVzdCwgbmV3SW5uZXIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIF9zZXRJbklubmVyKGRlcGVuZGVuY2llcywgdmFsdWUsIGlubmVyKSB7XG4gICAgICAgIGlmIChkZXBlbmRlbmNpZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBjb25zdCByZXMgPSB0aGlzLl92YWx1ZVRvUmVzdWx0KGlubmVyKTtcbiAgICAgICAgICAgIGlmICh2YWx1ZS5zdGF0dXMgPT09IFwib2tcIikge1xuICAgICAgICAgICAgICAgIGlubmVyLmhhc1ZhbHVlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBpbm5lci52YWx1ZSA9IHZhbHVlLmRhdGE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBpbm5lci5oYXNWYWx1ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGlubmVyLnZhbHVlID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlcztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IFtrZXksIC4uLnJlc3RdID0gZGVwZW5kZW5jaWVzO1xuICAgICAgICAgICAgbGV0IG5ld0lubmVyID0gaW5uZXIubWFwLmdldChrZXkpO1xuICAgICAgICAgICAgaWYgKCFuZXdJbm5lcikge1xuICAgICAgICAgICAgICAgIGlubmVyLm1hcC5zZXQoa2V5LCBuZXdJbm5lciA9IHsgbWFwOiBuZXcgTWF5YmVXZWFrTWFwKCksIGhhc1ZhbHVlOiBmYWxzZSwgdmFsdWU6IHVuZGVmaW5lZCB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9zZXRJbklubmVyKHJlc3QsIHZhbHVlLCBuZXdJbm5lcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0KGRlcGVuZGVuY2llcykge1xuICAgICAgICByZXR1cm4gUmVzdWx0Lm9yKHRoaXMuX3Vud3JhcEZyb21Jbm5lcihkZXBlbmRlbmNpZXMsIHRoaXMuX2lubmVyKSwgdW5kZWZpbmVkKTtcbiAgICB9XG4gICAgc2V0KGRlcGVuZGVuY2llcywgdmFsdWUpIHtcbiAgICAgICAgdGhpcy5fc2V0SW5Jbm5lcihkZXBlbmRlbmNpZXMsIFJlc3VsdC5vayh2YWx1ZSksIHRoaXMuX2lubmVyKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGRlbGV0ZShkZXBlbmRlbmNpZXMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NldEluSW5uZXIoZGVwZW5kZW5jaWVzLCBSZXN1bHQuZXJyb3IodW5kZWZpbmVkKSwgdGhpcy5faW5uZXIpLnN0YXR1cyA9PT0gXCJva1wiO1xuICAgIH1cbiAgICBoYXMoZGVwZW5kZW5jaWVzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl91bndyYXBGcm9tSW5uZXIoZGVwZW5kZW5jaWVzLCB0aGlzLl9pbm5lcikuc3RhdHVzID09PSBcIm9rXCI7XG4gICAgfVxuICAgIGNsZWFyKCkge1xuICAgICAgICB0aGlzLl9pbm5lciA9IHsgbWFwOiBuZXcgTWF5YmVXZWFrTWFwKCksIGhhc1ZhbHVlOiBmYWxzZSwgdmFsdWU6IHVuZGVmaW5lZCB9O1xuICAgIH1cbn1cbl9iID0gU3ltYm9sLnRvU3RyaW5nVGFnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/maps.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/math.js":
/*!******************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/math.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   remainder: () => (/* binding */ remainder)\n/* harmony export */ });\n/**\n * Similar to the modulo operator, but always returns a positive number (even when the input is negative).\n */\nfunction remainder(n, d) {\n    return ((n % d) + Math.abs(d)) % d;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvbWF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2VycGxBSWNlLy4vbm9kZV9tb2R1bGVzL0BzdGFja2ZyYW1lL3N0YWNrLXNoYXJlZC9kaXN0L3V0aWxzL21hdGguanM/ZWI2OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNpbWlsYXIgdG8gdGhlIG1vZHVsbyBvcGVyYXRvciwgYnV0IGFsd2F5cyByZXR1cm5zIGEgcG9zaXRpdmUgbnVtYmVyIChldmVuIHdoZW4gdGhlIGlucHV0IGlzIG5lZ2F0aXZlKS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlbWFpbmRlcihuLCBkKSB7XG4gICAgcmV0dXJuICgobiAlIGQpICsgTWF0aC5hYnMoZCkpICUgZDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/math.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/objects.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/objects.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deepPlainCamelCaseToSnakeCase: () => (/* binding */ deepPlainCamelCaseToSnakeCase),\n/* harmony export */   deepPlainClone: () => (/* binding */ deepPlainClone),\n/* harmony export */   deepPlainEquals: () => (/* binding */ deepPlainEquals),\n/* harmony export */   deepPlainSnakeCaseToCamelCase: () => (/* binding */ deepPlainSnakeCaseToCamelCase),\n/* harmony export */   filterUndefined: () => (/* binding */ filterUndefined),\n/* harmony export */   omit: () => (/* binding */ omit),\n/* harmony export */   pick: () => (/* binding */ pick),\n/* harmony export */   split: () => (/* binding */ split),\n/* harmony export */   typedAssign: () => (/* binding */ typedAssign),\n/* harmony export */   typedEntries: () => (/* binding */ typedEntries),\n/* harmony export */   typedFromEntries: () => (/* binding */ typedFromEntries),\n/* harmony export */   typedKeys: () => (/* binding */ typedKeys),\n/* harmony export */   typedValues: () => (/* binding */ typedValues)\n/* harmony export */ });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./strings */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/strings.js\");\n\n\n/**\n * Assumes both objects are primitives, arrays, or non-function plain objects, and compares them deeply.\n *\n * Note that since they are assumed to be plain objects, this function does not compare prototypes.\n */\nfunction deepPlainEquals(obj1, obj2, options = {}) {\n    if (typeof obj1 !== typeof obj2)\n        return false;\n    if (obj1 === obj2)\n        return true;\n    switch (typeof obj1) {\n        case 'object': {\n            if (!obj1 || !obj2)\n                return false;\n            if (Array.isArray(obj1) || Array.isArray(obj2)) {\n                if (!Array.isArray(obj1) || !Array.isArray(obj2))\n                    return false;\n                if (obj1.length !== obj2.length)\n                    return false;\n                return obj1.every((v, i) => deepPlainEquals(v, obj2[i], options));\n            }\n            const entries1 = Object.entries(obj1).filter(([k, v]) => !options.ignoreUndefinedValues || v !== undefined);\n            const entries2 = Object.entries(obj2).filter(([k, v]) => !options.ignoreUndefinedValues || v !== undefined);\n            if (entries1.length !== entries2.length)\n                return false;\n            return entries1.every(([k, v1]) => {\n                const e2 = entries2.find(([k2]) => k === k2);\n                if (!e2)\n                    return false;\n                return deepPlainEquals(v1, e2[1], options);\n            });\n        }\n        case 'undefined':\n        case 'string':\n        case 'number':\n        case 'boolean':\n        case 'bigint':\n        case 'symbol':\n        case 'function': {\n            return false;\n        }\n        default: {\n            throw new Error(\"Unexpected typeof \" + typeof obj1);\n        }\n    }\n}\nfunction deepPlainClone(obj) {\n    if (typeof obj === 'function')\n        throw new _errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"deepPlainClone does not support functions\");\n    if (typeof obj === 'symbol')\n        throw new _errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"deepPlainClone does not support symbols\");\n    if (typeof obj !== 'object' || !obj)\n        return obj;\n    if (Array.isArray(obj))\n        return obj.map(deepPlainClone);\n    return Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, deepPlainClone(v)]));\n}\nfunction deepPlainSnakeCaseToCamelCase(snakeCaseObj) {\n    if (typeof snakeCaseObj === 'function')\n        throw new _errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"deepPlainSnakeCaseToCamelCase does not support functions\");\n    if (typeof snakeCaseObj !== 'object' || !snakeCaseObj)\n        return snakeCaseObj;\n    if (Array.isArray(snakeCaseObj))\n        return snakeCaseObj.map(o => deepPlainSnakeCaseToCamelCase(o));\n    return Object.fromEntries(Object.entries(snakeCaseObj).map(([k, v]) => [(0,_strings__WEBPACK_IMPORTED_MODULE_1__.snakeCaseToCamelCase)(k), deepPlainSnakeCaseToCamelCase(v)]));\n}\nfunction deepPlainCamelCaseToSnakeCase(camelCaseObj) {\n    if (typeof camelCaseObj === 'function')\n        throw new _errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"deepPlainCamelCaseToSnakeCase does not support functions\");\n    if (typeof camelCaseObj !== 'object' || !camelCaseObj)\n        return camelCaseObj;\n    if (Array.isArray(camelCaseObj))\n        return camelCaseObj.map(o => deepPlainCamelCaseToSnakeCase(o));\n    return Object.fromEntries(Object.entries(camelCaseObj).map(([k, v]) => [(0,_strings__WEBPACK_IMPORTED_MODULE_1__.camelCaseToSnakeCase)(k), deepPlainCamelCaseToSnakeCase(v)]));\n}\nfunction typedEntries(obj) {\n    return Object.entries(obj);\n}\nfunction typedFromEntries(entries) {\n    return Object.fromEntries(entries);\n}\nfunction typedKeys(obj) {\n    return Object.keys(obj);\n}\nfunction typedValues(obj) {\n    return Object.values(obj);\n}\nfunction typedAssign(target, source) {\n    return Object.assign(target, source);\n}\n/**\n * Returns a new object with all undefined values removed. Useful when spreading optional parameters on an object, as\n * TypeScript's `Partial<XYZ>` type allows `undefined` values.\n */\nfunction filterUndefined(obj) {\n    return Object.fromEntries(Object.entries(obj).filter(([, v]) => v !== undefined));\n}\nfunction pick(obj, keys) {\n    return Object.fromEntries(Object.entries(obj).filter(([k]) => keys.includes(k)));\n}\nfunction omit(obj, keys) {\n    return Object.fromEntries(Object.entries(obj).filter(([k]) => !keys.includes(k)));\n}\nfunction split(obj, keys) {\n    return [pick(obj, keys), omit(obj, keys)];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvb2JqZWN0cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBK0M7QUFDd0I7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGlEQUFpRDtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGtCQUFrQix3REFBbUI7QUFDckM7QUFDQSxrQkFBa0Isd0RBQW1CO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxrQkFBa0Isd0RBQW1CO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEVBQTRFLDhEQUFvQjtBQUNoRztBQUNPO0FBQ1A7QUFDQSxrQkFBa0Isd0RBQW1CO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEVBQTRFLDhEQUFvQjtBQUNoRztBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2VycGxBSWNlLy4vbm9kZV9tb2R1bGVzL0BzdGFja2ZyYW1lL3N0YWNrLXNoYXJlZC9kaXN0L3V0aWxzL29iamVjdHMuanM/ZTkzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdGFja0Fzc2VydGlvbkVycm9yIH0gZnJvbSBcIi4vZXJyb3JzXCI7XG5pbXBvcnQgeyBjYW1lbENhc2VUb1NuYWtlQ2FzZSwgc25ha2VDYXNlVG9DYW1lbENhc2UgfSBmcm9tIFwiLi9zdHJpbmdzXCI7XG4vKipcbiAqIEFzc3VtZXMgYm90aCBvYmplY3RzIGFyZSBwcmltaXRpdmVzLCBhcnJheXMsIG9yIG5vbi1mdW5jdGlvbiBwbGFpbiBvYmplY3RzLCBhbmQgY29tcGFyZXMgdGhlbSBkZWVwbHkuXG4gKlxuICogTm90ZSB0aGF0IHNpbmNlIHRoZXkgYXJlIGFzc3VtZWQgdG8gYmUgcGxhaW4gb2JqZWN0cywgdGhpcyBmdW5jdGlvbiBkb2VzIG5vdCBjb21wYXJlIHByb3RvdHlwZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWVwUGxhaW5FcXVhbHMob2JqMSwgb2JqMiwgb3B0aW9ucyA9IHt9KSB7XG4gICAgaWYgKHR5cGVvZiBvYmoxICE9PSB0eXBlb2Ygb2JqMilcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChvYmoxID09PSBvYmoyKVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICBzd2l0Y2ggKHR5cGVvZiBvYmoxKSB7XG4gICAgICAgIGNhc2UgJ29iamVjdCc6IHtcbiAgICAgICAgICAgIGlmICghb2JqMSB8fCAhb2JqMilcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShvYmoxKSB8fCBBcnJheS5pc0FycmF5KG9iajIpKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KG9iajEpIHx8ICFBcnJheS5pc0FycmF5KG9iajIpKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgaWYgKG9iajEubGVuZ3RoICE9PSBvYmoyLmxlbmd0aClcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIHJldHVybiBvYmoxLmV2ZXJ5KCh2LCBpKSA9PiBkZWVwUGxhaW5FcXVhbHModiwgb2JqMltpXSwgb3B0aW9ucykpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZW50cmllczEgPSBPYmplY3QuZW50cmllcyhvYmoxKS5maWx0ZXIoKFtrLCB2XSkgPT4gIW9wdGlvbnMuaWdub3JlVW5kZWZpbmVkVmFsdWVzIHx8IHYgIT09IHVuZGVmaW5lZCk7XG4gICAgICAgICAgICBjb25zdCBlbnRyaWVzMiA9IE9iamVjdC5lbnRyaWVzKG9iajIpLmZpbHRlcigoW2ssIHZdKSA9PiAhb3B0aW9ucy5pZ25vcmVVbmRlZmluZWRWYWx1ZXMgfHwgdiAhPT0gdW5kZWZpbmVkKTtcbiAgICAgICAgICAgIGlmIChlbnRyaWVzMS5sZW5ndGggIT09IGVudHJpZXMyLmxlbmd0aClcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICByZXR1cm4gZW50cmllczEuZXZlcnkoKFtrLCB2MV0pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBlMiA9IGVudHJpZXMyLmZpbmQoKFtrMl0pID0+IGsgPT09IGsyKTtcbiAgICAgICAgICAgICAgICBpZiAoIWUyKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRlZXBQbGFpbkVxdWFscyh2MSwgZTJbMV0sIG9wdGlvbnMpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAndW5kZWZpbmVkJzpcbiAgICAgICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgICAgY2FzZSAnbnVtYmVyJzpcbiAgICAgICAgY2FzZSAnYm9vbGVhbic6XG4gICAgICAgIGNhc2UgJ2JpZ2ludCc6XG4gICAgICAgIGNhc2UgJ3N5bWJvbCc6XG4gICAgICAgIGNhc2UgJ2Z1bmN0aW9uJzoge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVuZXhwZWN0ZWQgdHlwZW9mIFwiICsgdHlwZW9mIG9iajEpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGRlZXBQbGFpbkNsb25lKG9iaikge1xuICAgIGlmICh0eXBlb2Ygb2JqID09PSAnZnVuY3Rpb24nKVxuICAgICAgICB0aHJvdyBuZXcgU3RhY2tBc3NlcnRpb25FcnJvcihcImRlZXBQbGFpbkNsb25lIGRvZXMgbm90IHN1cHBvcnQgZnVuY3Rpb25zXCIpO1xuICAgIGlmICh0eXBlb2Ygb2JqID09PSAnc3ltYm9sJylcbiAgICAgICAgdGhyb3cgbmV3IFN0YWNrQXNzZXJ0aW9uRXJyb3IoXCJkZWVwUGxhaW5DbG9uZSBkb2VzIG5vdCBzdXBwb3J0IHN5bWJvbHNcIik7XG4gICAgaWYgKHR5cGVvZiBvYmogIT09ICdvYmplY3QnIHx8ICFvYmopXG4gICAgICAgIHJldHVybiBvYmo7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkob2JqKSlcbiAgICAgICAgcmV0dXJuIG9iai5tYXAoZGVlcFBsYWluQ2xvbmUpO1xuICAgIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXMob2JqKS5tYXAoKFtrLCB2XSkgPT4gW2ssIGRlZXBQbGFpbkNsb25lKHYpXSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlZXBQbGFpblNuYWtlQ2FzZVRvQ2FtZWxDYXNlKHNuYWtlQ2FzZU9iaikge1xuICAgIGlmICh0eXBlb2Ygc25ha2VDYXNlT2JqID09PSAnZnVuY3Rpb24nKVxuICAgICAgICB0aHJvdyBuZXcgU3RhY2tBc3NlcnRpb25FcnJvcihcImRlZXBQbGFpblNuYWtlQ2FzZVRvQ2FtZWxDYXNlIGRvZXMgbm90IHN1cHBvcnQgZnVuY3Rpb25zXCIpO1xuICAgIGlmICh0eXBlb2Ygc25ha2VDYXNlT2JqICE9PSAnb2JqZWN0JyB8fCAhc25ha2VDYXNlT2JqKVxuICAgICAgICByZXR1cm4gc25ha2VDYXNlT2JqO1xuICAgIGlmIChBcnJheS5pc0FycmF5KHNuYWtlQ2FzZU9iaikpXG4gICAgICAgIHJldHVybiBzbmFrZUNhc2VPYmoubWFwKG8gPT4gZGVlcFBsYWluU25ha2VDYXNlVG9DYW1lbENhc2UobykpO1xuICAgIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXMoc25ha2VDYXNlT2JqKS5tYXAoKFtrLCB2XSkgPT4gW3NuYWtlQ2FzZVRvQ2FtZWxDYXNlKGspLCBkZWVwUGxhaW5TbmFrZUNhc2VUb0NhbWVsQ2FzZSh2KV0pKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWVwUGxhaW5DYW1lbENhc2VUb1NuYWtlQ2FzZShjYW1lbENhc2VPYmopIHtcbiAgICBpZiAodHlwZW9mIGNhbWVsQ2FzZU9iaiA9PT0gJ2Z1bmN0aW9uJylcbiAgICAgICAgdGhyb3cgbmV3IFN0YWNrQXNzZXJ0aW9uRXJyb3IoXCJkZWVwUGxhaW5DYW1lbENhc2VUb1NuYWtlQ2FzZSBkb2VzIG5vdCBzdXBwb3J0IGZ1bmN0aW9uc1wiKTtcbiAgICBpZiAodHlwZW9mIGNhbWVsQ2FzZU9iaiAhPT0gJ29iamVjdCcgfHwgIWNhbWVsQ2FzZU9iailcbiAgICAgICAgcmV0dXJuIGNhbWVsQ2FzZU9iajtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShjYW1lbENhc2VPYmopKVxuICAgICAgICByZXR1cm4gY2FtZWxDYXNlT2JqLm1hcChvID0+IGRlZXBQbGFpbkNhbWVsQ2FzZVRvU25ha2VDYXNlKG8pKTtcbiAgICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKE9iamVjdC5lbnRyaWVzKGNhbWVsQ2FzZU9iaikubWFwKChbaywgdl0pID0+IFtjYW1lbENhc2VUb1NuYWtlQ2FzZShrKSwgZGVlcFBsYWluQ2FtZWxDYXNlVG9TbmFrZUNhc2UodildKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gdHlwZWRFbnRyaWVzKG9iaikge1xuICAgIHJldHVybiBPYmplY3QuZW50cmllcyhvYmopO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHR5cGVkRnJvbUVudHJpZXMoZW50cmllcykge1xuICAgIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMoZW50cmllcyk7XG59XG5leHBvcnQgZnVuY3Rpb24gdHlwZWRLZXlzKG9iaikge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhvYmopO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHR5cGVkVmFsdWVzKG9iaikge1xuICAgIHJldHVybiBPYmplY3QudmFsdWVzKG9iaik7XG59XG5leHBvcnQgZnVuY3Rpb24gdHlwZWRBc3NpZ24odGFyZ2V0LCBzb3VyY2UpIHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih0YXJnZXQsIHNvdXJjZSk7XG59XG4vKipcbiAqIFJldHVybnMgYSBuZXcgb2JqZWN0IHdpdGggYWxsIHVuZGVmaW5lZCB2YWx1ZXMgcmVtb3ZlZC4gVXNlZnVsIHdoZW4gc3ByZWFkaW5nIG9wdGlvbmFsIHBhcmFtZXRlcnMgb24gYW4gb2JqZWN0LCBhc1xuICogVHlwZVNjcmlwdCdzIGBQYXJ0aWFsPFhZWj5gIHR5cGUgYWxsb3dzIGB1bmRlZmluZWRgIHZhbHVlcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZpbHRlclVuZGVmaW5lZChvYmopIHtcbiAgICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKE9iamVjdC5lbnRyaWVzKG9iaikuZmlsdGVyKChbLCB2XSkgPT4gdiAhPT0gdW5kZWZpbmVkKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcGljayhvYmosIGtleXMpIHtcbiAgICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKE9iamVjdC5lbnRyaWVzKG9iaikuZmlsdGVyKChba10pID0+IGtleXMuaW5jbHVkZXMoaykpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBvbWl0KG9iaiwga2V5cykge1xuICAgIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXMob2JqKS5maWx0ZXIoKFtrXSkgPT4gIWtleXMuaW5jbHVkZXMoaykpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzcGxpdChvYmosIGtleXMpIHtcbiAgICByZXR1cm4gW3BpY2sob2JqLCBrZXlzKSwgb21pdChvYmosIGtleXMpXTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/objects.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/promises.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/promises.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPromise: () => (/* binding */ createPromise),\n/* harmony export */   ignoreUnhandledRejection: () => (/* binding */ ignoreUnhandledRejection),\n/* harmony export */   neverResolve: () => (/* binding */ neverResolve),\n/* harmony export */   pending: () => (/* binding */ pending),\n/* harmony export */   rateLimited: () => (/* binding */ rateLimited),\n/* harmony export */   rejected: () => (/* binding */ rejected),\n/* harmony export */   resolved: () => (/* binding */ resolved),\n/* harmony export */   runAsynchronously: () => (/* binding */ runAsynchronously),\n/* harmony export */   runAsynchronouslyWithAlert: () => (/* binding */ runAsynchronouslyWithAlert),\n/* harmony export */   throttled: () => (/* binding */ throttled),\n/* harmony export */   timeout: () => (/* binding */ timeout),\n/* harmony export */   timeoutThrow: () => (/* binding */ timeoutThrow),\n/* harmony export */   wait: () => (/* binding */ wait),\n/* harmony export */   waitUntil: () => (/* binding */ waitUntil)\n/* harmony export */ });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _maps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./maps */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/maps.js\");\n/* harmony import */ var _results__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./results */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/results.js\");\n/* harmony import */ var _uuids__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./uuids */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/uuids.js\");\n\n\n\n\nfunction createPromise(callback) {\n    let status = \"pending\";\n    let valueOrReason = undefined;\n    let resolve = null;\n    let reject = null;\n    const promise = new Promise((res, rej) => {\n        resolve = (value) => {\n            if (status !== \"pending\")\n                return;\n            status = \"fulfilled\";\n            valueOrReason = value;\n            res(value);\n        };\n        reject = (reason) => {\n            if (status !== \"pending\")\n                return;\n            status = \"rejected\";\n            valueOrReason = reason;\n            rej(reason);\n        };\n    });\n    callback(resolve, reject);\n    return Object.assign(promise, {\n        status: status,\n        ...status === \"fulfilled\" ? { value: valueOrReason } : {},\n        ...status === \"rejected\" ? { reason: valueOrReason } : {},\n    });\n}\nconst resolvedCache = new _maps__WEBPACK_IMPORTED_MODULE_1__.DependenciesMap();\n/**\n * Like Promise.resolve(...), but also adds the status and value properties for use with React's `use` hook, and caches\n * the value so that invoking `resolved` twice returns the same promise.\n */\nfunction resolved(value) {\n    if (resolvedCache.has([value])) {\n        return resolvedCache.get([value]);\n    }\n    const res = Object.assign(Promise.resolve(value), {\n        status: \"fulfilled\",\n        value,\n    });\n    resolvedCache.set([value], res);\n    return res;\n}\nconst rejectedCache = new _maps__WEBPACK_IMPORTED_MODULE_1__.DependenciesMap();\n/**\n * Like Promise.reject(...), but also adds the status and value properties for use with React's `use` hook, and caches\n * the value so that invoking `rejected` twice returns the same promise.\n */\nfunction rejected(reason) {\n    if (rejectedCache.has([reason])) {\n        return rejectedCache.get([reason]);\n    }\n    const res = Object.assign(Promise.reject(reason), {\n        status: \"rejected\",\n        reason: reason,\n    });\n    rejectedCache.set([reason], res);\n    return res;\n}\nconst neverResolvePromise = pending(new Promise(() => { }));\nfunction neverResolve() {\n    return neverResolvePromise;\n}\nfunction pending(promise, options = {}) {\n    const res = promise.then(value => {\n        res.status = \"fulfilled\";\n        res.value = value;\n        return value;\n    }, actualReason => {\n        res.status = \"rejected\";\n        res.reason = actualReason;\n        throw actualReason;\n    });\n    res.status = \"pending\";\n    return res;\n}\n/**\n * Should be used to wrap Promises that are not immediately awaited, so they don't throw an unhandled promise rejection\n * error.\n *\n * Vercel kills serverless functions on unhandled promise rejection errors, so this is important.\n */\nfunction ignoreUnhandledRejection(promise) {\n    promise.catch(() => { });\n    return promise;\n}\nasync function wait(ms) {\n    return await new Promise(resolve => setTimeout(resolve, ms));\n}\nasync function waitUntil(date) {\n    return await wait(date.getTime() - Date.now());\n}\nclass ErrorDuringRunAsynchronously extends Error {\n    constructor() {\n        super(\"The error above originated in a runAsynchronously() call. Here is the stacktrace associated with it.\");\n        this.name = \"ErrorDuringRunAsynchronously\";\n    }\n}\nfunction runAsynchronouslyWithAlert(...args) {\n    return runAsynchronously(args[0], {\n        ...args[1],\n        onError: error => {\n            alert(`An unhandled error occurred. Please ${ true ? `check the browser console for the full error. ${error}` : 0}\\n\\n${error}`);\n            args[1]?.onError?.(error);\n        },\n    }, ...args.slice(2));\n}\nfunction runAsynchronously(promiseOrFunc, options = {}) {\n    if (typeof promiseOrFunc === \"function\") {\n        promiseOrFunc = promiseOrFunc();\n    }\n    const duringError = new ErrorDuringRunAsynchronously();\n    promiseOrFunc?.catch(error => {\n        const newError = new _errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"Uncaught error in asynchronous function: \" + error.toString(), {\n            duringError,\n        }, {\n            cause: error,\n        });\n        options.onError?.(newError);\n        if (!options.noErrorLogging) {\n            (0,_errors__WEBPACK_IMPORTED_MODULE_0__.captureError)(\"runAsynchronously\", newError);\n        }\n    });\n}\nclass TimeoutError extends Error {\n    constructor(ms) {\n        super(`Timeout after ${ms}ms`);\n        this.ms = ms;\n        this.name = \"TimeoutError\";\n    }\n}\nasync function timeout(promise, ms) {\n    return await Promise.race([\n        promise.then(value => _results__WEBPACK_IMPORTED_MODULE_2__.Result.ok(value)),\n        wait(ms).then(() => _results__WEBPACK_IMPORTED_MODULE_2__.Result.error(new TimeoutError(ms))),\n    ]);\n}\nasync function timeoutThrow(promise, ms) {\n    return _results__WEBPACK_IMPORTED_MODULE_2__.Result.orThrow(await timeout(promise, ms));\n}\nfunction rateLimited(func, options) {\n    let waitUntil = performance.now();\n    let queue = [];\n    let addedToQueueCallbacks = new Map;\n    const next = async () => {\n        while (true) {\n            if (waitUntil > performance.now()) {\n                await wait(Math.max(1, waitUntil - performance.now() + 1));\n            }\n            else if (queue.length === 0) {\n                const uuid = (0,_uuids__WEBPACK_IMPORTED_MODULE_3__.generateUuid)();\n                await new Promise(resolve => {\n                    addedToQueueCallbacks.set(uuid, resolve);\n                });\n                addedToQueueCallbacks.delete(uuid);\n            }\n            else {\n                break;\n            }\n        }\n        const nextFuncs = options.batchCalls ? queue.splice(0, queue.length) : [queue.shift()];\n        const start = performance.now();\n        const value = await _results__WEBPACK_IMPORTED_MODULE_2__.Result.fromPromise(func());\n        const end = performance.now();\n        waitUntil = Math.max(waitUntil, start + (options.throttleMs ?? 0), end + (options.gapMs ?? 0));\n        for (const nextFunc of nextFuncs) {\n            if (value.status === \"ok\") {\n                nextFunc[0](value.data);\n            }\n            else {\n                nextFunc[1](value.error);\n            }\n        }\n    };\n    runAsynchronously(async () => {\n        while (true) {\n            await next();\n        }\n    });\n    return () => {\n        return new Promise((resolve, reject) => {\n            waitUntil = Math.max(waitUntil, performance.now() + (options.debounceMs ?? 0));\n            queue.push([resolve, reject]);\n            addedToQueueCallbacks.forEach(cb => cb());\n        });\n    };\n}\nfunction throttled(func, delayMs) {\n    let timeout = null;\n    let nextAvailable = null;\n    return async (...args) => {\n        while (nextAvailable !== null) {\n            await nextAvailable;\n        }\n        nextAvailable = new Promise(resolve => {\n            timeout = setTimeout(() => {\n                nextAvailable = null;\n                resolve(func(...args));\n            }, delayMs);\n        });\n        return await nextAvailable;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/promises.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/react.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/react.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNodeText: () => (/* binding */ getNodeText),\n/* harmony export */   suspend: () => (/* binding */ suspend),\n/* harmony export */   suspendIfSsr: () => (/* binding */ suspendIfSsr)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _promises__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./promises */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/promises.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/strings.js\");\n/* harmony import */ var _env__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./env */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/env.js\");\n\n\n\n\nfunction getNodeText(node) {\n    if ([\"number\", \"string\"].includes(typeof node)) {\n        return `${node}`;\n    }\n    if (!node) {\n        return \"\";\n    }\n    if (Array.isArray(node)) {\n        return node.map(getNodeText).join(\"\");\n    }\n    if (typeof node === \"object\" && \"props\" in node) {\n        return getNodeText(node.props.children);\n    }\n    throw new Error(`Unknown node type: ${typeof node}`);\n}\n/**\n * Suspends the currently rendered component indefinitely. Will not unsuspend unless the component rerenders.\n *\n * You can use this to translate older query- or AsyncResult-based code to new the Suspense system, for example: `if (query.isLoading) suspend();`\n */\nfunction suspend() {\n    react__WEBPACK_IMPORTED_MODULE_0___default().use((0,_promises__WEBPACK_IMPORTED_MODULE_1__.neverResolve)());\n    throw new Error(\"Somehow a Promise that never resolves was resolved?\");\n}\n/**\n * Use this in a component or a hook to disable SSR. Should be wrapped in a Suspense boundary, or it will throw an error.\n */\nfunction suspendIfSsr(caller) {\n    if (!(0,_env__WEBPACK_IMPORTED_MODULE_3__.isBrowserLike)()) {\n        const error = Object.assign(new Error((0,_strings__WEBPACK_IMPORTED_MODULE_2__.deindent) `\n        ${caller ?? \"This code path\"} attempted to display a loading indicator during SSR by falling back to the nearest Suspense boundary. If you see this error, it means no Suspense boundary was found, and no loading indicator could be displayed.\n        \n        This usually has one of three causes:\n        \n        1. You are missing a loading.tsx file in your app directory. Fix it by adding a loading.tsx file in your app directory.\n\n        2. The component is rendered in the root (outermost) layout.tsx or template.tsx file. Next.js does not wrap those files in a Suspense boundary, even if there is a loading.tsx file in the same folder. To fix it, wrap your layout inside a route group like this:\n\n          - app\n          - - layout.tsx  // contains <html> and <body>, alongside providers and other components that don't need ${caller ?? \"this code path\"}\n          - - loading.tsx  // required for suspense\n          - - (main)\n          - - - layout.tsx  // contains the main layout of your app, like a sidebar or a header, and can use ${caller ?? \"this code path\"}\n          - - - route.tsx  // your actual main page\n          - - - the rest of your app\n\n          For more information on this approach, see Next's documentation on route groups: https://nextjs.org/docs/app/building-your-application/routing/route-groups\n        \n        3. You caught this error with try-catch or a custom error boundary. Fix this by rethrowing the error or not catching it in the first place.\n\n        See: https://nextjs.org/docs/messages/missing-suspense-with-csr-bailout\n\n        More information on SSR and Suspense boundaries: https://react.dev/reference/react/Suspense#providing-a-fallback-for-server-errors-and-client-only-content\n      `), {\n            // set the digest so nextjs doesn't log the error\n            // https://github.com/vercel/next.js/blob/d01d6d9c35a8c2725b3d74c1402ab76d4779a6cf/packages/next/src/shared/lib/lazy-dynamic/bailout-to-csr.ts#L14\n            digest: \"BAILOUT_TO_CLIENT_SIDE_RENDERING\",\n            reason: caller ?? \"suspendIfSsr()\",\n        });\n        throw error;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvcmVhY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBMEI7QUFDZ0I7QUFDTDtBQUNDO0FBQy9CO0FBQ1A7QUFDQSxrQkFBa0IsS0FBSztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxZQUFZO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUpBQWlKO0FBQ2pKO0FBQ087QUFDUCxJQUFJLGdEQUFTLENBQUMsdURBQVk7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsU0FBUyxtREFBYTtBQUN0Qiw4Q0FBOEMsa0RBQVE7QUFDdEQsVUFBVSw0QkFBNEI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxvSEFBb0g7QUFDcEg7QUFDQTtBQUNBLCtHQUErRztBQUMvRztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2VycGxBSWNlLy4vbm9kZV9tb2R1bGVzL0BzdGFja2ZyYW1lL3N0YWNrLXNoYXJlZC9kaXN0L3V0aWxzL3JlYWN0LmpzP2FmNDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgbmV2ZXJSZXNvbHZlIH0gZnJvbSBcIi4vcHJvbWlzZXNcIjtcbmltcG9ydCB7IGRlaW5kZW50IH0gZnJvbSBcIi4vc3RyaW5nc1wiO1xuaW1wb3J0IHsgaXNCcm93c2VyTGlrZSB9IGZyb20gXCIuL2VudlwiO1xuZXhwb3J0IGZ1bmN0aW9uIGdldE5vZGVUZXh0KG5vZGUpIHtcbiAgICBpZiAoW1wibnVtYmVyXCIsIFwic3RyaW5nXCJdLmluY2x1ZGVzKHR5cGVvZiBub2RlKSkge1xuICAgICAgICByZXR1cm4gYCR7bm9kZX1gO1xuICAgIH1cbiAgICBpZiAoIW5vZGUpIHtcbiAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfVxuICAgIGlmIChBcnJheS5pc0FycmF5KG5vZGUpKSB7XG4gICAgICAgIHJldHVybiBub2RlLm1hcChnZXROb2RlVGV4dCkuam9pbihcIlwiKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBub2RlID09PSBcIm9iamVjdFwiICYmIFwicHJvcHNcIiBpbiBub2RlKSB7XG4gICAgICAgIHJldHVybiBnZXROb2RlVGV4dChub2RlLnByb3BzLmNoaWxkcmVuKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIG5vZGUgdHlwZTogJHt0eXBlb2Ygbm9kZX1gKTtcbn1cbi8qKlxuICogU3VzcGVuZHMgdGhlIGN1cnJlbnRseSByZW5kZXJlZCBjb21wb25lbnQgaW5kZWZpbml0ZWx5LiBXaWxsIG5vdCB1bnN1c3BlbmQgdW5sZXNzIHRoZSBjb21wb25lbnQgcmVyZW5kZXJzLlxuICpcbiAqIFlvdSBjYW4gdXNlIHRoaXMgdG8gdHJhbnNsYXRlIG9sZGVyIHF1ZXJ5LSBvciBBc3luY1Jlc3VsdC1iYXNlZCBjb2RlIHRvIG5ldyB0aGUgU3VzcGVuc2Ugc3lzdGVtLCBmb3IgZXhhbXBsZTogYGlmIChxdWVyeS5pc0xvYWRpbmcpIHN1c3BlbmQoKTtgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdXNwZW5kKCkge1xuICAgIFJlYWN0LnVzZShuZXZlclJlc29sdmUoKSk7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiU29tZWhvdyBhIFByb21pc2UgdGhhdCBuZXZlciByZXNvbHZlcyB3YXMgcmVzb2x2ZWQ/XCIpO1xufVxuLyoqXG4gKiBVc2UgdGhpcyBpbiBhIGNvbXBvbmVudCBvciBhIGhvb2sgdG8gZGlzYWJsZSBTU1IuIFNob3VsZCBiZSB3cmFwcGVkIGluIGEgU3VzcGVuc2UgYm91bmRhcnksIG9yIGl0IHdpbGwgdGhyb3cgYW4gZXJyb3IuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdXNwZW5kSWZTc3IoY2FsbGVyKSB7XG4gICAgaWYgKCFpc0Jyb3dzZXJMaWtlKCkpIHtcbiAgICAgICAgY29uc3QgZXJyb3IgPSBPYmplY3QuYXNzaWduKG5ldyBFcnJvcihkZWluZGVudCBgXG4gICAgICAgICR7Y2FsbGVyID8/IFwiVGhpcyBjb2RlIHBhdGhcIn0gYXR0ZW1wdGVkIHRvIGRpc3BsYXkgYSBsb2FkaW5nIGluZGljYXRvciBkdXJpbmcgU1NSIGJ5IGZhbGxpbmcgYmFjayB0byB0aGUgbmVhcmVzdCBTdXNwZW5zZSBib3VuZGFyeS4gSWYgeW91IHNlZSB0aGlzIGVycm9yLCBpdCBtZWFucyBubyBTdXNwZW5zZSBib3VuZGFyeSB3YXMgZm91bmQsIGFuZCBubyBsb2FkaW5nIGluZGljYXRvciBjb3VsZCBiZSBkaXNwbGF5ZWQuXG4gICAgICAgIFxuICAgICAgICBUaGlzIHVzdWFsbHkgaGFzIG9uZSBvZiB0aHJlZSBjYXVzZXM6XG4gICAgICAgIFxuICAgICAgICAxLiBZb3UgYXJlIG1pc3NpbmcgYSBsb2FkaW5nLnRzeCBmaWxlIGluIHlvdXIgYXBwIGRpcmVjdG9yeS4gRml4IGl0IGJ5IGFkZGluZyBhIGxvYWRpbmcudHN4IGZpbGUgaW4geW91ciBhcHAgZGlyZWN0b3J5LlxuXG4gICAgICAgIDIuIFRoZSBjb21wb25lbnQgaXMgcmVuZGVyZWQgaW4gdGhlIHJvb3QgKG91dGVybW9zdCkgbGF5b3V0LnRzeCBvciB0ZW1wbGF0ZS50c3ggZmlsZS4gTmV4dC5qcyBkb2VzIG5vdCB3cmFwIHRob3NlIGZpbGVzIGluIGEgU3VzcGVuc2UgYm91bmRhcnksIGV2ZW4gaWYgdGhlcmUgaXMgYSBsb2FkaW5nLnRzeCBmaWxlIGluIHRoZSBzYW1lIGZvbGRlci4gVG8gZml4IGl0LCB3cmFwIHlvdXIgbGF5b3V0IGluc2lkZSBhIHJvdXRlIGdyb3VwIGxpa2UgdGhpczpcblxuICAgICAgICAgIC0gYXBwXG4gICAgICAgICAgLSAtIGxheW91dC50c3ggIC8vIGNvbnRhaW5zIDxodG1sPiBhbmQgPGJvZHk+LCBhbG9uZ3NpZGUgcHJvdmlkZXJzIGFuZCBvdGhlciBjb21wb25lbnRzIHRoYXQgZG9uJ3QgbmVlZCAke2NhbGxlciA/PyBcInRoaXMgY29kZSBwYXRoXCJ9XG4gICAgICAgICAgLSAtIGxvYWRpbmcudHN4ICAvLyByZXF1aXJlZCBmb3Igc3VzcGVuc2VcbiAgICAgICAgICAtIC0gKG1haW4pXG4gICAgICAgICAgLSAtIC0gbGF5b3V0LnRzeCAgLy8gY29udGFpbnMgdGhlIG1haW4gbGF5b3V0IG9mIHlvdXIgYXBwLCBsaWtlIGEgc2lkZWJhciBvciBhIGhlYWRlciwgYW5kIGNhbiB1c2UgJHtjYWxsZXIgPz8gXCJ0aGlzIGNvZGUgcGF0aFwifVxuICAgICAgICAgIC0gLSAtIHJvdXRlLnRzeCAgLy8geW91ciBhY3R1YWwgbWFpbiBwYWdlXG4gICAgICAgICAgLSAtIC0gdGhlIHJlc3Qgb2YgeW91ciBhcHBcblxuICAgICAgICAgIEZvciBtb3JlIGluZm9ybWF0aW9uIG9uIHRoaXMgYXBwcm9hY2gsIHNlZSBOZXh0J3MgZG9jdW1lbnRhdGlvbiBvbiByb3V0ZSBncm91cHM6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL2FwcC9idWlsZGluZy15b3VyLWFwcGxpY2F0aW9uL3JvdXRpbmcvcm91dGUtZ3JvdXBzXG4gICAgICAgIFxuICAgICAgICAzLiBZb3UgY2F1Z2h0IHRoaXMgZXJyb3Igd2l0aCB0cnktY2F0Y2ggb3IgYSBjdXN0b20gZXJyb3IgYm91bmRhcnkuIEZpeCB0aGlzIGJ5IHJldGhyb3dpbmcgdGhlIGVycm9yIG9yIG5vdCBjYXRjaGluZyBpdCBpbiB0aGUgZmlyc3QgcGxhY2UuXG5cbiAgICAgICAgU2VlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9taXNzaW5nLXN1c3BlbnNlLXdpdGgtY3NyLWJhaWxvdXRcblxuICAgICAgICBNb3JlIGluZm9ybWF0aW9uIG9uIFNTUiBhbmQgU3VzcGVuc2UgYm91bmRhcmllczogaHR0cHM6Ly9yZWFjdC5kZXYvcmVmZXJlbmNlL3JlYWN0L1N1c3BlbnNlI3Byb3ZpZGluZy1hLWZhbGxiYWNrLWZvci1zZXJ2ZXItZXJyb3JzLWFuZC1jbGllbnQtb25seS1jb250ZW50XG4gICAgICBgKSwge1xuICAgICAgICAgICAgLy8gc2V0IHRoZSBkaWdlc3Qgc28gbmV4dGpzIGRvZXNuJ3QgbG9nIHRoZSBlcnJvclxuICAgICAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3ZlcmNlbC9uZXh0LmpzL2Jsb2IvZDAxZDZkOWMzNWE4YzI3MjViM2Q3NGMxNDAyYWI3NmQ0Nzc5YTZjZi9wYWNrYWdlcy9uZXh0L3NyYy9zaGFyZWQvbGliL2xhenktZHluYW1pYy9iYWlsb3V0LXRvLWNzci50cyNMMTRcbiAgICAgICAgICAgIGRpZ2VzdDogXCJCQUlMT1VUX1RPX0NMSUVOVF9TSURFX1JFTkRFUklOR1wiLFxuICAgICAgICAgICAgcmVhc29uOiBjYWxsZXIgPz8gXCJzdXNwZW5kSWZTc3IoKVwiLFxuICAgICAgICB9KTtcbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/react.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/results.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/results.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncResult: () => (/* binding */ AsyncResult),\n/* harmony export */   Result: () => (/* binding */ Result)\n/* harmony export */ });\n/* harmony import */ var _promises__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./promises */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/promises.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./strings */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/strings.js\");\n\n\nconst Result = {\n    fromThrowing,\n    fromThrowingAsync,\n    fromPromise: promiseToResult,\n    ok(data) {\n        return {\n            status: \"ok\",\n            data,\n        };\n    },\n    error(error) {\n        return {\n            status: \"error\",\n            error,\n        };\n    },\n    map: mapResult,\n    or: (result, fallback) => {\n        return result.status === \"ok\" ? result.data : fallback;\n    },\n    orThrow: (result) => {\n        if (result.status === \"error\")\n            throw result.error;\n        return result.data;\n    },\n    orThrowAsync: async (result) => {\n        return Result.orThrow(await result);\n    },\n    retry,\n};\nconst AsyncResult = {\n    fromThrowing,\n    fromPromise: promiseToResult,\n    ok: Result.ok,\n    error: Result.error,\n    pending,\n    map: mapResult,\n    or: (result, fallback) => {\n        if (result.status === \"pending\")\n            return fallback;\n        return Result.or(result, fallback);\n    },\n    orThrow: (result) => {\n        if (result.status === \"pending\")\n            throw new Error(\"Result still pending\");\n        return Result.orThrow(result);\n    },\n    retry,\n};\nfunction pending(progress) {\n    return {\n        status: \"pending\",\n        progress: progress,\n    };\n}\nasync function promiseToResult(promise) {\n    try {\n        const value = await promise;\n        return Result.ok(value);\n    }\n    catch (error) {\n        return Result.error(error);\n    }\n}\nfunction fromThrowing(fn) {\n    try {\n        return Result.ok(fn());\n    }\n    catch (error) {\n        return Result.error(error);\n    }\n}\nasync function fromThrowingAsync(fn) {\n    try {\n        return Result.ok(await fn());\n    }\n    catch (error) {\n        return Result.error(error);\n    }\n}\nfunction mapResult(result, fn) {\n    if (result.status === \"error\")\n        return {\n            status: \"error\",\n            error: result.error,\n        };\n    if (result.status === \"pending\")\n        return {\n            status: \"pending\",\n            ...\"progress\" in result ? { progress: result.progress } : {},\n        };\n    return Result.ok(fn(result.data));\n}\nclass RetryError extends AggregateError {\n    constructor(errors) {\n        const strings = errors.map(e => String(e));\n        const isAllSame = strings.length > 1 && strings.every(s => s === strings[0]);\n        super(errors, (0,_strings__WEBPACK_IMPORTED_MODULE_1__.deindent) `\n      Error after retrying ${errors.length} times.\n      \n      ${isAllSame ? (0,_strings__WEBPACK_IMPORTED_MODULE_1__.deindent) `\n        Attempts 1-${errors.length}:\n          ${errors[0]}\n      ` : errors.map((e, i) => (0,_strings__WEBPACK_IMPORTED_MODULE_1__.deindent) `\n          Attempt ${i + 1}:\n            ${e}\n        `).join(\"\\n\\n\")}\n      `, { cause: errors[errors.length - 1] });\n        this.errors = errors;\n        this.name = \"RetryError\";\n    }\n    get retries() {\n        return this.errors.length;\n    }\n}\nRetryError.prototype.name = \"RetryError\";\nasync function retry(fn, retries, { exponentialDelayBase = 2000 }) {\n    const errors = [];\n    for (let i = 0; i < retries; i++) {\n        const res = await fn();\n        if (res.status === \"ok\") {\n            return Result.ok(res.data);\n        }\n        else {\n            errors.push(res.error);\n            if (i < retries - 1) {\n                await (0,_promises__WEBPACK_IMPORTED_MODULE_0__.wait)(Math.random() * exponentialDelayBase * 2 ** i);\n            }\n        }\n    }\n    return Result.error(new RetryError(errors));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvcmVzdWx0cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWtDO0FBQ0c7QUFDOUI7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLDRCQUE0QixJQUFJO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGtEQUFRO0FBQzlCLDZCQUE2QixlQUFlO0FBQzVDO0FBQ0EsUUFBUSxZQUFZLGtEQUFRO0FBQzVCLHFCQUFxQixjQUFjO0FBQ25DLFlBQVk7QUFDWiwrQkFBK0Isa0RBQVE7QUFDdkMsb0JBQW9CLE1BQU07QUFDMUIsY0FBYztBQUNkO0FBQ0EsV0FBVyxrQ0FBa0M7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyw2QkFBNkI7QUFDakU7QUFDQSxvQkFBb0IsYUFBYTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwrQ0FBSTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2VycGxBSWNlLy4vbm9kZV9tb2R1bGVzL0BzdGFja2ZyYW1lL3N0YWNrLXNoYXJlZC9kaXN0L3V0aWxzL3Jlc3VsdHMuanM/M2RjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3YWl0IH0gZnJvbSBcIi4vcHJvbWlzZXNcIjtcbmltcG9ydCB7IGRlaW5kZW50IH0gZnJvbSBcIi4vc3RyaW5nc1wiO1xuZXhwb3J0IGNvbnN0IFJlc3VsdCA9IHtcbiAgICBmcm9tVGhyb3dpbmcsXG4gICAgZnJvbVRocm93aW5nQXN5bmMsXG4gICAgZnJvbVByb21pc2U6IHByb21pc2VUb1Jlc3VsdCxcbiAgICBvayhkYXRhKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdGF0dXM6IFwib2tcIixcbiAgICAgICAgICAgIGRhdGEsXG4gICAgICAgIH07XG4gICAgfSxcbiAgICBlcnJvcihlcnJvcikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3RhdHVzOiBcImVycm9yXCIsXG4gICAgICAgICAgICBlcnJvcixcbiAgICAgICAgfTtcbiAgICB9LFxuICAgIG1hcDogbWFwUmVzdWx0LFxuICAgIG9yOiAocmVzdWx0LCBmYWxsYmFjaykgPT4ge1xuICAgICAgICByZXR1cm4gcmVzdWx0LnN0YXR1cyA9PT0gXCJva1wiID8gcmVzdWx0LmRhdGEgOiBmYWxsYmFjaztcbiAgICB9LFxuICAgIG9yVGhyb3c6IChyZXN1bHQpID0+IHtcbiAgICAgICAgaWYgKHJlc3VsdC5zdGF0dXMgPT09IFwiZXJyb3JcIilcbiAgICAgICAgICAgIHRocm93IHJlc3VsdC5lcnJvcjtcbiAgICAgICAgcmV0dXJuIHJlc3VsdC5kYXRhO1xuICAgIH0sXG4gICAgb3JUaHJvd0FzeW5jOiBhc3luYyAocmVzdWx0KSA9PiB7XG4gICAgICAgIHJldHVybiBSZXN1bHQub3JUaHJvdyhhd2FpdCByZXN1bHQpO1xuICAgIH0sXG4gICAgcmV0cnksXG59O1xuZXhwb3J0IGNvbnN0IEFzeW5jUmVzdWx0ID0ge1xuICAgIGZyb21UaHJvd2luZyxcbiAgICBmcm9tUHJvbWlzZTogcHJvbWlzZVRvUmVzdWx0LFxuICAgIG9rOiBSZXN1bHQub2ssXG4gICAgZXJyb3I6IFJlc3VsdC5lcnJvcixcbiAgICBwZW5kaW5nLFxuICAgIG1hcDogbWFwUmVzdWx0LFxuICAgIG9yOiAocmVzdWx0LCBmYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAocmVzdWx0LnN0YXR1cyA9PT0gXCJwZW5kaW5nXCIpXG4gICAgICAgICAgICByZXR1cm4gZmFsbGJhY2s7XG4gICAgICAgIHJldHVybiBSZXN1bHQub3IocmVzdWx0LCBmYWxsYmFjayk7XG4gICAgfSxcbiAgICBvclRocm93OiAocmVzdWx0KSA9PiB7XG4gICAgICAgIGlmIChyZXN1bHQuc3RhdHVzID09PSBcInBlbmRpbmdcIilcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlJlc3VsdCBzdGlsbCBwZW5kaW5nXCIpO1xuICAgICAgICByZXR1cm4gUmVzdWx0Lm9yVGhyb3cocmVzdWx0KTtcbiAgICB9LFxuICAgIHJldHJ5LFxufTtcbmZ1bmN0aW9uIHBlbmRpbmcocHJvZ3Jlc3MpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBzdGF0dXM6IFwicGVuZGluZ1wiLFxuICAgICAgICBwcm9ncmVzczogcHJvZ3Jlc3MsXG4gICAgfTtcbn1cbmFzeW5jIGZ1bmN0aW9uIHByb21pc2VUb1Jlc3VsdChwcm9taXNlKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBhd2FpdCBwcm9taXNlO1xuICAgICAgICByZXR1cm4gUmVzdWx0Lm9rKHZhbHVlKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJldHVybiBSZXN1bHQuZXJyb3IoZXJyb3IpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGZyb21UaHJvd2luZyhmbikge1xuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBSZXN1bHQub2soZm4oKSk7XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICByZXR1cm4gUmVzdWx0LmVycm9yKGVycm9yKTtcbiAgICB9XG59XG5hc3luYyBmdW5jdGlvbiBmcm9tVGhyb3dpbmdBc3luYyhmbikge1xuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBSZXN1bHQub2soYXdhaXQgZm4oKSk7XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICByZXR1cm4gUmVzdWx0LmVycm9yKGVycm9yKTtcbiAgICB9XG59XG5mdW5jdGlvbiBtYXBSZXN1bHQocmVzdWx0LCBmbikge1xuICAgIGlmIChyZXN1bHQuc3RhdHVzID09PSBcImVycm9yXCIpXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdGF0dXM6IFwiZXJyb3JcIixcbiAgICAgICAgICAgIGVycm9yOiByZXN1bHQuZXJyb3IsXG4gICAgICAgIH07XG4gICAgaWYgKHJlc3VsdC5zdGF0dXMgPT09IFwicGVuZGluZ1wiKVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3RhdHVzOiBcInBlbmRpbmdcIixcbiAgICAgICAgICAgIC4uLlwicHJvZ3Jlc3NcIiBpbiByZXN1bHQgPyB7IHByb2dyZXNzOiByZXN1bHQucHJvZ3Jlc3MgfSA6IHt9LFxuICAgICAgICB9O1xuICAgIHJldHVybiBSZXN1bHQub2soZm4ocmVzdWx0LmRhdGEpKTtcbn1cbmNsYXNzIFJldHJ5RXJyb3IgZXh0ZW5kcyBBZ2dyZWdhdGVFcnJvciB7XG4gICAgY29uc3RydWN0b3IoZXJyb3JzKSB7XG4gICAgICAgIGNvbnN0IHN0cmluZ3MgPSBlcnJvcnMubWFwKGUgPT4gU3RyaW5nKGUpKTtcbiAgICAgICAgY29uc3QgaXNBbGxTYW1lID0gc3RyaW5ncy5sZW5ndGggPiAxICYmIHN0cmluZ3MuZXZlcnkocyA9PiBzID09PSBzdHJpbmdzWzBdKTtcbiAgICAgICAgc3VwZXIoZXJyb3JzLCBkZWluZGVudCBgXG4gICAgICBFcnJvciBhZnRlciByZXRyeWluZyAke2Vycm9ycy5sZW5ndGh9IHRpbWVzLlxuICAgICAgXG4gICAgICAke2lzQWxsU2FtZSA/IGRlaW5kZW50IGBcbiAgICAgICAgQXR0ZW1wdHMgMS0ke2Vycm9ycy5sZW5ndGh9OlxuICAgICAgICAgICR7ZXJyb3JzWzBdfVxuICAgICAgYCA6IGVycm9ycy5tYXAoKGUsIGkpID0+IGRlaW5kZW50IGBcbiAgICAgICAgICBBdHRlbXB0ICR7aSArIDF9OlxuICAgICAgICAgICAgJHtlfVxuICAgICAgICBgKS5qb2luKFwiXFxuXFxuXCIpfVxuICAgICAgYCwgeyBjYXVzZTogZXJyb3JzW2Vycm9ycy5sZW5ndGggLSAxXSB9KTtcbiAgICAgICAgdGhpcy5lcnJvcnMgPSBlcnJvcnM7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiUmV0cnlFcnJvclwiO1xuICAgIH1cbiAgICBnZXQgcmV0cmllcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXJyb3JzLmxlbmd0aDtcbiAgICB9XG59XG5SZXRyeUVycm9yLnByb3RvdHlwZS5uYW1lID0gXCJSZXRyeUVycm9yXCI7XG5hc3luYyBmdW5jdGlvbiByZXRyeShmbiwgcmV0cmllcywgeyBleHBvbmVudGlhbERlbGF5QmFzZSA9IDIwMDAgfSkge1xuICAgIGNvbnN0IGVycm9ycyA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcmV0cmllczsgaSsrKSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZuKCk7XG4gICAgICAgIGlmIChyZXMuc3RhdHVzID09PSBcIm9rXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBSZXN1bHQub2socmVzLmRhdGEpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZXJyb3JzLnB1c2gocmVzLmVycm9yKTtcbiAgICAgICAgICAgIGlmIChpIDwgcmV0cmllcyAtIDEpIHtcbiAgICAgICAgICAgICAgICBhd2FpdCB3YWl0KE1hdGgucmFuZG9tKCkgKiBleHBvbmVudGlhbERlbGF5QmFzZSAqIDIgKiogaSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIFJlc3VsdC5lcnJvcihuZXcgUmV0cnlFcnJvcihlcnJvcnMpKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/results.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/stores.js":
/*!********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/stores.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncStore: () => (/* binding */ AsyncStore),\n/* harmony export */   Store: () => (/* binding */ Store)\n/* harmony export */ });\n/* harmony import */ var _results__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./results */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/results.js\");\n/* harmony import */ var _uuids__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./uuids */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/uuids.js\");\n/* harmony import */ var _promises__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./promises */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/promises.js\");\n\n\n\nclass Store {\n    constructor(_value) {\n        this._value = _value;\n        this._callbacks = new Map();\n    }\n    get() {\n        return this._value;\n    }\n    set(value) {\n        const oldValue = this._value;\n        this._value = value;\n        this._callbacks.forEach((callback) => callback(value, oldValue));\n    }\n    update(updater) {\n        const value = updater(this._value);\n        this.set(value);\n        return value;\n    }\n    onChange(callback) {\n        const uuid = (0,_uuids__WEBPACK_IMPORTED_MODULE_1__.generateUuid)();\n        this._callbacks.set(uuid, callback);\n        return {\n            unsubscribe: () => {\n                this._callbacks.delete(uuid);\n            },\n        };\n    }\n    onceChange(callback) {\n        const { unsubscribe } = this.onChange((...args) => {\n            unsubscribe();\n            callback(...args);\n        });\n        return { unsubscribe };\n    }\n}\nclass AsyncStore {\n    constructor(...args) {\n        this._mostRecentOkValue = undefined;\n        this._isRejected = false;\n        this._waitingRejectFunctions = new Map();\n        this._callbacks = new Map();\n        this._updateCounter = 0;\n        this._lastSuccessfulUpdate = -1;\n        if (args.length === 0) {\n            this._isAvailable = false;\n        }\n        else {\n            this._isAvailable = true;\n            this._mostRecentOkValue = args[0];\n        }\n    }\n    isAvailable() {\n        return this._isAvailable;\n    }\n    isRejected() {\n        return this._isRejected;\n    }\n    get() {\n        if (this.isRejected()) {\n            return _results__WEBPACK_IMPORTED_MODULE_0__.AsyncResult.error(this._rejectionError);\n        }\n        else if (this.isAvailable()) {\n            return _results__WEBPACK_IMPORTED_MODULE_0__.AsyncResult.ok(this._mostRecentOkValue);\n        }\n        else {\n            return _results__WEBPACK_IMPORTED_MODULE_0__.AsyncResult.pending();\n        }\n    }\n    getOrWait() {\n        const uuid = (0,_uuids__WEBPACK_IMPORTED_MODULE_1__.generateUuid)();\n        if (this.isRejected()) {\n            return (0,_promises__WEBPACK_IMPORTED_MODULE_2__.rejected)(this._rejectionError);\n        }\n        else if (this.isAvailable()) {\n            return (0,_promises__WEBPACK_IMPORTED_MODULE_2__.resolved)(this._mostRecentOkValue);\n        }\n        const promise = new Promise((resolve, reject) => {\n            this.onceChange((value) => {\n                resolve(value);\n            });\n            this._waitingRejectFunctions.set(uuid, reject);\n        });\n        const withFinally = promise.finally(() => {\n            this._waitingRejectFunctions.delete(uuid);\n        });\n        return (0,_promises__WEBPACK_IMPORTED_MODULE_2__.pending)(withFinally);\n    }\n    _setIfLatest(result, curCounter) {\n        const oldState = this.get();\n        const oldValue = this._mostRecentOkValue;\n        if (curCounter > this._lastSuccessfulUpdate) {\n            switch (result.status) {\n                case \"ok\": {\n                    if (!this._isAvailable || this._isRejected || this._mostRecentOkValue !== result.data) {\n                        this._lastSuccessfulUpdate = curCounter;\n                        this._isAvailable = true;\n                        this._isRejected = false;\n                        this._mostRecentOkValue = result.data;\n                        this._rejectionError = undefined;\n                        this._callbacks.forEach((callback) => callback({\n                            state: this.get(),\n                            oldState,\n                            lastOkValue: oldValue,\n                        }));\n                        return true;\n                    }\n                    return false;\n                }\n                case \"error\": {\n                    this._lastSuccessfulUpdate = curCounter;\n                    this._isAvailable = false;\n                    this._isRejected = true;\n                    this._rejectionError = result.error;\n                    this._waitingRejectFunctions.forEach((reject) => reject(result.error));\n                    this._callbacks.forEach((callback) => callback({\n                        state: this.get(),\n                        oldState,\n                        lastOkValue: oldValue,\n                    }));\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    set(value) {\n        this._setIfLatest(_results__WEBPACK_IMPORTED_MODULE_0__.Result.ok(value), ++this._updateCounter);\n    }\n    update(updater) {\n        const value = updater(this._mostRecentOkValue);\n        this.set(value);\n        return value;\n    }\n    async setAsync(promise) {\n        const curCounter = ++this._updateCounter;\n        const result = await _results__WEBPACK_IMPORTED_MODULE_0__.Result.fromPromise(promise);\n        return this._setIfLatest(result, curCounter);\n    }\n    setUnavailable() {\n        this._lastSuccessfulUpdate = ++this._updateCounter;\n        this._isAvailable = false;\n        this._isRejected = false;\n        this._rejectionError = undefined;\n    }\n    setRejected(error) {\n        this._setIfLatest(_results__WEBPACK_IMPORTED_MODULE_0__.Result.error(error), ++this._updateCounter);\n    }\n    map(mapper) {\n        const store = new AsyncStore();\n        this.onChange((value) => {\n            store.set(mapper(value));\n        });\n        return store;\n    }\n    onChange(callback) {\n        return this.onStateChange(({ state, lastOkValue }) => {\n            if (state.status === \"ok\") {\n                callback(state.data, lastOkValue);\n            }\n        });\n    }\n    onStateChange(callback) {\n        const uuid = (0,_uuids__WEBPACK_IMPORTED_MODULE_1__.generateUuid)();\n        this._callbacks.set(uuid, callback);\n        return {\n            unsubscribe: () => {\n                this._callbacks.delete(uuid);\n            },\n        };\n    }\n    onceChange(callback) {\n        const { unsubscribe } = this.onChange((...args) => {\n            unsubscribe();\n            callback(...args);\n        });\n        return { unsubscribe };\n    }\n    onceStateChange(callback) {\n        const { unsubscribe } = this.onStateChange((...args) => {\n            unsubscribe();\n            callback(...args);\n        });\n        return { unsubscribe };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/stores.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/strings.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/strings.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   camelCaseToSnakeCase: () => (/* binding */ camelCaseToSnakeCase),\n/* harmony export */   deindent: () => (/* binding */ deindent),\n/* harmony export */   extractScopes: () => (/* binding */ extractScopes),\n/* harmony export */   getWhitespacePrefix: () => (/* binding */ getWhitespacePrefix),\n/* harmony export */   getWhitespaceSuffix: () => (/* binding */ getWhitespaceSuffix),\n/* harmony export */   mergeScopeStrings: () => (/* binding */ mergeScopeStrings),\n/* harmony export */   nicify: () => (/* binding */ nicify),\n/* harmony export */   replaceAll: () => (/* binding */ replaceAll),\n/* harmony export */   snakeCaseToCamelCase: () => (/* binding */ snakeCaseToCamelCase),\n/* harmony export */   templateIdentity: () => (/* binding */ templateIdentity),\n/* harmony export */   trimEmptyLinesEnd: () => (/* binding */ trimEmptyLinesEnd),\n/* harmony export */   trimEmptyLinesStart: () => (/* binding */ trimEmptyLinesStart),\n/* harmony export */   trimLines: () => (/* binding */ trimLines),\n/* harmony export */   typedCapitalize: () => (/* binding */ typedCapitalize),\n/* harmony export */   typedToLowercase: () => (/* binding */ typedToLowercase),\n/* harmony export */   typedToUppercase: () => (/* binding */ typedToUppercase)\n/* harmony export */ });\n/* harmony import */ var _arrays__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrays */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/arrays.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _objects__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./objects */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/objects.js\");\n\n\n\nfunction typedToLowercase(s) {\n    return s.toLowerCase();\n}\nfunction typedToUppercase(s) {\n    return s.toUpperCase();\n}\nfunction typedCapitalize(s) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n}\n/**\n * Returns all whitespace character at the start of the string.\n *\n * Uses the same definition for whitespace as `String.prototype.trim()`.\n */\nfunction getWhitespacePrefix(s) {\n    return s.substring(0, s.length - s.trimStart().length);\n}\n/**\n * Returns all whitespace character at the end of the string.\n *\n * Uses the same definition for whitespace as `String.prototype.trim()`.\n */\nfunction getWhitespaceSuffix(s) {\n    return s.substring(s.trimEnd().length);\n}\n/**\n * Returns a string with all empty or whitespace-only lines at the start removed.\n *\n * Uses the same definition for whitespace as `String.prototype.trim()`.\n */\nfunction trimEmptyLinesStart(s) {\n    const lines = s.split(\"\\n\");\n    const firstNonEmptyLineIndex = lines.findIndex((line) => line.trim() !== \"\");\n    return lines.slice(firstNonEmptyLineIndex).join(\"\\n\");\n}\n/**\n * Returns a string with all empty or whitespace-only lines at the end removed.\n *\n * Uses the same definition for whitespace as `String.prototype.trim()`.\n */\nfunction trimEmptyLinesEnd(s) {\n    const lines = s.split(\"\\n\");\n    const lastNonEmptyLineIndex = (0,_arrays__WEBPACK_IMPORTED_MODULE_0__.findLastIndex)(lines, (line) => line.trim() !== \"\");\n    return lines.slice(0, lastNonEmptyLineIndex + 1).join(\"\\n\");\n}\n/**\n * Returns a string with all empty or whitespace-only lines trimmed at the start and end.\n *\n * Uses the same definition for whitespace as `String.prototype.trim()`.\n */\nfunction trimLines(s) {\n    return trimEmptyLinesEnd(trimEmptyLinesStart(s));\n}\n/**\n * A template literal tag that returns the same string as the template literal without a tag.\n *\n * Useful for implementing your own template literal tags.\n */\nfunction templateIdentity(strings, ...values) {\n    if (strings.length === 0)\n        return \"\";\n    if (values.length !== strings.length - 1)\n        throw new Error(\"Invalid number of values; must be one less than strings\");\n    return strings.slice(1).reduce((result, string, i) => `${result}${values[i] ?? \"n/a\"}${string}`, strings[0]);\n}\nfunction deindent(strings, ...values) {\n    if (typeof strings === \"string\")\n        return deindent([strings]);\n    if (strings.length === 0)\n        return \"\";\n    if (values.length !== strings.length - 1)\n        throw new Error(\"Invalid number of values; must be one less than strings\");\n    const trimmedStrings = [...strings];\n    trimmedStrings[0] = trimEmptyLinesStart(trimmedStrings[0]);\n    trimmedStrings[trimmedStrings.length - 1] = trimEmptyLinesEnd(trimmedStrings[trimmedStrings.length - 1]);\n    const indentation = trimmedStrings\n        .join(\"${SOME_VALUE}\")\n        .split(\"\\n\")\n        .filter((line) => line.trim() !== \"\")\n        .map((line) => getWhitespacePrefix(line).length)\n        .reduce((min, current) => Math.min(min, current), Infinity);\n    const deindentedStrings = trimmedStrings\n        .map((string, stringIndex) => {\n        return string\n            .split(\"\\n\")\n            .map((line, lineIndex) => stringIndex !== 0 && lineIndex === 0 ? line : line.substring(indentation))\n            .join(\"\\n\");\n    });\n    const indentedValues = values.map((value, i) => {\n        const firstLineIndentation = getWhitespacePrefix(deindentedStrings[i].split(\"\\n\").at(-1));\n        return `${value}`.replaceAll(\"\\n\", `\\n${firstLineIndentation}`);\n    });\n    return templateIdentity(deindentedStrings, ...indentedValues);\n}\nfunction extractScopes(scope, removeDuplicates = true) {\n    const trimmedString = scope.trim();\n    const scopesArray = trimmedString.split(/\\s+/);\n    const filtered = scopesArray.filter(scope => scope.length > 0);\n    return removeDuplicates ? [...new Set(filtered)] : filtered;\n}\nfunction mergeScopeStrings(...scopes) {\n    const allScope = scopes.map((s) => extractScopes(s)).flat().join(\" \");\n    return extractScopes(allScope).join(\" \");\n}\nfunction snakeCaseToCamelCase(snakeCase) {\n    if (snakeCase.match(/[A-Z]/))\n        return snakeCase; // TODO next-release: this is a hack for fixing the email templates, remove this after v2 migration\n    return snakeCase.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());\n}\nfunction camelCaseToSnakeCase(camelCase) {\n    if (camelCase.match(/_/))\n        return camelCase; // TODO next-release: this is a hack for fixing the email templates, remove this after v2 migration\n    return camelCase.replace(/[A-Z]/g, (letter) => `_${letter.toLowerCase()}`);\n}\n/**\n * Some classes have different constructor names in different environments (eg. `Headers` is sometimes called `_Headers`,\n * so we create an object of overrides to handle these cases.\n */\nconst nicifiableClassNameOverrides = new Map(Object.entries({\n    Headers,\n}).map(([k, v]) => [v, k]));\nfunction nicify(value, options = {}) {\n    const fullOptions = {\n        maxDepth: 5,\n        currentIndent: \"\",\n        lineIndent: \"  \",\n        multiline: true,\n        refs: new Map(),\n        path: \"value\",\n        parent: null,\n        overrides: () => null,\n        keyInParent: null,\n        hideFields: [],\n        ...(0,_objects__WEBPACK_IMPORTED_MODULE_2__.filterUndefined)(options),\n    };\n    const { maxDepth, currentIndent, lineIndent, multiline, refs, path, overrides, hideFields, } = fullOptions;\n    const nl = `\\n${currentIndent}`;\n    const overrideResult = overrides(value, options);\n    if (overrideResult !== null)\n        return overrideResult;\n    if ([\"function\", \"object\", \"symbol\"].includes(typeof value) && value !== null) {\n        if (refs.has(value)) {\n            return `Ref<${refs.get(value)}>`;\n        }\n        refs.set(value, path);\n    }\n    const newOptions = {\n        maxDepth: maxDepth - 1,\n        currentIndent,\n        lineIndent,\n        multiline,\n        refs,\n        path: path + \"->[unknown property]\",\n        overrides,\n        parent: { value, options: fullOptions },\n        keyInParent: null,\n        hideFields: [],\n    };\n    const nestedNicify = (newValue, newPath, keyInParent) => {\n        return nicify(newValue, {\n            ...newOptions,\n            path: newPath,\n            currentIndent: currentIndent + lineIndent,\n            keyInParent,\n        });\n    };\n    switch (typeof value) {\n        case \"string\":\n        case \"boolean\":\n        case \"number\": {\n            return JSON.stringify(value);\n        }\n        case \"undefined\": {\n            return \"undefined\";\n        }\n        case \"symbol\": {\n            return value.toString();\n        }\n        case \"bigint\": {\n            return `${value}n`;\n        }\n        case \"function\": {\n            if (value.name)\n                return `function ${value.name}(...) { ... }`;\n            return `(...) => { ... }`;\n        }\n        case \"object\": {\n            if (value === null)\n                return \"null\";\n            if (Array.isArray(value)) {\n                const extraLines = getNicifiedObjectExtraLines(value);\n                const resValueLength = value.length + extraLines.length;\n                if (maxDepth <= 0 && resValueLength === 0)\n                    return \"[...]\";\n                const resValues = value.map((v, i) => nestedNicify(v, `${path}[${i}]`, i));\n                resValues.push(...extraLines);\n                if (resValues.length !== resValueLength)\n                    throw new _errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"nicify of object: resValues.length !== resValueLength\", { value, resValues, resValueLength });\n                const shouldIndent = resValues.length > 1 || resValues.some(x => x.includes(\"\\n\"));\n                if (shouldIndent) {\n                    return `[${nl}${resValues.map(x => `${lineIndent}${x},${nl}`).join(\"\")}]`;\n                }\n                else {\n                    return `[${resValues.join(\", \")}]`;\n                }\n            }\n            if (value instanceof URL) {\n                return `URL(${JSON.stringify(value.toString())})`;\n            }\n            const constructorName = [null, Object.prototype].includes(Object.getPrototypeOf(value)) ? null : (nicifiableClassNameOverrides.get(value.constructor) ?? value.constructor.name);\n            const constructorString = constructorName ? `${nicifyPropertyString(constructorName)} ` : \"\";\n            const entries = getNicifiableEntries(value).filter(([k]) => !hideFields.includes(k));\n            const extraLines = [\n                ...getNicifiedObjectExtraLines(value),\n                ...hideFields.length > 0 ? [`<some fields may have been hidden>`] : [],\n            ];\n            const resValueLength = entries.length + extraLines.length;\n            if (resValueLength === 0)\n                return `${constructorString}{}`;\n            if (maxDepth <= 0)\n                return `${constructorString}{ ... }`;\n            const resValues = entries.map(([k, v], keyIndex) => {\n                const keyNicified = nestedNicify(k, `Object.keys(${path})[${keyIndex}]`, null);\n                const keyInObjectLiteral = typeof k === \"string\" ? JSON.stringify(k) : `[${keyNicified}]`;\n                if (typeof v === \"function\" && v.name === k) {\n                    return `${keyInObjectLiteral}(...): { ... }`;\n                }\n                else {\n                    return `${keyInObjectLiteral}: ${nestedNicify(v, `${path}[${keyNicified}]`, k)}`;\n                }\n            });\n            resValues.push(...extraLines);\n            if (resValues.length !== resValueLength)\n                throw new _errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"nicify of object: resValues.length !== resValueLength\", { value, resValues, resValueLength });\n            const shouldIndent = resValues.length > 1 || resValues.some(x => x.includes(\"\\n\"));\n            if (resValues.length === 0)\n                return `${constructorString}{}`;\n            if (shouldIndent) {\n                return `${constructorString}{${nl}${resValues.map(x => `${lineIndent}${x},${nl}`).join(\"\")}}`;\n            }\n            else {\n                return `${constructorString}{ ${resValues.join(\", \")} }`;\n            }\n        }\n        default: {\n            return `${typeof value}<${value}>`;\n        }\n    }\n}\nfunction replaceAll(input, searchValue, replaceValue) {\n    return input.split(searchValue).join(replaceValue);\n}\nfunction nicifyPropertyString(str) {\n    if (/^[_a-zA-Z][_a-zA-Z0-9]*$/.test(str))\n        return str;\n    return JSON.stringify(str);\n}\nfunction getNicifiableKeys(value) {\n    const overridden = (\"getNicifiableKeys\" in value ? value.getNicifiableKeys?.bind(value) : null)?.();\n    if (overridden != null)\n        return overridden;\n    const keys = Object.keys(value).sort();\n    if (value instanceof Error) {\n        if (value.cause)\n            keys.unshift(\"cause\");\n        keys.unshift(\"message\", \"stack\");\n    }\n    return (0,_arrays__WEBPACK_IMPORTED_MODULE_0__.unique)(keys);\n}\nfunction getNicifiableEntries(value) {\n    const recordLikes = [Headers];\n    function isRecordLike(value) {\n        return recordLikes.some(x => value instanceof x);\n    }\n    if (isRecordLike(value)) {\n        return [...value.entries()].sort(([a], [b]) => String(a).localeCompare(String(b)));\n    }\n    const keys = getNicifiableKeys(value);\n    return keys.map((k) => [k, value[k]]);\n}\nfunction getNicifiedObjectExtraLines(value) {\n    return (\"getNicifiedObjectExtraLines\" in value ? value.getNicifiedObjectExtraLines : null)?.() ?? [];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/strings.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/urls.js":
/*!******************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/urls.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRelativePart: () => (/* binding */ getRelativePart),\n/* harmony export */   isLocalhost: () => (/* binding */ isLocalhost),\n/* harmony export */   isRelative: () => (/* binding */ isRelative)\n/* harmony export */ });\n/* harmony import */ var _crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./crypto */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/crypto.js\");\n\nfunction isLocalhost(urlOrString) {\n    const url = new URL(urlOrString);\n    if (url.hostname === \"localhost\" || url.hostname.endsWith(\".localhost\"))\n        return true;\n    if (url.hostname.match(/^127\\.\\d+\\.\\d+\\.\\d+$/))\n        return true;\n    return false;\n}\nfunction isRelative(url) {\n    const randomDomain = `${(0,_crypto__WEBPACK_IMPORTED_MODULE_0__.generateSecureRandomString)()}.stack-auth.example.com`;\n    const u = new URL(url, `https://${randomDomain}`);\n    if (u.host !== randomDomain)\n        return false;\n    if (u.protocol !== \"https:\")\n        return false;\n    return true;\n}\nfunction getRelativePart(url) {\n    return url.pathname + url.search + url.hash;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvdXJscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXNEO0FBQy9DO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLDRCQUE0QixtRUFBMEIsR0FBRztBQUN6RCxzQ0FBc0MsYUFBYTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZXJwbEFJY2UvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvdXJscy5qcz85MjhkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdlbmVyYXRlU2VjdXJlUmFuZG9tU3RyaW5nIH0gZnJvbSBcIi4vY3J5cHRvXCI7XG5leHBvcnQgZnVuY3Rpb24gaXNMb2NhbGhvc3QodXJsT3JTdHJpbmcpIHtcbiAgICBjb25zdCB1cmwgPSBuZXcgVVJMKHVybE9yU3RyaW5nKTtcbiAgICBpZiAodXJsLmhvc3RuYW1lID09PSBcImxvY2FsaG9zdFwiIHx8IHVybC5ob3N0bmFtZS5lbmRzV2l0aChcIi5sb2NhbGhvc3RcIikpXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIGlmICh1cmwuaG9zdG5hbWUubWF0Y2goL14xMjdcXC5cXGQrXFwuXFxkK1xcLlxcZCskLykpXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIHJldHVybiBmYWxzZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1JlbGF0aXZlKHVybCkge1xuICAgIGNvbnN0IHJhbmRvbURvbWFpbiA9IGAke2dlbmVyYXRlU2VjdXJlUmFuZG9tU3RyaW5nKCl9LnN0YWNrLWF1dGguZXhhbXBsZS5jb21gO1xuICAgIGNvbnN0IHUgPSBuZXcgVVJMKHVybCwgYGh0dHBzOi8vJHtyYW5kb21Eb21haW59YCk7XG4gICAgaWYgKHUuaG9zdCAhPT0gcmFuZG9tRG9tYWluKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHUucHJvdG9jb2wgIT09IFwiaHR0cHM6XCIpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRSZWxhdGl2ZVBhcnQodXJsKSB7XG4gICAgcmV0dXJuIHVybC5wYXRobmFtZSArIHVybC5zZWFyY2ggKyB1cmwuaGFzaDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/urls.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/uuids.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/utils/uuids.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateUuid: () => (/* binding */ generateUuid),\n/* harmony export */   isUuid: () => (/* binding */ isUuid)\n/* harmony export */ });\n/* harmony import */ var _crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./crypto */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/crypto.js\");\n\nfunction generateUuid() {\n    // crypto.randomUuid is not supported in all browsers, so this is a polyfill\n    return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c => (+c ^ (0,_crypto__WEBPACK_IMPORTED_MODULE_0__.generateRandomValues)(new Uint8Array(1))[0] & 15 >> +c / 4).toString(16));\n}\nfunction isUuid(str) {\n    return /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/.test(str);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvdXVpZHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdEO0FBQ3pDO0FBQ1A7QUFDQSwrRUFBK0UsNkRBQW9CO0FBQ25HO0FBQ087QUFDUCxzQkFBc0IsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLGdCQUFnQixFQUFFLFVBQVUsR0FBRztBQUNoRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtlcnBsQUljZS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy91dWlkcy5qcz9mMzYyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdlbmVyYXRlUmFuZG9tVmFsdWVzIH0gZnJvbSBcIi4vY3J5cHRvXCI7XG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVVdWlkKCkge1xuICAgIC8vIGNyeXB0by5yYW5kb21VdWlkIGlzIG5vdCBzdXBwb3J0ZWQgaW4gYWxsIGJyb3dzZXJzLCBzbyB0aGlzIGlzIGEgcG9seWZpbGxcbiAgICByZXR1cm4gXCIxMDAwMDAwMC0xMDAwLTQwMDAtODAwMC0xMDAwMDAwMDAwMDBcIi5yZXBsYWNlKC9bMDE4XS9nLCBjID0+ICgrYyBeIGdlbmVyYXRlUmFuZG9tVmFsdWVzKG5ldyBVaW50OEFycmF5KDEpKVswXSAmIDE1ID4+ICtjIC8gNCkudG9TdHJpbmcoMTYpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1V1aWQoc3RyKSB7XG4gICAgcmV0dXJuIC9eWzAtOWEtZl17OH0tWzAtOWEtZl17NH0tNFswLTlhLWZdezN9LVs4OWFiXVswLTlhLWZdezN9LVswLTlhLWZdezEyfSQvLnRlc3Qoc3RyKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/uuids.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack/dist/esm/lib/auth.js":
/*!*************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/auth.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addNewOAuthProviderOrScope: () => (/* binding */ addNewOAuthProviderOrScope),\n/* harmony export */   callOAuthCallback: () => (/* binding */ callOAuthCallback),\n/* harmony export */   signInWithOAuth: () => (/* binding */ signInWithOAuth)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-shared */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/index.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/errors */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/promises */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/promises.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_strings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/strings */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/strings.js\");\n/* harmony import */ var _utils_url__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/url */ \"(ssr)/./node_modules/@stackframe/stack/dist/esm/utils/url.js\");\n/* harmony import */ var _cookie__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cookie */ \"(ssr)/./node_modules/@stackframe/stack/dist/esm/lib/cookie.js\");\n// src/lib/auth.ts\n\n\n\n\n\n\nasync function signInWithOAuth(iface, options) {\n  const { codeChallenge, state } = await (0,_cookie__WEBPACK_IMPORTED_MODULE_4__.saveVerifierAndState)();\n  const location = await iface.getOAuthUrl({\n    provider: options.provider,\n    redirectUrl: (0,_utils_url__WEBPACK_IMPORTED_MODULE_5__.constructRedirectUrl)(options.redirectUrl),\n    errorRedirectUrl: (0,_utils_url__WEBPACK_IMPORTED_MODULE_5__.constructRedirectUrl)(options.errorRedirectUrl),\n    codeChallenge,\n    state,\n    type: \"authenticate\",\n    providerScope: options.providerScope\n  });\n  window.location.assign(location);\n  await (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_2__.neverResolve)();\n}\nasync function addNewOAuthProviderOrScope(iface, options, session) {\n  const { codeChallenge, state } = await (0,_cookie__WEBPACK_IMPORTED_MODULE_4__.saveVerifierAndState)();\n  const location = await iface.getOAuthUrl({\n    provider: options.provider,\n    redirectUrl: (0,_utils_url__WEBPACK_IMPORTED_MODULE_5__.constructRedirectUrl)(options.redirectUrl),\n    errorRedirectUrl: (0,_utils_url__WEBPACK_IMPORTED_MODULE_5__.constructRedirectUrl)(options.errorRedirectUrl),\n    afterCallbackRedirectUrl: (0,_utils_url__WEBPACK_IMPORTED_MODULE_5__.constructRedirectUrl)(window.location.href),\n    codeChallenge,\n    state,\n    type: \"link\",\n    session,\n    providerScope: options.providerScope\n  });\n  window.location.assign(location);\n  await (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_2__.neverResolve)();\n}\nfunction consumeOAuthCallbackQueryParams() {\n  const requiredParams = [\"code\", \"state\"];\n  const originalUrl = new URL(window.location.href);\n  for (const param of requiredParams) {\n    if (!originalUrl.searchParams.has(param)) {\n      (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_1__.captureError)(\"consumeOAuthCallbackQueryParams\", new Error(`Missing required query parameter on OAuth callback: ${param}`));\n      return null;\n    }\n  }\n  const expectedState = originalUrl.searchParams.get(\"state\") ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_1__.throwErr)(\"This should never happen; isn't state required above?\");\n  const cookieResult = (0,_cookie__WEBPACK_IMPORTED_MODULE_4__.consumeVerifierAndStateCookie)(expectedState);\n  if (!cookieResult) {\n    (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_1__.captureError)(\"consumeOAuthCallbackQueryParams\", new Error((0,_stackframe_stack_shared_dist_utils_strings__WEBPACK_IMPORTED_MODULE_3__.deindent)`\n      Stack found an outer OAuth callback state in the query parameters, but not in cookies.\n      \n      This could have multiple reasons:\n        - The cookie expired, because the OAuth flow took too long.\n        - The user's browser deleted the cookie, either manually or because of a very strict cookie policy.\n        - The cookie was already consumed by this page, and the user already logged in.\n        - You are using another OAuth client library with the same callback URL as Stack.\n    `));\n    return null;\n  }\n  const newUrl = new URL(originalUrl);\n  for (const param of requiredParams) {\n    newUrl.searchParams.delete(param);\n  }\n  window.history.replaceState({}, \"\", newUrl.toString());\n  return {\n    originalUrl,\n    codeVerifier: cookieResult.codeVerifier,\n    state: expectedState\n  };\n}\nasync function callOAuthCallback(iface, redirectUrl) {\n  const consumed = consumeOAuthCallbackQueryParams();\n  if (!consumed) return null;\n  try {\n    return await iface.callOAuthCallback({\n      oauthParams: consumed.originalUrl.searchParams,\n      redirectUri: (0,_utils_url__WEBPACK_IMPORTED_MODULE_5__.constructRedirectUrl)(redirectUrl),\n      codeVerifier: consumed.codeVerifier,\n      state: consumed.state\n    });\n  } catch (e) {\n    if (e instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_0__.KnownError) {\n      throw e;\n    }\n    throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"Error signing in during OAuth callback. Please try again.\", { cause: e });\n  }\n}\n\n//# sourceMappingURL=auth.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2svZGlzdC9lc20vbGliL2F1dGguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDc0Q7QUFDbUQ7QUFDN0I7QUFDTDtBQUNuQjtBQUMyQjtBQUMvRTtBQUNBLFVBQVUsdUJBQXVCLFFBQVEsNkRBQW9CO0FBQzdEO0FBQ0E7QUFDQSxpQkFBaUIsZ0VBQW9CO0FBQ3JDLHNCQUFzQixnRUFBb0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxRQUFRLDBGQUFZO0FBQ3BCO0FBQ0E7QUFDQSxVQUFVLHVCQUF1QixRQUFRLDZEQUFvQjtBQUM3RDtBQUNBO0FBQ0EsaUJBQWlCLGdFQUFvQjtBQUNyQyxzQkFBc0IsZ0VBQW9CO0FBQzFDLDhCQUE4QixnRUFBb0I7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLFFBQVEsMEZBQVk7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSx3RkFBWSxxR0FBcUcsTUFBTTtBQUM3SDtBQUNBO0FBQ0E7QUFDQSxpRUFBaUUsb0ZBQVEsNEJBQTRCO0FBQ3JHLHVCQUF1QixzRUFBNkI7QUFDcEQ7QUFDQSxJQUFJLHdGQUFZLDhDQUE4QyxxRkFBUTtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixnRUFBb0I7QUFDdkM7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0oscUJBQXFCLGdFQUFVO0FBQy9CO0FBQ0E7QUFDQSxjQUFjLDJGQUFtQixnRUFBZ0UsVUFBVTtBQUMzRztBQUNBO0FBS0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtlcnBsQUljZS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvYXV0aC5qcz9mZDAzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9saWIvYXV0aC50c1xuaW1wb3J0IHsgS25vd25FcnJvciB9IGZyb20gXCJAc3RhY2tmcmFtZS9zdGFjay1zaGFyZWRcIjtcbmltcG9ydCB7IFN0YWNrQXNzZXJ0aW9uRXJyb3IsIGNhcHR1cmVFcnJvciwgdGhyb3dFcnIgfSBmcm9tIFwiQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvZXJyb3JzXCI7XG5pbXBvcnQgeyBuZXZlclJlc29sdmUgfSBmcm9tIFwiQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvcHJvbWlzZXNcIjtcbmltcG9ydCB7IGRlaW5kZW50IH0gZnJvbSBcIkBzdGFja2ZyYW1lL3N0YWNrLXNoYXJlZC9kaXN0L3V0aWxzL3N0cmluZ3NcIjtcbmltcG9ydCB7IGNvbnN0cnVjdFJlZGlyZWN0VXJsIH0gZnJvbSBcIi4uL3V0aWxzL3VybFwiO1xuaW1wb3J0IHsgY29uc3VtZVZlcmlmaWVyQW5kU3RhdGVDb29raWUsIHNhdmVWZXJpZmllckFuZFN0YXRlIH0gZnJvbSBcIi4vY29va2llXCI7XG5hc3luYyBmdW5jdGlvbiBzaWduSW5XaXRoT0F1dGgoaWZhY2UsIG9wdGlvbnMpIHtcbiAgY29uc3QgeyBjb2RlQ2hhbGxlbmdlLCBzdGF0ZSB9ID0gYXdhaXQgc2F2ZVZlcmlmaWVyQW5kU3RhdGUoKTtcbiAgY29uc3QgbG9jYXRpb24gPSBhd2FpdCBpZmFjZS5nZXRPQXV0aFVybCh7XG4gICAgcHJvdmlkZXI6IG9wdGlvbnMucHJvdmlkZXIsXG4gICAgcmVkaXJlY3RVcmw6IGNvbnN0cnVjdFJlZGlyZWN0VXJsKG9wdGlvbnMucmVkaXJlY3RVcmwpLFxuICAgIGVycm9yUmVkaXJlY3RVcmw6IGNvbnN0cnVjdFJlZGlyZWN0VXJsKG9wdGlvbnMuZXJyb3JSZWRpcmVjdFVybCksXG4gICAgY29kZUNoYWxsZW5nZSxcbiAgICBzdGF0ZSxcbiAgICB0eXBlOiBcImF1dGhlbnRpY2F0ZVwiLFxuICAgIHByb3ZpZGVyU2NvcGU6IG9wdGlvbnMucHJvdmlkZXJTY29wZVxuICB9KTtcbiAgd2luZG93LmxvY2F0aW9uLmFzc2lnbihsb2NhdGlvbik7XG4gIGF3YWl0IG5ldmVyUmVzb2x2ZSgpO1xufVxuYXN5bmMgZnVuY3Rpb24gYWRkTmV3T0F1dGhQcm92aWRlck9yU2NvcGUoaWZhY2UsIG9wdGlvbnMsIHNlc3Npb24pIHtcbiAgY29uc3QgeyBjb2RlQ2hhbGxlbmdlLCBzdGF0ZSB9ID0gYXdhaXQgc2F2ZVZlcmlmaWVyQW5kU3RhdGUoKTtcbiAgY29uc3QgbG9jYXRpb24gPSBhd2FpdCBpZmFjZS5nZXRPQXV0aFVybCh7XG4gICAgcHJvdmlkZXI6IG9wdGlvbnMucHJvdmlkZXIsXG4gICAgcmVkaXJlY3RVcmw6IGNvbnN0cnVjdFJlZGlyZWN0VXJsKG9wdGlvbnMucmVkaXJlY3RVcmwpLFxuICAgIGVycm9yUmVkaXJlY3RVcmw6IGNvbnN0cnVjdFJlZGlyZWN0VXJsKG9wdGlvbnMuZXJyb3JSZWRpcmVjdFVybCksXG4gICAgYWZ0ZXJDYWxsYmFja1JlZGlyZWN0VXJsOiBjb25zdHJ1Y3RSZWRpcmVjdFVybCh3aW5kb3cubG9jYXRpb24uaHJlZiksXG4gICAgY29kZUNoYWxsZW5nZSxcbiAgICBzdGF0ZSxcbiAgICB0eXBlOiBcImxpbmtcIixcbiAgICBzZXNzaW9uLFxuICAgIHByb3ZpZGVyU2NvcGU6IG9wdGlvbnMucHJvdmlkZXJTY29wZVxuICB9KTtcbiAgd2luZG93LmxvY2F0aW9uLmFzc2lnbihsb2NhdGlvbik7XG4gIGF3YWl0IG5ldmVyUmVzb2x2ZSgpO1xufVxuZnVuY3Rpb24gY29uc3VtZU9BdXRoQ2FsbGJhY2tRdWVyeVBhcmFtcygpIHtcbiAgY29uc3QgcmVxdWlyZWRQYXJhbXMgPSBbXCJjb2RlXCIsIFwic3RhdGVcIl07XG4gIGNvbnN0IG9yaWdpbmFsVXJsID0gbmV3IFVSTCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG4gIGZvciAoY29uc3QgcGFyYW0gb2YgcmVxdWlyZWRQYXJhbXMpIHtcbiAgICBpZiAoIW9yaWdpbmFsVXJsLnNlYXJjaFBhcmFtcy5oYXMocGFyYW0pKSB7XG4gICAgICBjYXB0dXJlRXJyb3IoXCJjb25zdW1lT0F1dGhDYWxsYmFja1F1ZXJ5UGFyYW1zXCIsIG5ldyBFcnJvcihgTWlzc2luZyByZXF1aXJlZCBxdWVyeSBwYXJhbWV0ZXIgb24gT0F1dGggY2FsbGJhY2s6ICR7cGFyYW19YCkpO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9XG4gIGNvbnN0IGV4cGVjdGVkU3RhdGUgPSBvcmlnaW5hbFVybC5zZWFyY2hQYXJhbXMuZ2V0KFwic3RhdGVcIikgPz8gdGhyb3dFcnIoXCJUaGlzIHNob3VsZCBuZXZlciBoYXBwZW47IGlzbid0IHN0YXRlIHJlcXVpcmVkIGFib3ZlP1wiKTtcbiAgY29uc3QgY29va2llUmVzdWx0ID0gY29uc3VtZVZlcmlmaWVyQW5kU3RhdGVDb29raWUoZXhwZWN0ZWRTdGF0ZSk7XG4gIGlmICghY29va2llUmVzdWx0KSB7XG4gICAgY2FwdHVyZUVycm9yKFwiY29uc3VtZU9BdXRoQ2FsbGJhY2tRdWVyeVBhcmFtc1wiLCBuZXcgRXJyb3IoZGVpbmRlbnRgXG4gICAgICBTdGFjayBmb3VuZCBhbiBvdXRlciBPQXV0aCBjYWxsYmFjayBzdGF0ZSBpbiB0aGUgcXVlcnkgcGFyYW1ldGVycywgYnV0IG5vdCBpbiBjb29raWVzLlxuICAgICAgXG4gICAgICBUaGlzIGNvdWxkIGhhdmUgbXVsdGlwbGUgcmVhc29uczpcbiAgICAgICAgLSBUaGUgY29va2llIGV4cGlyZWQsIGJlY2F1c2UgdGhlIE9BdXRoIGZsb3cgdG9vayB0b28gbG9uZy5cbiAgICAgICAgLSBUaGUgdXNlcidzIGJyb3dzZXIgZGVsZXRlZCB0aGUgY29va2llLCBlaXRoZXIgbWFudWFsbHkgb3IgYmVjYXVzZSBvZiBhIHZlcnkgc3RyaWN0IGNvb2tpZSBwb2xpY3kuXG4gICAgICAgIC0gVGhlIGNvb2tpZSB3YXMgYWxyZWFkeSBjb25zdW1lZCBieSB0aGlzIHBhZ2UsIGFuZCB0aGUgdXNlciBhbHJlYWR5IGxvZ2dlZCBpbi5cbiAgICAgICAgLSBZb3UgYXJlIHVzaW5nIGFub3RoZXIgT0F1dGggY2xpZW50IGxpYnJhcnkgd2l0aCB0aGUgc2FtZSBjYWxsYmFjayBVUkwgYXMgU3RhY2suXG4gICAgYCkpO1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGNvbnN0IG5ld1VybCA9IG5ldyBVUkwob3JpZ2luYWxVcmwpO1xuICBmb3IgKGNvbnN0IHBhcmFtIG9mIHJlcXVpcmVkUGFyYW1zKSB7XG4gICAgbmV3VXJsLnNlYXJjaFBhcmFtcy5kZWxldGUocGFyYW0pO1xuICB9XG4gIHdpbmRvdy5oaXN0b3J5LnJlcGxhY2VTdGF0ZSh7fSwgXCJcIiwgbmV3VXJsLnRvU3RyaW5nKCkpO1xuICByZXR1cm4ge1xuICAgIG9yaWdpbmFsVXJsLFxuICAgIGNvZGVWZXJpZmllcjogY29va2llUmVzdWx0LmNvZGVWZXJpZmllcixcbiAgICBzdGF0ZTogZXhwZWN0ZWRTdGF0ZVxuICB9O1xufVxuYXN5bmMgZnVuY3Rpb24gY2FsbE9BdXRoQ2FsbGJhY2soaWZhY2UsIHJlZGlyZWN0VXJsKSB7XG4gIGNvbnN0IGNvbnN1bWVkID0gY29uc3VtZU9BdXRoQ2FsbGJhY2tRdWVyeVBhcmFtcygpO1xuICBpZiAoIWNvbnN1bWVkKSByZXR1cm4gbnVsbDtcbiAgdHJ5IHtcbiAgICByZXR1cm4gYXdhaXQgaWZhY2UuY2FsbE9BdXRoQ2FsbGJhY2soe1xuICAgICAgb2F1dGhQYXJhbXM6IGNvbnN1bWVkLm9yaWdpbmFsVXJsLnNlYXJjaFBhcmFtcyxcbiAgICAgIHJlZGlyZWN0VXJpOiBjb25zdHJ1Y3RSZWRpcmVjdFVybChyZWRpcmVjdFVybCksXG4gICAgICBjb2RlVmVyaWZpZXI6IGNvbnN1bWVkLmNvZGVWZXJpZmllcixcbiAgICAgIHN0YXRlOiBjb25zdW1lZC5zdGF0ZVxuICAgIH0pO1xuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiBLbm93bkVycm9yKSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgU3RhY2tBc3NlcnRpb25FcnJvcihcIkVycm9yIHNpZ25pbmcgaW4gZHVyaW5nIE9BdXRoIGNhbGxiYWNrLiBQbGVhc2UgdHJ5IGFnYWluLlwiLCB7IGNhdXNlOiBlIH0pO1xuICB9XG59XG5leHBvcnQge1xuICBhZGROZXdPQXV0aFByb3ZpZGVyT3JTY29wZSxcbiAgY2FsbE9BdXRoQ2FsbGJhY2ssXG4gIHNpZ25JbldpdGhPQXV0aFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dGguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack/dist/esm/lib/auth.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack/dist/esm/lib/cookie.js":
/*!***************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/cookie.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   consumeVerifierAndStateCookie: () => (/* binding */ consumeVerifierAndStateCookie),\n/* harmony export */   deleteCookie: () => (/* binding */ deleteCookie),\n/* harmony export */   getCookie: () => (/* binding */ getCookie),\n/* harmony export */   saveVerifierAndState: () => (/* binding */ saveVerifierAndState),\n/* harmony export */   setCookie: () => (/* binding */ setCookie),\n/* harmony export */   setOrDeleteCookie: () => (/* binding */ setOrDeleteCookie)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_sc_force_react_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-sc/force-react-server */ \"(ssr)/./node_modules/@stackframe/stack-sc/dist/index.react-server.js\");\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! js-cookie */ \"(ssr)/./node_modules/js-cookie/dist/js.cookie.mjs\");\n// src/lib/cookie.ts\n\n\n\n// ../../node_modules/.pnpm/oauth4webapi@2.10.4/node_modules/oauth4webapi/build/index.js\nvar USER_AGENT;\nif (typeof navigator === \"undefined\" || !navigator.userAgent?.startsWith?.(\"Mozilla/5.0 \")) {\n  const NAME = \"oauth4webapi\";\n  const VERSION = \"v2.10.4\";\n  USER_AGENT = `${NAME}/${VERSION}`;\n}\nvar clockSkew = Symbol();\nvar clockTolerance = Symbol();\nvar customFetch = Symbol();\nvar useMtlsAlias = Symbol();\nvar encoder = new TextEncoder();\nvar decoder = new TextDecoder();\nfunction buf(input) {\n  if (typeof input === \"string\") {\n    return encoder.encode(input);\n  }\n  return decoder.decode(input);\n}\nvar CHUNK_SIZE = 32768;\nfunction encodeBase64Url(input) {\n  if (input instanceof ArrayBuffer) {\n    input = new Uint8Array(input);\n  }\n  const arr = [];\n  for (let i = 0; i < input.byteLength; i += CHUNK_SIZE) {\n    arr.push(String.fromCharCode.apply(null, input.subarray(i, i + CHUNK_SIZE)));\n  }\n  return btoa(arr.join(\"\")).replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nfunction decodeBase64Url(input) {\n  try {\n    const binary = atob(input.replace(/-/g, \"+\").replace(/_/g, \"/\").replace(/\\s/g, \"\"));\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n      bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n  } catch (cause) {\n    throw new OPE(\"The input to be decoded is not correctly encoded.\", { cause });\n  }\n}\nfunction b64u(input) {\n  if (typeof input === \"string\") {\n    return decodeBase64Url(input);\n  }\n  return encodeBase64Url(input);\n}\nvar LRU = class {\n  constructor(maxSize) {\n    this.cache = /* @__PURE__ */ new Map();\n    this._cache = /* @__PURE__ */ new Map();\n    this.maxSize = maxSize;\n  }\n  get(key) {\n    let v = this.cache.get(key);\n    if (v) {\n      return v;\n    }\n    if (v = this._cache.get(key)) {\n      this.update(key, v);\n      return v;\n    }\n    return void 0;\n  }\n  has(key) {\n    return this.cache.has(key) || this._cache.has(key);\n  }\n  set(key, value) {\n    if (this.cache.has(key)) {\n      this.cache.set(key, value);\n    } else {\n      this.update(key, value);\n    }\n    return this;\n  }\n  delete(key) {\n    if (this.cache.has(key)) {\n      return this.cache.delete(key);\n    }\n    if (this._cache.has(key)) {\n      return this._cache.delete(key);\n    }\n    return false;\n  }\n  update(key, value) {\n    this.cache.set(key, value);\n    if (this.cache.size >= this.maxSize) {\n      this._cache = this.cache;\n      this.cache = /* @__PURE__ */ new Map();\n    }\n  }\n};\nvar OperationProcessingError = class extends Error {\n  constructor(message, options) {\n    super(message, options);\n    this.name = this.constructor.name;\n    Error.captureStackTrace?.(this, this.constructor);\n  }\n};\nvar OPE = OperationProcessingError;\nvar dpopNonces = new LRU(100);\nfunction validateString(input) {\n  return typeof input === \"string\" && input.length !== 0;\n}\nfunction randomBytes() {\n  return b64u(crypto.getRandomValues(new Uint8Array(32)));\n}\nfunction generateRandomCodeVerifier() {\n  return randomBytes();\n}\nfunction generateRandomState() {\n  return randomBytes();\n}\nasync function calculatePKCECodeChallenge(codeVerifier) {\n  if (!validateString(codeVerifier)) {\n    throw new TypeError('\"codeVerifier\" must be a non-empty string');\n  }\n  return b64u(await crypto.subtle.digest(\"SHA-256\", buf(codeVerifier)));\n}\nvar skipSubjectCheck = Symbol();\nvar expectNoNonce = Symbol();\nvar skipAuthTimeCheck = Symbol();\nvar noSignatureCheck = Symbol();\nvar skipStateCheck = Symbol();\nvar expectNoState = Symbol();\n\n// src/lib/cookie.ts\nfunction isRscCookieUnavailableError(e) {\n  const allowedMessageSnippets = [\"was called outside a request scope\", \"cookies() expects to have requestAsyncStorage\"];\n  return typeof e?.message === \"string\" && allowedMessageSnippets.some((msg) => e.message.includes(msg));\n}\nfunction getCookie(name) {\n  try {\n    return (0,_stackframe_stack_sc_force_react_server__WEBPACK_IMPORTED_MODULE_0__.cookies)().get(name)?.value ?? null;\n  } catch (e) {\n    if (isRscCookieUnavailableError(e)) {\n      return js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(name) ?? null;\n    } else {\n      throw e;\n    }\n  }\n}\nfunction setOrDeleteCookie(name, value, options = {}) {\n  if (value === null) {\n    deleteCookie(name);\n  } else {\n    setCookie(name, value, options);\n  }\n}\nfunction deleteCookie(name) {\n  try {\n    (0,_stackframe_stack_sc_force_react_server__WEBPACK_IMPORTED_MODULE_0__.cookies)().delete(name);\n  } catch (e) {\n    if (isRscCookieUnavailableError(e)) {\n      js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].remove(name);\n    } else {\n      throw e;\n    }\n  }\n}\nfunction setCookie(name, value, options = {}) {\n  const isProd = \"development\" === \"production\";\n  try {\n    (0,_stackframe_stack_sc_force_react_server__WEBPACK_IMPORTED_MODULE_0__.cookies)().set(name, value, {\n      secure: isProd,\n      maxAge: options.maxAge\n    });\n  } catch (e) {\n    if (isRscCookieUnavailableError(e)) {\n      if (window.location.protocol !== \"https:\" && isProd) {\n        throw new Error(\"Attempted to set a secure cookie, but this build was compiled as a production build, but the current page is not served over HTTPS. This is a security risk and is not allowed in production.\");\n      }\n      js_cookie__WEBPACK_IMPORTED_MODULE_1__[\"default\"].set(name, value, {\n        secure: isProd,\n        expires: options.maxAge === void 0 ? void 0 : new Date(Date.now() + options.maxAge * 1e3)\n      });\n    } else {\n      throw e;\n    }\n  }\n}\nasync function saveVerifierAndState() {\n  const codeVerifier = generateRandomCodeVerifier();\n  const codeChallenge = await calculatePKCECodeChallenge(codeVerifier);\n  const state = generateRandomState();\n  setCookie(\"stack-oauth-outer-\" + state, codeVerifier, { maxAge: 60 * 60 });\n  return {\n    codeChallenge,\n    state\n  };\n}\nfunction consumeVerifierAndStateCookie(state) {\n  const cookieName = \"stack-oauth-outer-\" + state;\n  const codeVerifier = getCookie(cookieName);\n  if (!codeVerifier) {\n    return null;\n  }\n  deleteCookie(cookieName);\n  return {\n    codeVerifier\n  };\n}\n\n//# sourceMappingURL=cookie.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack/dist/esm/lib/cookie.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack/dist/esm/lib/hooks.js":
/*!**************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/hooks.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useStackApp: () => (/* binding */ useStackApp),\n/* harmony export */   useUser: () => (/* binding */ useUser)\n/* harmony export */ });\n/* harmony import */ var _providers_stack_provider_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../providers/stack-provider-client */ \"(ssr)/./node_modules/@stackframe/stack/dist/esm/providers/stack-provider-client.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n// src/lib/hooks.ts\n\n\nfunction useUser(options = {}) {\n  const stackApp = useStackApp(options);\n  if (options.projectIdMustMatch && stackApp.projectId !== options.projectIdMustMatch) {\n    throw new Error(\"Unexpected project ID in useStackApp: \" + stackApp.projectId);\n  }\n  if (options.projectIdMustMatch === \"internal\") {\n    return stackApp.useUser(options);\n  } else {\n    return stackApp.useUser(options);\n  }\n}\nfunction useStackApp(options = {}) {\n  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_providers_stack_provider_client__WEBPACK_IMPORTED_MODULE_1__.StackContext);\n  if (context === null) {\n    throw new Error(\"useStackApp must be used within a StackProvider\");\n  }\n  const stackApp = context.app;\n  if (options.projectIdMustMatch && stackApp.projectId !== options.projectIdMustMatch) {\n    throw new Error(\"Unexpected project ID in useStackApp: \" + stackApp.projectId);\n  }\n  return stackApp;\n}\n\n//# sourceMappingURL=hooks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2svZGlzdC9lc20vbGliL2hvb2tzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDa0U7QUFDL0I7QUFDbkMsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakMsa0JBQWtCLGlEQUFVLENBQUMsMEVBQVk7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtlcnBsQUljZS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvaG9va3MuanM/NWRjYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbGliL2hvb2tzLnRzXG5pbXBvcnQgeyBTdGFja0NvbnRleHQgfSBmcm9tIFwiLi4vcHJvdmlkZXJzL3N0YWNrLXByb3ZpZGVyLWNsaWVudFwiO1xuaW1wb3J0IHsgdXNlQ29udGV4dCB9IGZyb20gXCJyZWFjdFwiO1xuZnVuY3Rpb24gdXNlVXNlcihvcHRpb25zID0ge30pIHtcbiAgY29uc3Qgc3RhY2tBcHAgPSB1c2VTdGFja0FwcChvcHRpb25zKTtcbiAgaWYgKG9wdGlvbnMucHJvamVjdElkTXVzdE1hdGNoICYmIHN0YWNrQXBwLnByb2plY3RJZCAhPT0gb3B0aW9ucy5wcm9qZWN0SWRNdXN0TWF0Y2gpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbmV4cGVjdGVkIHByb2plY3QgSUQgaW4gdXNlU3RhY2tBcHA6IFwiICsgc3RhY2tBcHAucHJvamVjdElkKTtcbiAgfVxuICBpZiAob3B0aW9ucy5wcm9qZWN0SWRNdXN0TWF0Y2ggPT09IFwiaW50ZXJuYWxcIikge1xuICAgIHJldHVybiBzdGFja0FwcC51c2VVc2VyKG9wdGlvbnMpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBzdGFja0FwcC51c2VVc2VyKG9wdGlvbnMpO1xuICB9XG59XG5mdW5jdGlvbiB1c2VTdGFja0FwcChvcHRpb25zID0ge30pIHtcbiAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoU3RhY2tDb250ZXh0KTtcbiAgaWYgKGNvbnRleHQgPT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJ1c2VTdGFja0FwcCBtdXN0IGJlIHVzZWQgd2l0aGluIGEgU3RhY2tQcm92aWRlclwiKTtcbiAgfVxuICBjb25zdCBzdGFja0FwcCA9IGNvbnRleHQuYXBwO1xuICBpZiAob3B0aW9ucy5wcm9qZWN0SWRNdXN0TWF0Y2ggJiYgc3RhY2tBcHAucHJvamVjdElkICE9PSBvcHRpb25zLnByb2plY3RJZE11c3RNYXRjaCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIlVuZXhwZWN0ZWQgcHJvamVjdCBJRCBpbiB1c2VTdGFja0FwcDogXCIgKyBzdGFja0FwcC5wcm9qZWN0SWQpO1xuICB9XG4gIHJldHVybiBzdGFja0FwcDtcbn1cbmV4cG9ydCB7XG4gIHVzZVN0YWNrQXBwLFxuICB1c2VVc2VyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aG9va3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack/dist/esm/lib/hooks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app.js":
/*!******************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StackAdminApp: () => (/* binding */ StackAdminApp),\n/* harmony export */   StackClientApp: () => (/* binding */ StackClientApp),\n/* harmony export */   StackServerApp: () => (/* binding */ StackServerApp),\n/* harmony export */   serverTeamPermissionDefinitionCreateOptionsToCrud: () => (/* binding */ serverTeamPermissionDefinitionCreateOptionsToCrud),\n/* harmony export */   serverTeamPermissionDefinitionUpdateOptionsToCrud: () => (/* binding */ serverTeamPermissionDefinitionUpdateOptionsToCrud),\n/* harmony export */   stackAppInternalsSymbol: () => (/* binding */ stackAppInternalsSymbol)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_sc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-sc */ \"(ssr)/./node_modules/@stackframe/stack-sc/dist/index.default.js\");\n/* harmony import */ var _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stackframe/stack-shared */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/index.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_helpers_production_mode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stackframe/stack-shared/dist/helpers/production-mode */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/helpers/production-mode.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_sessions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stackframe/stack-shared/dist/sessions */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/sessions.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_bytes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/bytes */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/bytes.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_caches__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/caches */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/caches.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_compile_time__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/compile-time */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/compile-time.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/env */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/env.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/errors */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/errors.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_maps__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/maps */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/maps.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/objects */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/objects.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/promises */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/promises.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/react */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/react.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/results */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/results.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/stores */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/stores.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_strings__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/strings */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/strings.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_urls__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/urls */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/urls.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_uuids__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/uuids */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/uuids.js\");\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! cookie */ \"(ssr)/./node_modules/cookie/index.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! next/navigation */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_20__);\n/* harmony import */ var _utils_url__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../utils/url */ \"(ssr)/./node_modules/@stackframe/stack/dist/esm/utils/url.js\");\n/* harmony import */ var _auth__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./auth */ \"(ssr)/./node_modules/@stackframe/stack/dist/esm/lib/auth.js\");\n/* harmony import */ var _cookie__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./cookie */ \"(ssr)/./node_modules/@stackframe/stack/dist/esm/lib/cookie.js\");\n// src/lib/stack-app.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar NextNavigation = (0,_stackframe_stack_shared_dist_utils_compile_time__WEBPACK_IMPORTED_MODULE_6__.scrambleDuringCompileTime)(next_navigation__WEBPACK_IMPORTED_MODULE_19__);\nvar clientVersion = \"js @stackframe/stack@2.5.37\";\nfunction getUrls(partial) {\n  const handler = partial.handler ?? \"/handler\";\n  const home = partial.home ?? \"/\";\n  const afterSignIn = partial.afterSignIn ?? home;\n  return {\n    handler,\n    signIn: `${handler}/sign-in`,\n    afterSignIn: home,\n    signUp: `${handler}/sign-up`,\n    afterSignUp: afterSignIn,\n    signOut: `${handler}/sign-out`,\n    afterSignOut: home,\n    emailVerification: `${handler}/email-verification`,\n    passwordReset: `${handler}/password-reset`,\n    forgotPassword: `${handler}/forgot-password`,\n    oauthCallback: `${handler}/oauth-callback`,\n    magicLinkCallback: `${handler}/magic-link-callback`,\n    home,\n    accountSettings: `${handler}/account-settings`,\n    error: `${handler}/error`,\n    teamInvitation: `${handler}/team-invitation`,\n    ...(0,_stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_10__.filterUndefined)(partial)\n  };\n}\nasync function _redirectTo(url, options) {\n  if (_stackframe_stack_sc__WEBPACK_IMPORTED_MODULE_0__.isReactServer) {\n    NextNavigation.redirect(url.toString(), options?.replace ? NextNavigation.RedirectType.replace : NextNavigation.RedirectType.push);\n  } else {\n    if (options?.replace) {\n      window.location.replace(url);\n    } else {\n      window.location.assign(url);\n    }\n    await (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_11__.wait)(2e3);\n  }\n}\nfunction getDefaultProjectId() {\n  return \"b83d4657-e4d9-4227-ae0c-25c05eac4421\" || 0;\n}\nfunction getDefaultPublishableClientKey() {\n  return \"pck_6zpcqy8zxgakcn6zbt75bhfy9kte5kb7qpgnkby34msx8\" || 0;\n}\nfunction getDefaultSecretServerKey() {\n  return process.env.STACK_SECRET_SERVER_KEY || (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.throwErr)(new Error(\"No secret server key provided. Please copy your key from the Stack dashboard and put your it in the STACK_SECRET_SERVER_KEY environment variable.\"));\n}\nfunction getDefaultSuperSecretAdminKey() {\n  return process.env.STACK_SUPER_SECRET_ADMIN_KEY || (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.throwErr)(new Error(\"No super secret admin key provided. Please copy your key from the Stack dashboard and put it in the STACK_SUPER_SECRET_ADMIN_KEY environment variable.\"));\n}\nfunction getDefaultBaseUrl() {\n  return process.env.NEXT_PUBLIC_STACK_URL || defaultBaseUrl;\n}\nvar defaultBaseUrl = \"https://api.stack-auth.com\";\nfunction createEmptyTokenStore() {\n  return new _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_14__.Store({\n    refreshToken: null,\n    accessToken: null\n  });\n}\nvar cachePromiseByComponentId = /* @__PURE__ */ new Map();\nfunction useAsyncCache(cache, dependencies, caller) {\n  (0,_stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_12__.suspendIfSsr)(caller);\n  const id = react__WEBPACK_IMPORTED_MODULE_20___default().useId();\n  const subscribe = (0,react__WEBPACK_IMPORTED_MODULE_20__.useCallback)((cb) => {\n    const { unsubscribe } = cache.onStateChange(dependencies, () => {\n      cachePromiseByComponentId.delete(id);\n      cb();\n    });\n    return unsubscribe;\n  }, [cache, ...dependencies]);\n  const getSnapshot = (0,react__WEBPACK_IMPORTED_MODULE_20__.useCallback)(() => {\n    if (!cachePromiseByComponentId.has(id)) {\n      cachePromiseByComponentId.set(id, cache.getOrWait(dependencies, \"read-write\"));\n    }\n    return cachePromiseByComponentId.get(id);\n  }, [cache, ...dependencies]);\n  const promise = react__WEBPACK_IMPORTED_MODULE_20___default().useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    () => (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.throwErr)(new Error(\"getServerSnapshot should never be called in useAsyncCache because we restrict to CSR earlier\"))\n  );\n  return react__WEBPACK_IMPORTED_MODULE_20___default().use(promise);\n}\nvar stackAppInternalsSymbol = Symbol.for(\"StackAppInternals\");\nvar allClientApps = /* @__PURE__ */ new Map();\nvar createCache = (fetcher) => {\n  return new _stackframe_stack_shared_dist_utils_caches__WEBPACK_IMPORTED_MODULE_5__.AsyncCache(\n    async (dependencies) => await fetcher(dependencies),\n    {}\n  );\n};\nvar createCacheBySession = (fetcher) => {\n  return new _stackframe_stack_shared_dist_utils_caches__WEBPACK_IMPORTED_MODULE_5__.AsyncCache(\n    async ([session, ...extraDependencies]) => await fetcher(session, extraDependencies),\n    {\n      onSubscribe: ([session], refresh) => {\n        const handler = session.onInvalidate(() => refresh());\n        return () => handler.unsubscribe();\n      }\n    }\n  );\n};\nvar numberOfAppsCreated = 0;\nvar _StackClientAppImpl = class __StackClientAppImpl {\n  constructor(_options) {\n    this._options = _options;\n    this._uniqueIdentifier = void 0;\n    this.__DEMO_ENABLE_SLIGHT_FETCH_DELAY = false;\n    this._ownedAdminApps = new _stackframe_stack_shared_dist_utils_maps__WEBPACK_IMPORTED_MODULE_9__.DependenciesMap();\n    this._currentUserCache = createCacheBySession(async (session) => {\n      if (this.__DEMO_ENABLE_SLIGHT_FETCH_DELAY) {\n        await (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_11__.wait)(2e3);\n      }\n      return await this._interface.getClientUserByToken(session);\n    });\n    this._currentProjectCache = createCache(async () => {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_13__.Result.orThrow(await this._interface.getClientProject());\n    });\n    this._ownedProjectsCache = createCacheBySession(async (session) => {\n      return await this._interface.listProjects(session);\n    });\n    this._currentUserPermissionsCache = createCacheBySession(async (session, [teamId, recursive]) => {\n      return await this._interface.listCurrentUserTeamPermissions({ teamId, recursive }, session);\n    });\n    this._currentUserTeamsCache = createCacheBySession(async (session) => {\n      return await this._interface.listCurrentUserTeams(session);\n    });\n    this._currentUserOAuthConnectionAccessTokensCache = createCacheBySession(\n      async (session, [providerId, scope]) => {\n        try {\n          const result = await this._interface.createProviderAccessToken(providerId, scope || \"\", session);\n          return { accessToken: result.access_token };\n        } catch (err) {\n          if (!(err instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.OAuthConnectionDoesNotHaveRequiredScope || err instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.OAuthConnectionNotConnectedToUser)) {\n            throw err;\n          }\n        }\n        return null;\n      }\n    );\n    this._currentUserOAuthConnectionCache = createCacheBySession(\n      async (session, [providerId, scope, redirect]) => {\n        return await this._getUserOAuthConnectionCacheFn({\n          getUser: async () => await this._currentUserCache.getOrWait([session], \"write-only\"),\n          getOrWaitOAuthToken: async () => await this._currentUserOAuthConnectionAccessTokensCache.getOrWait([session, providerId, scope || \"\"], \"write-only\"),\n          useOAuthToken: () => useAsyncCache(this._currentUserOAuthConnectionAccessTokensCache, [session, providerId, scope || \"\"], \"useOAuthToken\"),\n          providerId,\n          scope,\n          redirect,\n          session\n        });\n      }\n    );\n    this._teamMemberProfilesCache = createCacheBySession(\n      async (session, [teamId]) => {\n        return await this._interface.listTeamMemberProfiles({ teamId }, session);\n      }\n    );\n    this._currentUserTeamProfileCache = createCacheBySession(\n      async (session, [teamId]) => {\n        return await this._interface.getTeamMemberProfile({ teamId, userId: \"me\" }, session);\n      }\n    );\n    this._memoryTokenStore = createEmptyTokenStore();\n    this._requestTokenStores = /* @__PURE__ */ new WeakMap();\n    this._storedCookieTokenStore = null;\n    /**\n     * A map from token stores and session keys to sessions.\n     *\n     * This isn't just a map from session keys to sessions for two reasons:\n     *\n     * - So we can garbage-collect Session objects when the token store is garbage-collected\n     * - So different token stores are separated and don't leak information between each other, eg. if the same user sends two requests to the same server they should get a different session object\n     */\n    this._sessionsByTokenStoreAndSessionKey = /* @__PURE__ */ new WeakMap();\n    if (\"interface\" in _options) {\n      this._interface = _options.interface;\n    } else {\n      this._interface = new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.StackClientInterface({\n        baseUrl: _options.baseUrl ?? getDefaultBaseUrl(),\n        projectId: _options.projectId ?? getDefaultProjectId(),\n        clientVersion,\n        publishableClientKey: _options.publishableClientKey ?? getDefaultPublishableClientKey()\n      });\n    }\n    this._tokenStoreInit = _options.tokenStore;\n    this._urlOptions = _options.urls ?? {};\n    this._oauthScopesOnSignIn = _options.oauthScopesOnSignIn ?? {};\n    if (_options.uniqueIdentifier) {\n      this._uniqueIdentifier = _options.uniqueIdentifier;\n      this._initUniqueIdentifier();\n    }\n    if (!_options.noAutomaticPrefetch) {\n      numberOfAppsCreated++;\n      if (numberOfAppsCreated > 10) {\n        ( true ? console.log : 0)(`You have created more than 10 Stack apps with automatic pre-fetch enabled (${numberOfAppsCreated}). This is usually a sign of a memory leak, but can sometimes be caused by hot reload of your tech stack. If you are getting this error and it is not caused by hot reload, make sure to minimize the number of Stack apps per page (usually, one per project). (If it is caused by hot reload and does not occur in production, you can safely ignore it.)`);\n      }\n    }\n  }\n  async _getUserOAuthConnectionCacheFn(options) {\n    const user = await options.getUser();\n    let hasConnection = true;\n    if (!user || !user.oauth_providers.find((p) => p.id === options.providerId)) {\n      hasConnection = false;\n    }\n    const token = await options.getOrWaitOAuthToken();\n    if (!token) {\n      hasConnection = false;\n    }\n    if (!hasConnection && options.redirect) {\n      if (!options.session) {\n        throw new Error(\"No session found. You might be calling getConnectedAccount with redirect without having a user session.\");\n      }\n      await (0,_auth__WEBPACK_IMPORTED_MODULE_21__.addNewOAuthProviderOrScope)(\n        this._interface,\n        {\n          provider: options.providerId,\n          redirectUrl: this.urls.oauthCallback,\n          errorRedirectUrl: this.urls.error,\n          providerScope: (0,_stackframe_stack_shared_dist_utils_strings__WEBPACK_IMPORTED_MODULE_15__.mergeScopeStrings)(options.scope || \"\", (this._oauthScopesOnSignIn[options.providerId] ?? []).join(\" \"))\n        },\n        options.session\n      );\n      return await (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_11__.neverResolve)();\n    } else if (!hasConnection) {\n      return null;\n    }\n    const app = this;\n    return {\n      id: options.providerId,\n      async getAccessToken() {\n        const result = await options.getOrWaitOAuthToken();\n        if (!result) {\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.StackAssertionError(\"No access token available\");\n        }\n        return result;\n      },\n      useAccessToken() {\n        const result = options.useOAuthToken();\n        if (!result) {\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.StackAssertionError(\"No access token available\");\n        }\n        return result;\n      }\n    };\n  }\n  _initUniqueIdentifier() {\n    if (!this._uniqueIdentifier) {\n      throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.StackAssertionError(\"Unique identifier not initialized\");\n    }\n    if (allClientApps.has(this._uniqueIdentifier)) {\n      throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.StackAssertionError(\"A Stack client app with the same unique identifier already exists\");\n    }\n    allClientApps.set(this._uniqueIdentifier, [this._options.checkString ?? \"default check string\", this]);\n  }\n  /**\n   * Cloudflare workers does not allow use of randomness on the global scope (on which the Stack app is probably\n   * initialized). For that reason, we generate the unique identifier lazily when it is first needed instead of in the\n   * constructor.\n   */\n  _getUniqueIdentifier() {\n    if (!this._uniqueIdentifier) {\n      this._uniqueIdentifier = (0,_stackframe_stack_shared_dist_utils_uuids__WEBPACK_IMPORTED_MODULE_17__.generateUuid)();\n      this._initUniqueIdentifier();\n    }\n    return this._uniqueIdentifier;\n  }\n  async _checkFeatureSupport(name, options) {\n    return await this._interface.checkFeatureSupport({ ...options, name });\n  }\n  _useCheckFeatureSupport(name, options) {\n    (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_11__.runAsynchronously)(this._checkFeatureSupport(name, options));\n    throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.StackAssertionError(`${name} is not currently supported. Please reach out to Stack support for more information.`);\n  }\n  get _refreshTokenCookieName() {\n    return `stack-refresh-${this.projectId}`;\n  }\n  _getTokensFromCookies(cookies) {\n    const refreshToken = cookies.refreshTokenCookie;\n    const accessTokenObject = cookies.accessTokenCookie?.startsWith('[\"') ? JSON.parse(cookies.accessTokenCookie) : null;\n    const accessToken = accessTokenObject && refreshToken === accessTokenObject[0] ? accessTokenObject[1] : null;\n    return {\n      refreshToken,\n      accessToken\n    };\n  }\n  get _accessTokenCookieName() {\n    return `stack-access`;\n  }\n  _getCookieTokenStore() {\n    if (!(0,_stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_7__.isBrowserLike)()) {\n      throw new Error(\"Cannot use cookie token store on the server!\");\n    }\n    if (this._storedCookieTokenStore === null) {\n      const getCurrentValue = (old) => {\n        const tokens = this._getTokensFromCookies({\n          refreshTokenCookie: (0,_cookie__WEBPACK_IMPORTED_MODULE_22__.getCookie)(this._refreshTokenCookieName) ?? (0,_cookie__WEBPACK_IMPORTED_MODULE_22__.getCookie)(\"stack-refresh\"),\n          // keep old cookie name for backwards-compatibility\n          accessTokenCookie: (0,_cookie__WEBPACK_IMPORTED_MODULE_22__.getCookie)(this._accessTokenCookieName)\n        });\n        return {\n          refreshToken: tokens.refreshToken,\n          accessToken: tokens.accessToken ?? (old?.refreshToken === tokens.refreshToken ? old.accessToken : null)\n        };\n      };\n      this._storedCookieTokenStore = new _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_14__.Store(getCurrentValue(null));\n      let hasSucceededInWriting = true;\n      setInterval(() => {\n        if (hasSucceededInWriting) {\n          const oldValue = this._storedCookieTokenStore.get();\n          const currentValue = getCurrentValue(oldValue);\n          if (!(0,_stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_10__.deepPlainEquals)(currentValue, oldValue)) {\n            this._storedCookieTokenStore.set(currentValue);\n          }\n        }\n      }, 100);\n      this._storedCookieTokenStore.onChange((value) => {\n        try {\n          (0,_cookie__WEBPACK_IMPORTED_MODULE_22__.setOrDeleteCookie)(this._refreshTokenCookieName, value.refreshToken, { maxAge: 60 * 60 * 24 * 365 });\n          (0,_cookie__WEBPACK_IMPORTED_MODULE_22__.setOrDeleteCookie)(this._accessTokenCookieName, value.accessToken ? JSON.stringify([value.refreshToken, value.accessToken]) : null, { maxAge: 60 * 60 * 24 });\n          (0,_cookie__WEBPACK_IMPORTED_MODULE_22__.deleteCookie)(\"stack-refresh\");\n          hasSucceededInWriting = true;\n        } catch (e) {\n          if (!(0,_stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_7__.isBrowserLike)()) {\n            hasSucceededInWriting = false;\n          } else {\n            throw e;\n          }\n        }\n      });\n    }\n    return this._storedCookieTokenStore;\n  }\n  _getOrCreateTokenStore(overrideTokenStoreInit) {\n    const tokenStoreInit = overrideTokenStoreInit === void 0 ? this._tokenStoreInit : overrideTokenStoreInit;\n    switch (tokenStoreInit) {\n      case \"cookie\": {\n        return this._getCookieTokenStore();\n      }\n      case \"nextjs-cookie\": {\n        if ((0,_stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_7__.isBrowserLike)()) {\n          return this._getCookieTokenStore();\n        } else {\n          const tokens = this._getTokensFromCookies({\n            refreshTokenCookie: (0,_cookie__WEBPACK_IMPORTED_MODULE_22__.getCookie)(this._refreshTokenCookieName) ?? (0,_cookie__WEBPACK_IMPORTED_MODULE_22__.getCookie)(\"stack-refresh\"),\n            // keep old cookie name for backwards-compatibility\n            accessTokenCookie: (0,_cookie__WEBPACK_IMPORTED_MODULE_22__.getCookie)(this._accessTokenCookieName)\n          });\n          const store = new _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_14__.Store(tokens);\n          store.onChange((value) => {\n            try {\n              (0,_cookie__WEBPACK_IMPORTED_MODULE_22__.setOrDeleteCookie)(this._refreshTokenCookieName, value.refreshToken, { maxAge: 60 * 60 * 24 * 365 });\n              (0,_cookie__WEBPACK_IMPORTED_MODULE_22__.setOrDeleteCookie)(this._accessTokenCookieName, value.accessToken ? JSON.stringify([value.refreshToken, value.accessToken]) : null, { maxAge: 60 * 60 * 24 });\n            } catch (e) {\n            }\n          });\n          return store;\n        }\n      }\n      case \"memory\": {\n        return this._memoryTokenStore;\n      }\n      default: {\n        if (tokenStoreInit === null) {\n          return createEmptyTokenStore();\n        } else if (typeof tokenStoreInit === \"object\" && \"headers\" in tokenStoreInit) {\n          if (this._requestTokenStores.has(tokenStoreInit)) return this._requestTokenStores.get(tokenStoreInit);\n          const stackAuthHeader = tokenStoreInit.headers.get(\"x-stack-auth\");\n          if (stackAuthHeader) {\n            let parsed2;\n            try {\n              parsed2 = JSON.parse(stackAuthHeader);\n              if (typeof parsed2 !== \"object\") throw new Error(\"x-stack-auth header must be a JSON object\");\n              if (parsed2 === null) throw new Error(\"x-stack-auth header must not be null\");\n            } catch (e) {\n              throw new Error(`Invalid x-stack-auth header: ${stackAuthHeader}`, { cause: e });\n            }\n            return this._getOrCreateTokenStore({\n              accessToken: parsed2.accessToken ?? null,\n              refreshToken: parsed2.refreshToken ?? null\n            });\n          }\n          const cookieHeader = tokenStoreInit.headers.get(\"cookie\");\n          const parsed = cookie__WEBPACK_IMPORTED_MODULE_18__.parse(cookieHeader || \"\");\n          const res = new _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_14__.Store({\n            refreshToken: parsed[this._refreshTokenCookieName] || parsed[\"stack-refresh\"] || null,\n            // keep old cookie name for backwards-compatibility\n            accessToken: parsed[this._accessTokenCookieName] || null\n          });\n          this._requestTokenStores.set(tokenStoreInit, res);\n          return res;\n        } else if (\"accessToken\" in tokenStoreInit || \"refreshToken\" in tokenStoreInit) {\n          return new _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_14__.Store({\n            refreshToken: tokenStoreInit.refreshToken,\n            accessToken: tokenStoreInit.accessToken\n          });\n        }\n        throw new Error(`Invalid token store ${tokenStoreInit}`);\n      }\n    }\n  }\n  _getSessionFromTokenStore(tokenStore) {\n    const tokenObj = tokenStore.get();\n    const sessionKey = _stackframe_stack_shared_dist_sessions__WEBPACK_IMPORTED_MODULE_3__.InternalSession.calculateSessionKey(tokenObj);\n    const existing = sessionKey ? this._sessionsByTokenStoreAndSessionKey.get(tokenStore)?.get(sessionKey) : null;\n    if (existing) return existing;\n    const session = this._interface.createSession({\n      refreshToken: tokenObj.refreshToken,\n      accessToken: tokenObj.accessToken\n    });\n    session.onAccessTokenChange((newAccessToken) => {\n      tokenStore.update((old) => ({\n        ...old,\n        accessToken: newAccessToken?.token ?? null\n      }));\n    });\n    session.onInvalidate(() => {\n      tokenStore.update((old) => ({\n        ...old,\n        accessToken: null,\n        refreshToken: null\n      }));\n    });\n    let sessionsBySessionKey = this._sessionsByTokenStoreAndSessionKey.get(tokenStore) ?? /* @__PURE__ */ new Map();\n    this._sessionsByTokenStoreAndSessionKey.set(tokenStore, sessionsBySessionKey);\n    sessionsBySessionKey.set(sessionKey, session);\n    return session;\n  }\n  _getSession(overrideTokenStoreInit) {\n    const tokenStore = this._getOrCreateTokenStore(overrideTokenStoreInit);\n    return this._getSessionFromTokenStore(tokenStore);\n  }\n  _useSession(overrideTokenStoreInit) {\n    const tokenStore = this._getOrCreateTokenStore(overrideTokenStoreInit);\n    const subscribe = (0,react__WEBPACK_IMPORTED_MODULE_20__.useCallback)((cb) => {\n      const { unsubscribe } = tokenStore.onChange(() => {\n        cb();\n      });\n      return unsubscribe;\n    }, [tokenStore]);\n    const getSnapshot = (0,react__WEBPACK_IMPORTED_MODULE_20__.useCallback)(() => this._getSessionFromTokenStore(tokenStore), [tokenStore]);\n    return react__WEBPACK_IMPORTED_MODULE_20___default().useSyncExternalStore(subscribe, getSnapshot, getSnapshot);\n  }\n  async _signInToAccountWithTokens(tokens) {\n    if (!(\"accessToken\" in tokens) || !(\"refreshToken\" in tokens)) {\n      throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.StackAssertionError(\"Invalid tokens object; can't sign in with this\", { tokens });\n    }\n    const tokenStore = this._getOrCreateTokenStore();\n    tokenStore.set(tokens);\n  }\n  _hasPersistentTokenStore(overrideTokenStoreInit) {\n    return (overrideTokenStoreInit !== void 0 ? overrideTokenStoreInit : this._tokenStoreInit) !== null;\n  }\n  _ensurePersistentTokenStore(overrideTokenStoreInit) {\n    if (!this._hasPersistentTokenStore(overrideTokenStoreInit)) {\n      throw new Error(\"Cannot call this function on a Stack app without a persistent token store. Make sure the tokenStore option on the constructor is set to a non-null value when initializing Stack.\\n\\nStack uses token stores to access access tokens of the current user. For example, on web frontends it is commonly the string value 'cookies' for cookie storage.\");\n    }\n  }\n  _isInternalProject() {\n    return this.projectId === \"internal\";\n  }\n  _ensureInternalProject() {\n    if (!this._isInternalProject()) {\n      throw new Error(\"Cannot call this function on a Stack app with a project ID other than 'internal'.\");\n    }\n  }\n  _clientProjectFromCrud(crud) {\n    return {\n      id: crud.id,\n      displayName: crud.display_name,\n      config: {\n        signUpEnabled: crud.config.sign_up_enabled,\n        credentialEnabled: crud.config.credential_enabled,\n        magicLinkEnabled: crud.config.magic_link_enabled,\n        clientTeamCreationEnabled: crud.config.client_team_creation_enabled,\n        clientUserDeletionEnabled: crud.config.client_user_deletion_enabled,\n        oauthProviders: crud.config.enabled_oauth_providers.map((p) => ({\n          id: p.id\n        }))\n      }\n    };\n  }\n  _clientTeamPermissionFromCrud(crud) {\n    return {\n      id: crud.id\n    };\n  }\n  _clientTeamUserFromCrud(crud) {\n    return {\n      id: crud.user_id,\n      teamProfile: {\n        displayName: crud.display_name,\n        profileImageUrl: crud.profile_image_url\n      }\n    };\n  }\n  _clientTeamFromCrud(crud) {\n    const app = this;\n    return {\n      id: crud.id,\n      displayName: crud.display_name,\n      profileImageUrl: crud.profile_image_url,\n      async inviteUser(options) {\n        return await app._interface.sendTeamInvitation({\n          teamId: crud.id,\n          email: options.email,\n          session: app._getSession(),\n          callbackUrl: (0,_utils_url__WEBPACK_IMPORTED_MODULE_23__.constructRedirectUrl)(app.urls.teamInvitation)\n        });\n      },\n      async listUsers() {\n        const result = await app._teamMemberProfilesCache.getOrWait([app._getSession(), crud.id], \"write-only\");\n        return result.map((crud2) => app._clientTeamUserFromCrud(crud2));\n      },\n      useUsers() {\n        const result = useAsyncCache(app._teamMemberProfilesCache, [app._getSession(), crud.id], \"team.useUsers()\");\n        return result.map((crud2) => app._clientTeamUserFromCrud(crud2));\n      },\n      async update(data) {\n        await app._interface.updateTeam({ data: teamUpdateOptionsToCrud(data), teamId: crud.id }, app._getSession());\n        await app._currentUserTeamsCache.refresh([app._getSession()]);\n      }\n    };\n  }\n  _createAuth(session) {\n    const app = this;\n    return {\n      _internalSession: session,\n      currentSession: {\n        async getTokens() {\n          const tokens = await session.getPotentiallyExpiredTokens();\n          return {\n            accessToken: tokens?.accessToken.token ?? null,\n            refreshToken: tokens?.refreshToken?.token ?? null\n          };\n        }\n      },\n      async getAuthHeaders() {\n        return {\n          \"x-stack-auth\": JSON.stringify(await this.getAuthJson())\n        };\n      },\n      async getAuthJson() {\n        const tokens = await this.currentSession.getTokens();\n        return tokens;\n      },\n      signOut() {\n        return app._signOut(session);\n      }\n    };\n  }\n  _createBaseUser(crud) {\n    if (!crud) {\n      throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.StackAssertionError(\"User not found\");\n    }\n    return {\n      id: crud.id,\n      displayName: crud.display_name,\n      primaryEmail: crud.primary_email,\n      primaryEmailVerified: crud.primary_email_verified,\n      profileImageUrl: crud.profile_image_url,\n      signedUpAt: new Date(crud.signed_up_at_millis),\n      clientMetadata: crud.client_metadata,\n      clientReadOnlyMetadata: crud.client_read_only_metadata,\n      hasPassword: crud.has_password,\n      emailAuthEnabled: crud.auth_with_email,\n      oauthProviders: crud.oauth_providers,\n      selectedTeam: crud.selected_team && this._clientTeamFromCrud(crud.selected_team),\n      isMultiFactorRequired: crud.requires_totp_mfa,\n      toClientJson() {\n        return crud;\n      }\n    };\n  }\n  _editableTeamProfileFromCrud(crud) {\n    const app = this;\n    return {\n      displayName: crud.display_name,\n      profileImageUrl: crud.profile_image_url,\n      async update(update) {\n        await app._interface.updateTeamMemberProfile({\n          teamId: crud.team_id,\n          userId: crud.user_id,\n          profile: {\n            display_name: update.displayName,\n            profile_image_url: update.profileImageUrl\n          }\n        }, app._getSession());\n        await app._currentUserTeamProfileCache.refresh([app._getSession(), crud.team_id]);\n      }\n    };\n  }\n  _createUserExtra(crud, session) {\n    const app = this;\n    async function getConnectedAccount(id, options) {\n      const scopeString = options?.scopes?.join(\" \");\n      return await app._currentUserOAuthConnectionCache.getOrWait([session, id, scopeString || \"\", options?.or === \"redirect\"], \"write-only\");\n    }\n    function useConnectedAccount(id, options) {\n      const scopeString = options?.scopes?.join(\" \");\n      return useAsyncCache(app._currentUserOAuthConnectionCache, [session, id, scopeString || \"\", options?.or === \"redirect\"], \"user.useConnectedAccount()\");\n    }\n    return {\n      setDisplayName(displayName) {\n        return this.update({ displayName });\n      },\n      setClientMetadata(metadata) {\n        return this.update({ clientMetadata: metadata });\n      },\n      async setSelectedTeam(team) {\n        await this.update({ selectedTeamId: team?.id ?? null });\n      },\n      getConnectedAccount,\n      useConnectedAccount,\n      async getTeam(teamId) {\n        const teams = await this.listTeams();\n        return teams.find((t) => t.id === teamId) ?? null;\n      },\n      useTeam(teamId) {\n        const teams = this.useTeams();\n        return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => {\n          return teams.find((t) => t.id === teamId) ?? null;\n        }, [teams, teamId]);\n      },\n      async listTeams() {\n        const teams = await app._currentUserTeamsCache.getOrWait([session], \"write-only\");\n        return teams.map((crud2) => app._clientTeamFromCrud(crud2));\n      },\n      useTeams() {\n        const teams = useAsyncCache(app._currentUserTeamsCache, [session], \"user.useTeams()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => teams.map((crud2) => app._clientTeamFromCrud(crud2)), [teams]);\n      },\n      async createTeam(data) {\n        const crud2 = await app._interface.createTeamForCurrentUser(teamCreateOptionsToCrud(data), session);\n        await app._currentUserTeamsCache.refresh([session]);\n        return app._clientTeamFromCrud(crud2);\n      },\n      async leaveTeam(team) {\n        await app._interface.leaveTeam(team.id, session);\n      },\n      async listPermissions(scope, options) {\n        const recursive = options?.recursive ?? true;\n        const permissions = await app._currentUserPermissionsCache.getOrWait([session, scope.id, recursive], \"write-only\");\n        return permissions.map((crud2) => app._clientTeamPermissionFromCrud(crud2));\n      },\n      usePermissions(scope, options) {\n        const recursive = options?.recursive ?? true;\n        const permissions = useAsyncCache(app._currentUserPermissionsCache, [session, scope.id, recursive], \"user.usePermissions()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => permissions.map((crud2) => app._clientTeamPermissionFromCrud(crud2)), [permissions]);\n      },\n      usePermission(scope, permissionId) {\n        const permissions = this.usePermissions(scope);\n        return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => permissions.find((p) => p.id === permissionId) ?? null, [permissions, permissionId]);\n      },\n      async getPermission(scope, permissionId) {\n        const permissions = await this.listPermissions(scope);\n        return permissions.find((p) => p.id === permissionId) ?? null;\n      },\n      async hasPermission(scope, permissionId) {\n        return await this.getPermission(scope, permissionId) !== null;\n      },\n      async update(update) {\n        return await app._updateClientUser(update, session);\n      },\n      async sendVerificationEmail() {\n        if (!crud?.primary_email) {\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.StackAssertionError(\"User does not have a primary email\");\n        }\n        return await app._sendVerificationEmail(crud.primary_email, session);\n      },\n      async updatePassword(options) {\n        return await app._updatePassword(options, session);\n      },\n      async getTeamProfile(team) {\n        const result = await app._currentUserTeamProfileCache.getOrWait([session, team.id], \"write-only\");\n        return app._editableTeamProfileFromCrud(result);\n      },\n      useTeamProfile(team) {\n        const result = useAsyncCache(app._currentUserTeamProfileCache, [session, team.id], \"user.useTeamProfile()\");\n        return app._editableTeamProfileFromCrud(result);\n      },\n      async delete() {\n        await app._interface.deleteCurrentUser(session);\n        session.markInvalid();\n      }\n    };\n  }\n  _createInternalUserExtra(session) {\n    const app = this;\n    this._ensureInternalProject();\n    return {\n      createProject(newProject) {\n        return app._createProject(session, newProject);\n      },\n      listOwnedProjects() {\n        return app._listOwnedProjects(session);\n      },\n      useOwnedProjects() {\n        return app._useOwnedProjects(session);\n      }\n    };\n  }\n  _currentUserFromCrud(crud, session) {\n    const currentUser = {\n      ...this._createBaseUser(crud),\n      ...this._createAuth(session),\n      ...this._createUserExtra(crud, session),\n      ...this._isInternalProject() ? this._createInternalUserExtra(session) : {}\n    };\n    Object.freeze(currentUser);\n    return currentUser;\n  }\n  _getOwnedAdminApp(forProjectId, session) {\n    if (!this._ownedAdminApps.has([session, forProjectId])) {\n      this._ownedAdminApps.set([session, forProjectId], new _StackAdminAppImpl({\n        baseUrl: this._interface.options.baseUrl,\n        projectId: forProjectId,\n        tokenStore: null,\n        projectOwnerSession: session,\n        noAutomaticPrefetch: true\n      }));\n    }\n    return this._ownedAdminApps.get([session, forProjectId]);\n  }\n  get projectId() {\n    return this._interface.projectId;\n  }\n  async _isTrusted(url) {\n    return (0,_stackframe_stack_shared_dist_utils_urls__WEBPACK_IMPORTED_MODULE_16__.isRelative)(url);\n  }\n  get urls() {\n    return getUrls(this._urlOptions);\n  }\n  async _redirectIfTrusted(url, options) {\n    if (!await this._isTrusted(url)) {\n      throw new Error(`Redirect URL ${url} is not trusted; should be relative.`);\n    }\n    return await _redirectTo(url, options);\n  }\n  async _redirectToHandler(handlerName, options) {\n    let url = this.urls[handlerName];\n    if (!url) {\n      throw new Error(`No URL for handler name ${handlerName}`);\n    }\n    if (!options?.noRedirectBack) {\n      if (handlerName === \"afterSignIn\" || handlerName === \"afterSignUp\") {\n        if (_stackframe_stack_sc__WEBPACK_IMPORTED_MODULE_0__.isReactServer || typeof window === \"undefined\") {\n          try {\n            await this._checkFeatureSupport(\"rsc-handler-\" + handlerName, {});\n          } catch (e) {\n          }\n        } else {\n          const queryParams = new URLSearchParams(window.location.search);\n          url = queryParams.get(\"after_auth_return_to\") || url;\n        }\n      } else if (handlerName === \"signIn\" || handlerName === \"signUp\") {\n        if (_stackframe_stack_sc__WEBPACK_IMPORTED_MODULE_0__.isReactServer || typeof window === \"undefined\") {\n          try {\n            await this._checkFeatureSupport(\"rsc-handler-\" + handlerName, {});\n          } catch (e) {\n          }\n        } else {\n          const currentUrl = new URL(window.location.href);\n          const nextUrl = new URL(url, currentUrl);\n          if (currentUrl.searchParams.has(\"after_auth_return_to\")) {\n            nextUrl.searchParams.set(\"after_auth_return_to\", currentUrl.searchParams.get(\"after_auth_return_to\"));\n          } else if (currentUrl.protocol === nextUrl.protocol && currentUrl.host === nextUrl.host) {\n            nextUrl.searchParams.set(\"after_auth_return_to\", (0,_stackframe_stack_shared_dist_utils_urls__WEBPACK_IMPORTED_MODULE_16__.getRelativePart)(currentUrl));\n          }\n          url = (0,_stackframe_stack_shared_dist_utils_urls__WEBPACK_IMPORTED_MODULE_16__.getRelativePart)(nextUrl);\n        }\n      }\n    }\n    await this._redirectIfTrusted(url, options);\n  }\n  async redirectToSignIn(options) {\n    return await this._redirectToHandler(\"signIn\", options);\n  }\n  async redirectToSignUp(options) {\n    return await this._redirectToHandler(\"signUp\", options);\n  }\n  async redirectToSignOut(options) {\n    return await this._redirectToHandler(\"signOut\", options);\n  }\n  async redirectToEmailVerification(options) {\n    return await this._redirectToHandler(\"emailVerification\", options);\n  }\n  async redirectToPasswordReset(options) {\n    return await this._redirectToHandler(\"passwordReset\", options);\n  }\n  async redirectToForgotPassword(options) {\n    return await this._redirectToHandler(\"forgotPassword\", options);\n  }\n  async redirectToHome(options) {\n    return await this._redirectToHandler(\"home\", options);\n  }\n  async redirectToOAuthCallback(options) {\n    return await this._redirectToHandler(\"oauthCallback\", options);\n  }\n  async redirectToMagicLinkCallback(options) {\n    return await this._redirectToHandler(\"magicLinkCallback\", options);\n  }\n  async redirectToAfterSignIn(options) {\n    return await this._redirectToHandler(\"afterSignIn\", options);\n  }\n  async redirectToAfterSignUp(options) {\n    return await this._redirectToHandler(\"afterSignUp\", options);\n  }\n  async redirectToAfterSignOut(options) {\n    return await this._redirectToHandler(\"afterSignOut\", options);\n  }\n  async redirectToAccountSettings(options) {\n    return await this._redirectToHandler(\"accountSettings\", options);\n  }\n  async redirectToError(options) {\n    return await this._redirectToHandler(\"error\", options);\n  }\n  async redirectToTeamInvitation(options) {\n    return await this._redirectToHandler(\"teamInvitation\", options);\n  }\n  async sendForgotPasswordEmail(email) {\n    const redirectUrl = (0,_utils_url__WEBPACK_IMPORTED_MODULE_23__.constructRedirectUrl)(this.urls.passwordReset);\n    const error = await this._interface.sendForgotPasswordEmail(email, redirectUrl);\n    return error;\n  }\n  async sendMagicLinkEmail(email) {\n    const magicLinkRedirectUrl = (0,_utils_url__WEBPACK_IMPORTED_MODULE_23__.constructRedirectUrl)(this.urls.magicLinkCallback);\n    const error = await this._interface.sendMagicLinkEmail(email, magicLinkRedirectUrl);\n    return error;\n  }\n  async resetPassword(options) {\n    const error = await this._interface.resetPassword(options);\n    return error;\n  }\n  async verifyPasswordResetCode(code) {\n    return await this._interface.verifyPasswordResetCode(code);\n  }\n  async verifyTeamInvitationCode(code) {\n    const result = await this._interface.acceptTeamInvitation({\n      type: \"check\",\n      code,\n      session: this._getSession()\n    });\n    if (result.status === \"ok\") {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_13__.Result.ok(void 0);\n    } else {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_13__.Result.error(result.error);\n    }\n  }\n  async acceptTeamInvitation(code) {\n    const result = await this._interface.acceptTeamInvitation({\n      type: \"use\",\n      code,\n      session: this._getSession()\n    });\n    if (result.status === \"ok\") {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_13__.Result.ok(void 0);\n    } else {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_13__.Result.error(result.error);\n    }\n  }\n  async getTeamInvitationDetails(code) {\n    const result = await this._interface.acceptTeamInvitation({\n      type: \"details\",\n      code,\n      session: this._getSession()\n    });\n    if (result.status === \"ok\") {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_13__.Result.ok({ teamDisplayName: result.data.team_display_name });\n    } else {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_13__.Result.error(result.error);\n    }\n  }\n  async verifyEmail(code) {\n    return await this._interface.verifyEmail(code);\n  }\n  async getUser(options) {\n    this._ensurePersistentTokenStore(options?.tokenStore);\n    const session = this._getSession(options?.tokenStore);\n    const crud = await this._currentUserCache.getOrWait([session], \"write-only\");\n    if (crud === null) {\n      switch (options?.or) {\n        case \"redirect\": {\n          await this.redirectToSignIn({ replace: true });\n          break;\n        }\n        case \"throw\": {\n          throw new Error(\"User is not signed in but getUser was called with { or: 'throw' }\");\n        }\n        default: {\n          return null;\n        }\n      }\n    }\n    return crud && this._currentUserFromCrud(crud, session);\n  }\n  useUser(options) {\n    this._ensurePersistentTokenStore(options?.tokenStore);\n    const router = NextNavigation.useRouter();\n    const session = this._useSession(options?.tokenStore);\n    const crud = useAsyncCache(this._currentUserCache, [session], \"useUser()\");\n    if (crud === null) {\n      switch (options?.or) {\n        case \"redirect\": {\n          (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_11__.runAsynchronously)(this.redirectToSignIn({ replace: true }));\n          (0,_stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_12__.suspend)();\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.StackAssertionError(\"suspend should never return\");\n        }\n        case \"throw\": {\n          throw new Error(\"User is not signed in but useUser was called with { or: 'throw' }\");\n        }\n        case void 0:\n        case \"return-null\": {\n        }\n      }\n    }\n    return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => {\n      return crud && this._currentUserFromCrud(crud, session);\n    }, [crud, session, options?.or]);\n  }\n  async _updateClientUser(update, session) {\n    const res = await this._interface.updateClientUser(userUpdateOptionsToCrud(update), session);\n    await this._refreshUser(session);\n    return res;\n  }\n  async signInWithOAuth(provider) {\n    this._ensurePersistentTokenStore();\n    await (0,_auth__WEBPACK_IMPORTED_MODULE_21__.signInWithOAuth)(\n      this._interface,\n      {\n        provider,\n        redirectUrl: this.urls.oauthCallback,\n        errorRedirectUrl: this.urls.error,\n        providerScope: this._oauthScopesOnSignIn[provider]?.join(\" \")\n      }\n    );\n  }\n  /**\n   * @deprecated\n   * TODO remove\n   */\n  async _experimentalMfa(error, session) {\n    const otp = prompt(\"Please enter the six-digit TOTP code from your authenticator app.\");\n    if (!otp) {\n      throw new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.InvalidTotpCode();\n    }\n    return await this._interface.totpMfa(\n      error.details?.attempt_code ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.throwErr)(\"attempt code missing\"),\n      otp,\n      session\n    );\n  }\n  /**\n   * @deprecated\n   * TODO remove\n   */\n  async _catchMfaRequiredError(callback) {\n    try {\n      return await callback();\n    } catch (e) {\n      if (e instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.MultiFactorAuthenticationRequired) {\n        return await this._experimentalMfa(e, this._getSession());\n      }\n      throw e;\n    }\n  }\n  async signInWithCredential(options) {\n    this._ensurePersistentTokenStore();\n    const session = this._getSession();\n    let result;\n    try {\n      result = await this._catchMfaRequiredError(async () => {\n        return await this._interface.signInWithCredential(options.email, options.password, session);\n      });\n    } catch (e) {\n      if (e instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.InvalidTotpCode) {\n        return e;\n      }\n      throw e;\n    }\n    if (!(result instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownError)) {\n      await this._signInToAccountWithTokens(result);\n      if (!options.noRedirect) {\n        return await this.redirectToAfterSignIn({ replace: true });\n      } else {\n        return;\n      }\n    }\n    return result;\n  }\n  async signUpWithCredential(options) {\n    this._ensurePersistentTokenStore();\n    const session = this._getSession();\n    const emailVerificationRedirectUrl = (0,_utils_url__WEBPACK_IMPORTED_MODULE_23__.constructRedirectUrl)(this.urls.emailVerification);\n    const result = await this._interface.signUpWithCredential(\n      options.email,\n      options.password,\n      emailVerificationRedirectUrl,\n      session\n    );\n    if (!(result instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownError)) {\n      await this._signInToAccountWithTokens(result);\n      if (!options.noRedirect) {\n        return await this.redirectToAfterSignUp({ replace: true });\n      } else {\n        return;\n      }\n    }\n    return result;\n  }\n  async signInWithMagicLink(code) {\n    this._ensurePersistentTokenStore();\n    let result;\n    try {\n      result = await this._catchMfaRequiredError(async () => {\n        return await this._interface.signInWithMagicLink(code);\n      });\n    } catch (e) {\n      if (e instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.InvalidTotpCode) {\n        return e;\n      }\n      throw e;\n    }\n    if (result instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownError) {\n      return result;\n    }\n    await this._signInToAccountWithTokens(result);\n    if (result.newUser) {\n      await this.redirectToAfterSignUp({ replace: true });\n    } else {\n      await this.redirectToAfterSignIn({ replace: true });\n    }\n  }\n  async callOAuthCallback() {\n    this._ensurePersistentTokenStore();\n    let result;\n    try {\n      result = await this._catchMfaRequiredError(async () => {\n        return await (0,_auth__WEBPACK_IMPORTED_MODULE_21__.callOAuthCallback)(this._interface, this.urls.oauthCallback);\n      });\n    } catch (e) {\n      if (e instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.InvalidTotpCode) {\n        alert(\"Invalid TOTP code. Please try signing in again.\");\n      }\n      throw e;\n    }\n    if (result) {\n      console.log(\"OAuth callback result\", result);\n      await this._signInToAccountWithTokens(result);\n      if (\"afterCallbackRedirectUrl\" in result && result.afterCallbackRedirectUrl) {\n        await _redirectTo(result.afterCallbackRedirectUrl, { replace: true });\n        return true;\n      } else if (result.newUser) {\n        await this.redirectToAfterSignUp({ replace: true });\n        return true;\n      } else {\n        await this.redirectToAfterSignIn({ replace: true });\n        return true;\n      }\n    }\n    return false;\n  }\n  async _signOut(session) {\n    await this._interface.signOut(session);\n    await this.redirectToAfterSignOut();\n  }\n  async _sendVerificationEmail(email, session) {\n    const emailVerificationRedirectUrl = (0,_utils_url__WEBPACK_IMPORTED_MODULE_23__.constructRedirectUrl)(this.urls.emailVerification);\n    return await this._interface.sendVerificationEmail(email, emailVerificationRedirectUrl, session);\n  }\n  async _updatePassword(options, session) {\n    return await this._interface.updatePassword(options, session);\n  }\n  async signOut() {\n    const user = await this.getUser();\n    if (user) {\n      await user.signOut();\n    }\n  }\n  async getProject() {\n    const crud = await this._currentProjectCache.getOrWait([], \"write-only\");\n    return this._clientProjectFromCrud(crud);\n  }\n  useProject() {\n    const crud = useAsyncCache(this._currentProjectCache, [], \"useProject()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => this._clientProjectFromCrud(crud), [crud]);\n  }\n  async _listOwnedProjects(session) {\n    this._ensureInternalProject();\n    const crud = await this._ownedProjectsCache.getOrWait([session], \"write-only\");\n    return crud.map((j) => this._getOwnedAdminApp(j.id, session)._adminOwnedProjectFromCrud(\n      j,\n      () => this._refreshOwnedProjects(session)\n    ));\n  }\n  _useOwnedProjects(session) {\n    this._ensureInternalProject();\n    const projects = useAsyncCache(this._ownedProjectsCache, [session], \"useOwnedProjects()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => projects.map((j) => this._getOwnedAdminApp(j.id, session)._adminOwnedProjectFromCrud(\n      j,\n      () => this._refreshOwnedProjects(session)\n    )), [projects]);\n  }\n  async _createProject(session, newProject) {\n    this._ensureInternalProject();\n    const crud = await this._interface.createProject(adminProjectCreateOptionsToCrud(newProject), session);\n    const res = this._getOwnedAdminApp(crud.id, session)._adminOwnedProjectFromCrud(\n      crud,\n      () => this._refreshOwnedProjects(session)\n    );\n    await this._refreshOwnedProjects(session);\n    return res;\n  }\n  async _refreshUser(session) {\n    await this._refreshSession(session);\n  }\n  async _refreshSession(session) {\n    await this._currentUserCache.refresh([session]);\n  }\n  async _refreshUsers() {\n  }\n  async _refreshProject() {\n    await this._currentProjectCache.refresh([]);\n  }\n  async _refreshOwnedProjects(session) {\n    await this._ownedProjectsCache.refresh([session]);\n  }\n  static get [stackAppInternalsSymbol]() {\n    return {\n      fromClientJson: (json) => {\n        const providedCheckString = JSON.stringify((0,_stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_10__.omit)(json, [\n          /* none currently */\n        ]));\n        const existing = allClientApps.get(json.uniqueIdentifier);\n        if (existing) {\n          const [existingCheckString, clientApp] = existing;\n          if (existingCheckString !== providedCheckString) {\n            throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.StackAssertionError(\"The provided app JSON does not match the configuration of the existing client app with the same unique identifier\", { providedObj: json, existingString: existingCheckString });\n          }\n          return clientApp;\n        }\n        return new __StackClientAppImpl({\n          ...json,\n          checkString: providedCheckString\n        });\n      }\n    };\n  }\n  get [stackAppInternalsSymbol]() {\n    return {\n      toClientJson: () => {\n        if (!(\"publishableClientKey\" in this._interface.options)) {\n          throw Error(\"Cannot serialize to JSON from an application without a publishable client key\");\n        }\n        return {\n          baseUrl: this._interface.options.baseUrl,\n          projectId: this.projectId,\n          publishableClientKey: this._interface.options.publishableClientKey,\n          tokenStore: this._tokenStoreInit,\n          urls: this._urlOptions,\n          oauthScopesOnSignIn: this._oauthScopesOnSignIn,\n          uniqueIdentifier: this._getUniqueIdentifier()\n        };\n      },\n      setCurrentUser: (userJsonPromise) => {\n        (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_11__.runAsynchronously)(this._currentUserCache.forceSetCachedValueAsync([this._getSession()], userJsonPromise));\n      }\n    };\n  }\n};\nvar _StackServerAppImpl = class extends _StackClientAppImpl {\n  constructor(options) {\n    super(\"interface\" in options ? {\n      interface: options.interface,\n      tokenStore: options.tokenStore,\n      urls: options.urls,\n      oauthScopesOnSignIn: options.oauthScopesOnSignIn\n    } : {\n      interface: new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.StackServerInterface({\n        baseUrl: options.baseUrl ?? getDefaultBaseUrl(),\n        projectId: options.projectId ?? getDefaultProjectId(),\n        clientVersion,\n        publishableClientKey: options.publishableClientKey ?? getDefaultPublishableClientKey(),\n        secretServerKey: options.secretServerKey ?? getDefaultSecretServerKey()\n      }),\n      tokenStore: options.tokenStore,\n      urls: options.urls ?? {},\n      oauthScopesOnSignIn: options.oauthScopesOnSignIn ?? {}\n    });\n    // TODO override the client user cache to use the server user cache, so we save some requests\n    this._currentServerUserCache = createCacheBySession(async (session) => {\n      return await this._interface.getServerUserByToken(session);\n    });\n    this._serverUsersCache = createCache(async () => {\n      return await this._interface.listServerUsers();\n    });\n    this._serverUserCache = createCache(async ([userId]) => {\n      const user = await this._interface.getServerUserById(userId);\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_13__.Result.or(user, null);\n    });\n    this._serverTeamsCache = createCache(async ([userId]) => {\n      return await this._interface.listServerTeams({ userId });\n    });\n    this._serverTeamUserPermissionsCache = createCache(async ([teamId, userId, recursive]) => {\n      return await this._interface.listServerTeamPermissions({ teamId, userId, recursive }, null);\n    });\n    this._serverUserOAuthConnectionAccessTokensCache = createCache(\n      async ([userId, providerId, scope]) => {\n        try {\n          const result = await this._interface.createServerProviderAccessToken(userId, providerId, scope || \"\");\n          return { accessToken: result.access_token };\n        } catch (err) {\n          if (!(err instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.OAuthConnectionDoesNotHaveRequiredScope || err instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.OAuthConnectionNotConnectedToUser)) {\n            throw err;\n          }\n        }\n        return null;\n      }\n    );\n    this._serverUserOAuthConnectionCache = createCache(\n      async ([userId, providerId, scope, redirect]) => {\n        return await this._getUserOAuthConnectionCacheFn({\n          getUser: async () => await this._serverUserCache.getOrWait([userId], \"write-only\"),\n          getOrWaitOAuthToken: async () => await this._serverUserOAuthConnectionAccessTokensCache.getOrWait([userId, providerId, scope || \"\"], \"write-only\"),\n          useOAuthToken: () => useAsyncCache(this._serverUserOAuthConnectionAccessTokensCache, [userId, providerId, scope || \"\"], \"user.useConnectedAccount()\"),\n          providerId,\n          scope,\n          redirect,\n          session: null\n        });\n      }\n    );\n    this._serverTeamMemberProfilesCache = createCache(\n      async ([teamId]) => {\n        return await this._interface.listServerTeamMemberProfiles({ teamId });\n      }\n    );\n    this._serverUserTeamProfileCache = createCache(\n      async ([teamId, userId]) => {\n        return await this._interface.getServerTeamMemberProfile({ teamId, userId });\n      }\n    );\n  }\n  async _updateServerUser(userId, update) {\n    const result = await this._interface.updateServerUser(userId, serverUserUpdateOptionsToCrud(update));\n    await this._refreshUsers();\n    return result;\n  }\n  _serverEditableTeamProfileFromCrud(crud) {\n    const app = this;\n    const clientProfile = this._editableTeamProfileFromCrud(crud);\n    return {\n      ...clientProfile,\n      async update(update) {\n        await clientProfile.update(update);\n        await app._serverUserTeamProfileCache.refresh([crud.team_id, crud.user_id]);\n      }\n    };\n  }\n  _serverUserFromCrud(crud) {\n    const app = this;\n    async function getConnectedAccount(id, options) {\n      const scopeString = options?.scopes?.join(\" \");\n      return await app._serverUserOAuthConnectionCache.getOrWait([crud.id, id, scopeString || \"\", options?.or === \"redirect\"], \"write-only\");\n    }\n    function useConnectedAccount(id, options) {\n      const scopeString = options?.scopes?.join(\" \");\n      return useAsyncCache(app._serverUserOAuthConnectionCache, [crud.id, id, scopeString || \"\", options?.or === \"redirect\"], \"user.useConnectedAccount()\");\n    }\n    return {\n      ...super._createBaseUser(crud),\n      lastActiveAt: new Date(crud.last_active_at_millis),\n      serverMetadata: crud.server_metadata,\n      async setPrimaryEmail(email, options) {\n        await app._updateServerUser(crud.id, { primaryEmail: email, primaryEmailVerified: options?.verified });\n      },\n      async grantPermission(scope, permissionId) {\n        await app._interface.grantServerTeamUserPermission(scope.id, crud.id, permissionId);\n        for (const recursive of [true, false]) {\n          await app._serverTeamUserPermissionsCache.refresh([scope.id, crud.id, recursive]);\n        }\n      },\n      async revokePermission(scope, permissionId) {\n        await app._interface.revokeServerTeamUserPermission(scope.id, crud.id, permissionId);\n        for (const recursive of [true, false]) {\n          await app._serverTeamUserPermissionsCache.refresh([scope.id, crud.id, recursive]);\n        }\n      },\n      async delete() {\n        const res = await app._interface.deleteServerServerUser(crud.id);\n        await app._refreshUsers();\n        return res;\n      },\n      async createSession(options) {\n        const tokens = await app._interface.createServerUserSession(crud.id, options.expiresInMillis ?? 1e3 * 60 * 60 * 24 * 365);\n        return {\n          async getTokens() {\n            return tokens;\n          }\n        };\n      },\n      async setDisplayName(displayName) {\n        return await this.update({ displayName });\n      },\n      async setClientMetadata(metadata) {\n        return await this.update({ clientMetadata: metadata });\n      },\n      async setClientReadOnlyMetadata(metadata) {\n        return await this.update({ clientReadOnlyMetadata: metadata });\n      },\n      async setServerMetadata(metadata) {\n        return await this.update({ serverMetadata: metadata });\n      },\n      async setSelectedTeam(team) {\n        return await this.update({ selectedTeamId: team?.id ?? null });\n      },\n      getConnectedAccount,\n      useConnectedAccount,\n      async getTeam(teamId) {\n        const teams = await this.listTeams();\n        return teams.find((t) => t.id === teamId) ?? null;\n      },\n      useTeam(teamId) {\n        const teams = this.useTeams();\n        return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => {\n          return teams.find((t) => t.id === teamId) ?? null;\n        }, [teams, teamId]);\n      },\n      async listTeams() {\n        const teams = await app._serverTeamsCache.getOrWait([crud.id], \"write-only\");\n        return teams.map((t) => app._serverTeamFromCrud(t));\n      },\n      useTeams() {\n        const teams = useAsyncCache(app._serverTeamsCache, [crud.id], \"user.useTeams()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => teams.map((t) => app._serverTeamFromCrud(t)), [teams]);\n      },\n      createTeam: async (data) => {\n        const team = await app._interface.createServerTeam(serverTeamCreateOptionsToCrud(data), app._getSession());\n        await app._serverTeamsCache.refresh([void 0]);\n        return app._serverTeamFromCrud(team);\n      },\n      leaveTeam: async (team) => {\n        await app._interface.leaveServerTeam({ teamId: team.id, userId: crud.id });\n      },\n      async listPermissions(scope, options) {\n        const recursive = options?.recursive ?? true;\n        const permissions = await app._serverTeamUserPermissionsCache.getOrWait([scope.id, crud.id, recursive], \"write-only\");\n        return permissions.map((crud2) => app._serverPermissionFromCrud(crud2));\n      },\n      usePermissions(scope, options) {\n        const recursive = options?.recursive ?? true;\n        const permissions = useAsyncCache(app._serverTeamUserPermissionsCache, [scope.id, crud.id, recursive], \"user.usePermissions()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => permissions.map((crud2) => app._serverPermissionFromCrud(crud2)), [permissions]);\n      },\n      async getPermission(scope, permissionId) {\n        const permissions = await this.listPermissions(scope);\n        return permissions.find((p) => p.id === permissionId) ?? null;\n      },\n      usePermission(scope, permissionId) {\n        const permissions = this.usePermissions(scope);\n        return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => permissions.find((p) => p.id === permissionId) ?? null, [permissions, permissionId]);\n      },\n      async hasPermission(scope, permissionId) {\n        return await this.getPermission(scope, permissionId) !== null;\n      },\n      async update(update) {\n        await app._updateServerUser(crud.id, update);\n      },\n      async sendVerificationEmail() {\n        return await app._checkFeatureSupport(\"sendVerificationEmail() on ServerUser\", {});\n      },\n      async updatePassword(options) {\n        return await app._checkFeatureSupport(\"updatePassword() on ServerUser\", {});\n      },\n      async getTeamProfile(team) {\n        const result = await app._serverUserTeamProfileCache.getOrWait([team.id, crud.id], \"write-only\");\n        return app._serverEditableTeamProfileFromCrud(result);\n      },\n      useTeamProfile(team) {\n        const result = useAsyncCache(app._serverUserTeamProfileCache, [team.id, crud.id], \"user.useTeamProfile()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => app._serverEditableTeamProfileFromCrud(result), [result]);\n      }\n    };\n  }\n  _serverTeamUserFromCrud(crud) {\n    return {\n      ...this._serverUserFromCrud(crud.user),\n      teamProfile: {\n        displayName: crud.display_name,\n        profileImageUrl: crud.profile_image_url\n      }\n    };\n  }\n  _currentUserFromCrud(crud, session) {\n    const app = this;\n    const currentUser = {\n      ...this._serverUserFromCrud(crud),\n      ...this._createAuth(session),\n      ...this._isInternalProject() ? this._createInternalUserExtra(session) : {}\n    };\n    Object.freeze(currentUser);\n    return currentUser;\n  }\n  _serverTeamFromCrud(crud) {\n    const app = this;\n    return {\n      id: crud.id,\n      displayName: crud.display_name,\n      profileImageUrl: crud.profile_image_url,\n      createdAt: new Date(crud.created_at_millis),\n      async update(update) {\n        await app._interface.updateServerTeam(crud.id, serverTeamUpdateOptionsToCrud(update));\n        await app._serverTeamsCache.refresh([void 0]);\n      },\n      async delete() {\n        await app._interface.deleteServerTeam(crud.id);\n        await app._serverTeamsCache.refresh([void 0]);\n      },\n      async listUsers() {\n        const result = await app._serverTeamMemberProfilesCache.getOrWait([crud.id], \"write-only\");\n        return result.map((u) => app._serverTeamUserFromCrud(u));\n      },\n      useUsers() {\n        const result = useAsyncCache(app._serverTeamMemberProfilesCache, [crud.id], \"team.useUsers()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => result.map((u) => app._serverTeamUserFromCrud(u)), [result]);\n      },\n      async addUser(userId) {\n        await app._interface.addServerUserToTeam({\n          teamId: crud.id,\n          userId\n        });\n        await app._serverTeamMemberProfilesCache.refresh([crud.id]);\n      },\n      async removeUser(userId) {\n        await app._interface.removeServerUserFromTeam({\n          teamId: crud.id,\n          userId\n        });\n        await app._serverTeamMemberProfilesCache.refresh([crud.id]);\n      },\n      async inviteUser(options) {\n        return await app._interface.sendTeamInvitation({\n          teamId: crud.id,\n          email: options.email,\n          session: null,\n          callbackUrl: (0,_utils_url__WEBPACK_IMPORTED_MODULE_23__.constructRedirectUrl)(app.urls.teamInvitation)\n        });\n      }\n    };\n  }\n  async createUser(options) {\n    const crud = await this._interface.createServerUser(serverUserCreateOptionsToCrud(options));\n    await this._refreshUsers();\n    return this._serverUserFromCrud(crud);\n  }\n  async getUser(options) {\n    if (typeof options === \"string\") {\n      const allUsers = await this.listUsers();\n      return allUsers.find((u) => u.id === options) ?? null;\n    } else {\n      this._ensurePersistentTokenStore(options?.tokenStore);\n      const session = this._getSession(options?.tokenStore);\n      const crud = await this._currentServerUserCache.getOrWait([session], \"write-only\");\n      if (crud === null) {\n        switch (options?.or) {\n          case \"redirect\": {\n            await this.redirectToSignIn({ replace: true });\n            break;\n          }\n          case \"throw\": {\n            throw new Error(\"User is not signed in but getUser was called with { or: 'throw' }\");\n          }\n          default: {\n            return null;\n          }\n        }\n      }\n      return crud && this._currentUserFromCrud(crud, session);\n    }\n  }\n  async getServerUser() {\n    console.warn(\"stackServerApp.getServerUser is deprecated; use stackServerApp.getUser instead\");\n    return await this.getUser();\n  }\n  async getServerUserById(userId) {\n    const crud = await this._serverUserCache.getOrWait([userId], \"write-only\");\n    return crud && this._serverUserFromCrud(crud);\n  }\n  useUser(options) {\n    if (typeof options === \"string\") {\n      const users = this.useUsers();\n      return users.find((u) => u.id === options) ?? null;\n    } else {\n      this._ensurePersistentTokenStore(options?.tokenStore);\n      const router = NextNavigation.useRouter();\n      const session = this._getSession(options?.tokenStore);\n      const crud = useAsyncCache(this._currentServerUserCache, [session], \"useUser()\");\n      if (crud === null) {\n        switch (options?.or) {\n          case \"redirect\": {\n            (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_11__.runAsynchronously)(this.redirectToSignIn({ replace: true }));\n            (0,_stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_12__.suspend)();\n            throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.StackAssertionError(\"suspend should never return\");\n          }\n          case \"throw\": {\n            throw new Error(\"User is not signed in but useUser was called with { or: 'throw' }\");\n          }\n          case void 0:\n          case \"return-null\": {\n          }\n        }\n      }\n      return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => {\n        return crud && this._currentUserFromCrud(crud, session);\n      }, [crud, session, options?.or]);\n    }\n  }\n  useUserById(userId) {\n    const crud = useAsyncCache(this._serverUserCache, [userId], \"useUserById()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => {\n      return crud && this._serverUserFromCrud(crud);\n    }, [crud]);\n  }\n  async listUsers() {\n    const crud = await this._serverUsersCache.getOrWait([], \"write-only\");\n    return crud.map((j) => this._serverUserFromCrud(j));\n  }\n  useUsers() {\n    const crud = useAsyncCache(this._serverUsersCache, [], \"useServerUsers()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => {\n      return crud.map((j) => this._serverUserFromCrud(j));\n    }, [crud]);\n  }\n  _serverPermissionFromCrud(crud) {\n    return {\n      id: crud.id\n    };\n  }\n  _serverTeamPermissionDefinitionFromCrud(crud) {\n    return {\n      id: crud.id,\n      description: crud.description,\n      containedPermissionIds: crud.contained_permission_ids\n    };\n  }\n  async listTeams() {\n    const teams = await this._serverTeamsCache.getOrWait([void 0], \"write-only\");\n    return teams.map((t) => this._serverTeamFromCrud(t));\n  }\n  async createTeam(data) {\n    const team = await this._interface.createServerTeam(serverTeamCreateOptionsToCrud(data));\n    await this._serverTeamsCache.refresh([void 0]);\n    return this._serverTeamFromCrud(team);\n  }\n  useTeams() {\n    const teams = useAsyncCache(this._serverTeamsCache, [void 0], \"useServerTeams()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => {\n      return teams.map((t) => this._serverTeamFromCrud(t));\n    }, [teams]);\n  }\n  async getTeam(teamId) {\n    const teams = await this.listTeams();\n    return teams.find((t) => t.id === teamId) ?? null;\n  }\n  useTeam(teamId) {\n    const teams = this.useTeams();\n    return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => {\n      return teams.find((t) => t.id === teamId) ?? null;\n    }, [teams, teamId]);\n  }\n  async _refreshSession(session) {\n    await Promise.all([\n      super._refreshUser(session),\n      this._currentServerUserCache.refresh([session])\n    ]);\n  }\n  async _refreshUsers() {\n    await Promise.all([\n      super._refreshUsers(),\n      this._serverUsersCache.refresh([])\n    ]);\n  }\n};\nvar _StackAdminAppImpl = class extends _StackServerAppImpl {\n  constructor(options) {\n    super({\n      interface: new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.StackAdminInterface({\n        baseUrl: options.baseUrl ?? getDefaultBaseUrl(),\n        projectId: options.projectId ?? getDefaultProjectId(),\n        clientVersion,\n        ...\"projectOwnerSession\" in options ? {\n          projectOwnerSession: options.projectOwnerSession\n        } : {\n          publishableClientKey: options.publishableClientKey ?? getDefaultPublishableClientKey(),\n          secretServerKey: options.secretServerKey ?? getDefaultSecretServerKey(),\n          superSecretAdminKey: options.superSecretAdminKey ?? getDefaultSuperSecretAdminKey()\n        }\n      }),\n      tokenStore: options.tokenStore,\n      urls: options.urls,\n      oauthScopesOnSignIn: options.oauthScopesOnSignIn\n    });\n    this._adminProjectCache = createCache(async () => {\n      return await this._interface.getProject();\n    });\n    this._apiKeysCache = createCache(async () => {\n      return await this._interface.listApiKeys();\n    });\n    this._adminEmailTemplatesCache = createCache(async () => {\n      return await this._interface.listEmailTemplates();\n    });\n    this._adminTeamPermissionDefinitionsCache = createCache(async () => {\n      return await this._interface.listPermissionDefinitions();\n    });\n    this._svixTokenCache = createCache(async () => {\n      return await this._interface.getSvixToken();\n    });\n  }\n  _adminOwnedProjectFromCrud(data, onRefresh) {\n    if (this._tokenStoreInit !== null) {\n      throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.StackAssertionError(\"Owned apps must always have tokenStore === null \\u2014 did you not create this project with app._createOwnedApp()?\");\n      ;\n    }\n    return {\n      ...this._adminProjectFromCrud(data, onRefresh),\n      app: this\n    };\n  }\n  _adminProjectFromCrud(data, onRefresh) {\n    if (data.id !== this.projectId) {\n      throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.StackAssertionError(`The project ID of the provided project JSON (${data.id}) does not match the project ID of the app (${this.projectId})!`);\n    }\n    const app = this;\n    return {\n      id: data.id,\n      displayName: data.display_name,\n      description: data.description,\n      createdAt: new Date(data.created_at_millis),\n      userCount: data.user_count,\n      isProductionMode: data.is_production_mode,\n      config: {\n        id: data.config.id,\n        signUpEnabled: data.config.sign_up_enabled,\n        credentialEnabled: data.config.credential_enabled,\n        magicLinkEnabled: data.config.magic_link_enabled,\n        clientTeamCreationEnabled: data.config.client_team_creation_enabled,\n        clientUserDeletionEnabled: data.config.client_user_deletion_enabled,\n        allowLocalhost: data.config.allow_localhost,\n        oauthProviders: data.config.oauth_providers.map((p) => p.type === \"shared\" ? {\n          id: p.id,\n          enabled: p.enabled,\n          type: \"shared\"\n        } : {\n          id: p.id,\n          enabled: p.enabled,\n          type: \"standard\",\n          clientId: p.client_id ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.throwErr)(\"Client ID is missing\"),\n          clientSecret: p.client_secret ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.throwErr)(\"Client secret is missing\"),\n          facebookConfigId: p.facebook_config_id,\n          microsoftTenantId: p.microsoft_tenant_id\n        }),\n        emailConfig: data.config.email_config.type === \"shared\" ? {\n          type: \"shared\"\n        } : {\n          type: \"standard\",\n          host: data.config.email_config.host ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.throwErr)(\"Email host is missing\"),\n          port: data.config.email_config.port ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.throwErr)(\"Email port is missing\"),\n          username: data.config.email_config.username ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.throwErr)(\"Email username is missing\"),\n          password: data.config.email_config.password ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.throwErr)(\"Email password is missing\"),\n          senderName: data.config.email_config.sender_name ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.throwErr)(\"Email sender name is missing\"),\n          senderEmail: data.config.email_config.sender_email ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_8__.throwErr)(\"Email sender email is missing\")\n        },\n        domains: data.config.domains.map((d) => ({\n          domain: d.domain,\n          handlerPath: d.handler_path\n        })),\n        createTeamOnSignUp: data.config.create_team_on_sign_up,\n        teamCreatorDefaultPermissions: data.config.team_creator_default_permissions,\n        teamMemberDefaultPermissions: data.config.team_member_default_permissions\n      },\n      async update(update) {\n        await app._interface.updateProject(adminProjectUpdateOptionsToCrud(update));\n        await onRefresh();\n      },\n      async delete() {\n        await app._interface.deleteProject();\n      },\n      async getProductionModeErrors() {\n        return (0,_stackframe_stack_shared_dist_helpers_production_mode__WEBPACK_IMPORTED_MODULE_2__.getProductionModeErrors)(data);\n      },\n      useProductionModeErrors() {\n        return (0,_stackframe_stack_shared_dist_helpers_production_mode__WEBPACK_IMPORTED_MODULE_2__.getProductionModeErrors)(data);\n      }\n    };\n  }\n  _adminEmailTemplateFromCrud(data) {\n    return {\n      type: data.type,\n      subject: data.subject,\n      content: data.content,\n      isDefault: data.is_default\n    };\n  }\n  async getProject() {\n    return this._adminProjectFromCrud(\n      await this._adminProjectCache.getOrWait([], \"write-only\"),\n      () => this._refreshProject()\n    );\n  }\n  useProject() {\n    const crud = useAsyncCache(this._adminProjectCache, [], \"useProjectAdmin()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => this._adminProjectFromCrud(\n      crud,\n      () => this._refreshProject()\n    ), [crud]);\n  }\n  _createApiKeyBaseFromCrud(data) {\n    const app = this;\n    return {\n      id: data.id,\n      description: data.description,\n      expiresAt: new Date(data.expires_at_millis),\n      manuallyRevokedAt: data.manually_revoked_at_millis ? new Date(data.manually_revoked_at_millis) : null,\n      createdAt: new Date(data.created_at_millis),\n      isValid() {\n        return this.whyInvalid() === null;\n      },\n      whyInvalid() {\n        if (this.expiresAt.getTime() < Date.now()) return \"expired\";\n        if (this.manuallyRevokedAt) return \"manually-revoked\";\n        return null;\n      },\n      async revoke() {\n        const res = await app._interface.revokeApiKeyById(data.id);\n        await app._refreshApiKeys();\n        return res;\n      }\n    };\n  }\n  _createApiKeyFromCrud(data) {\n    return {\n      ...this._createApiKeyBaseFromCrud(data),\n      publishableClientKey: data.publishable_client_key ? { lastFour: data.publishable_client_key.last_four } : null,\n      secretServerKey: data.secret_server_key ? { lastFour: data.secret_server_key.last_four } : null,\n      superSecretAdminKey: data.super_secret_admin_key ? { lastFour: data.super_secret_admin_key.last_four } : null\n    };\n  }\n  _createApiKeyFirstViewFromCrud(data) {\n    return {\n      ...this._createApiKeyBaseFromCrud(data),\n      publishableClientKey: data.publishable_client_key,\n      secretServerKey: data.secret_server_key,\n      superSecretAdminKey: data.super_secret_admin_key\n    };\n  }\n  async listApiKeys() {\n    const crud = await this._apiKeysCache.getOrWait([], \"write-only\");\n    return crud.map((j) => this._createApiKeyFromCrud(j));\n  }\n  useApiKeys() {\n    const crud = useAsyncCache(this._apiKeysCache, [], \"useApiKeys()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => {\n      return crud.map((j) => this._createApiKeyFromCrud(j));\n    }, [crud]);\n  }\n  async createApiKey(options) {\n    const crud = await this._interface.createApiKey(apiKeyCreateOptionsToCrud(options));\n    await this._refreshApiKeys();\n    return this._createApiKeyFirstViewFromCrud(crud);\n  }\n  useEmailTemplates() {\n    const crud = useAsyncCache(this._adminEmailTemplatesCache, [], \"useEmailTemplates()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => {\n      return crud.map((j) => this._adminEmailTemplateFromCrud(j));\n    }, [crud]);\n  }\n  async listEmailTemplates() {\n    const crud = await this._adminEmailTemplatesCache.getOrWait([], \"write-only\");\n    return crud.map((j) => this._adminEmailTemplateFromCrud(j));\n  }\n  async updateEmailTemplate(type, data) {\n    await this._interface.updateEmailTemplate(type, adminEmailTemplateUpdateOptionsToCrud(data));\n    await this._adminEmailTemplatesCache.refresh([]);\n  }\n  async resetEmailTemplate(type) {\n    await this._interface.resetEmailTemplate(type);\n    await this._adminEmailTemplatesCache.refresh([]);\n  }\n  async createTeamPermissionDefinition(data) {\n    const crud = await this._interface.createPermissionDefinition(serverTeamPermissionDefinitionCreateOptionsToCrud(data));\n    await this._adminTeamPermissionDefinitionsCache.refresh([]);\n    return this._serverTeamPermissionDefinitionFromCrud(crud);\n  }\n  async updateTeamPermissionDefinition(permissionId, data) {\n    await this._interface.updatePermissionDefinition(permissionId, serverTeamPermissionDefinitionUpdateOptionsToCrud(data));\n    await this._adminTeamPermissionDefinitionsCache.refresh([]);\n  }\n  async deleteTeamPermissionDefinition(permissionId) {\n    await this._interface.deletePermissionDefinition(permissionId);\n    await this._adminTeamPermissionDefinitionsCache.refresh([]);\n  }\n  async listTeamPermissionDefinitions() {\n    const crud = await this._adminTeamPermissionDefinitionsCache.getOrWait([], \"write-only\");\n    return crud.map((p) => this._serverTeamPermissionDefinitionFromCrud(p));\n  }\n  useTeamPermissionDefinitions() {\n    const crud = useAsyncCache(this._adminTeamPermissionDefinitionsCache, [], \"usePermissions()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_20__.useMemo)(() => {\n      return crud.map((p) => this._serverTeamPermissionDefinitionFromCrud(p));\n    }, [crud]);\n  }\n  useSvixToken() {\n    const crud = useAsyncCache(this._svixTokenCache, [], \"useSvixToken()\");\n    return crud.token;\n  }\n  async _refreshProject() {\n    await Promise.all([\n      super._refreshProject(),\n      this._adminProjectCache.refresh([])\n    ]);\n  }\n  async _refreshApiKeys() {\n    await this._apiKeysCache.refresh([]);\n  }\n};\nfunction userUpdateOptionsToCrud(options) {\n  return {\n    display_name: options.displayName,\n    client_metadata: options.clientMetadata,\n    selected_team_id: options.selectedTeamId,\n    totp_secret_base64: options.totpMultiFactorSecret != null ? (0,_stackframe_stack_shared_dist_utils_bytes__WEBPACK_IMPORTED_MODULE_4__.encodeBase64)(options.totpMultiFactorSecret) : options.totpMultiFactorSecret,\n    profile_image_url: options.profileImageUrl\n  };\n}\nfunction serverUserUpdateOptionsToCrud(options) {\n  return {\n    display_name: options.displayName,\n    primary_email: options.primaryEmail,\n    client_metadata: options.clientMetadata,\n    client_read_only_metadata: options.clientReadOnlyMetadata,\n    server_metadata: options.serverMetadata,\n    selected_team_id: options.selectedTeamId,\n    primary_email_auth_enabled: options.primaryEmailAuthEnabled,\n    primary_email_verified: options.primaryEmailVerified,\n    password: options.password,\n    profile_image_url: options.profileImageUrl,\n    totp_secret_base64: options.totpMultiFactorSecret != null ? (0,_stackframe_stack_shared_dist_utils_bytes__WEBPACK_IMPORTED_MODULE_4__.encodeBase64)(options.totpMultiFactorSecret) : options.totpMultiFactorSecret\n  };\n}\nfunction serverUserCreateOptionsToCrud(options) {\n  return {\n    primary_email: options.primaryEmail,\n    password: options.password,\n    primary_email_auth_enabled: true,\n    display_name: options.displayName,\n    primary_email_verified: options.primaryEmailVerified\n  };\n}\nfunction adminProjectUpdateOptionsToCrud(options) {\n  return {\n    display_name: options.displayName,\n    description: options.description,\n    is_production_mode: options.isProductionMode,\n    config: {\n      domains: options.config?.domains?.map((d) => ({\n        domain: d.domain,\n        handler_path: d.handlerPath\n      })),\n      oauth_providers: options.config?.oauthProviders?.map((p) => ({\n        id: p.id,\n        enabled: p.enabled,\n        type: p.type,\n        ...p.type === \"standard\" && {\n          client_id: p.clientId,\n          client_secret: p.clientSecret,\n          facebook_config_id: p.facebookConfigId,\n          microsoft_tenant_id: p.microsoftTenantId\n        }\n      })),\n      email_config: options.config?.emailConfig && (options.config.emailConfig.type === \"shared\" ? {\n        type: \"shared\"\n      } : {\n        type: \"standard\",\n        host: options.config.emailConfig.host,\n        port: options.config.emailConfig.port,\n        username: options.config.emailConfig.username,\n        password: options.config.emailConfig.password,\n        sender_name: options.config.emailConfig.senderName,\n        sender_email: options.config.emailConfig.senderEmail\n      }),\n      sign_up_enabled: options.config?.signUpEnabled,\n      credential_enabled: options.config?.credentialEnabled,\n      magic_link_enabled: options.config?.magicLinkEnabled,\n      allow_localhost: options.config?.allowLocalhost,\n      create_team_on_sign_up: options.config?.createTeamOnSignUp,\n      client_team_creation_enabled: options.config?.clientTeamCreationEnabled,\n      client_user_deletion_enabled: options.config?.clientUserDeletionEnabled,\n      team_creator_default_permissions: options.config?.teamCreatorDefaultPermissions,\n      team_member_default_permissions: options.config?.teamMemberDefaultPermissions\n    }\n  };\n}\nfunction adminProjectCreateOptionsToCrud(options) {\n  return {\n    ...adminProjectUpdateOptionsToCrud(options),\n    display_name: options.displayName\n  };\n}\nfunction apiKeyCreateOptionsToCrud(options) {\n  return {\n    description: options.description,\n    expires_at_millis: options.expiresAt.getTime(),\n    has_publishable_client_key: options.hasPublishableClientKey,\n    has_secret_server_key: options.hasSecretServerKey,\n    has_super_secret_admin_key: options.hasSuperSecretAdminKey\n  };\n}\nfunction teamUpdateOptionsToCrud(options) {\n  return {\n    display_name: options.displayName,\n    profile_image_url: options.profileImageUrl\n  };\n}\nfunction teamCreateOptionsToCrud(options) {\n  return {\n    display_name: options.displayName,\n    profile_image_url: options.profileImageUrl\n  };\n}\nfunction serverTeamCreateOptionsToCrud(options) {\n  return teamCreateOptionsToCrud(options);\n}\nfunction serverTeamUpdateOptionsToCrud(options) {\n  return {\n    display_name: options.displayName,\n    profile_image_url: options.profileImageUrl\n  };\n}\nfunction serverTeamPermissionDefinitionCreateOptionsToCrud(options) {\n  return {\n    id: options.id,\n    description: options.description,\n    contained_permission_ids: options.containedPermissionIds\n  };\n}\nfunction serverTeamPermissionDefinitionUpdateOptionsToCrud(options) {\n  return {\n    id: options.id,\n    description: options.description,\n    contained_permission_ids: options.containedPermissionIds\n  };\n}\nvar StackClientApp = _StackClientAppImpl;\nvar StackServerApp = _StackServerAppImpl;\nvar StackAdminApp = _StackAdminAppImpl;\nfunction adminEmailTemplateUpdateOptionsToCrud(options) {\n  return {\n    subject: options.subject,\n    content: options.content\n  };\n}\n\n//# sourceMappingURL=stack-app.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack/dist/esm/providers/stack-provider-client.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/providers/stack-provider-client.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StackContext: () => (/* binding */ StackContext),\n/* harmony export */   StackProviderClient: () => (/* binding */ StackProviderClient),\n/* harmony export */   UserSetter: () => (/* binding */ UserSetter)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_shared_dist_utils_globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/globals */ \"(ssr)/./node_modules/@stackframe/stack-shared/dist/utils/globals.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! .. */ \"(ssr)/./node_modules/@stackframe/stack/dist/esm/lib/hooks.js\");\n/* harmony import */ var _lib_stack_app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/stack-app */ \"(ssr)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__);\n/* __next_internal_client_entry_do_not_use__ StackContext,StackProviderClient,UserSetter auto */ // src/providers/stack-provider-client.tsx\n\n\n\n\n\nvar StackContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createContext(null);\nfunction StackProviderClient(props) {\n    const appJson = props.appJson;\n    const app = _lib_stack_app__WEBPACK_IMPORTED_MODULE_3__.StackClientApp[_lib_stack_app__WEBPACK_IMPORTED_MODULE_3__.stackAppInternalsSymbol].fromClientJson(appJson);\n    _stackframe_stack_shared_dist_utils_globals__WEBPACK_IMPORTED_MODULE_0__.globalVar.__STACK_AUTH__ = {\n        app\n    };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(StackContext.Provider, {\n        value: {\n            app\n        },\n        children: props.children\n    });\n}\nfunction UserSetter(props) {\n    const app = (0,___WEBPACK_IMPORTED_MODULE_4__.useStackApp)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const promise = (async ()=>await props.userJsonPromise)();\n        app[_lib_stack_app__WEBPACK_IMPORTED_MODULE_3__.stackAppInternalsSymbol].setCurrentUser(promise);\n    }, []);\n    return null;\n}\n //# sourceMappingURL=stack-provider-client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2svZGlzdC9lc20vcHJvdmlkZXJzL3N0YWNrLXByb3ZpZGVyLWNsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O2lHQUdBLDBDQUEwQjtBQUNPO0FBQ0w7QUFDaUI7QUFnQnpDO0FBWkQ7QUFFSSxJQUFBTyw2QkFBU04sMERBR2I7QUFDRCxTQUFNUSxvQkFBZ0JDLEtBQUE7SUFDdEIsTUFBTUMsVUFBTUQsTUFBQUMsT0FBZTtJQUUzQixNQUFBQyxNQUFVUiwwREFBQSxDQUFpQkMsbUVBQUFBLENBQU0sQ0FBQVEsY0FBQSxDQUFBRjtJQUVqQ1gsa0ZBQUFBLENBQ0VjLGNBQUEsR0FBQztRQUFBRjtJQUFBO0lBSUwsdUJBQUFOLHNEQUFBQSxDQUFBQyxhQUFBUSxRQUFBO1FBQUFDLE9BQUE7WUFBQUo7UUFBQTtRQUFBSyxVQUFBUCxNQUFBTyxRQUFBO0lBQUE7QUFFTztBQUNMLFNBQU1DLFdBQU1SLEtBQUE7SUFDWixNQUFBRSxNQUFVVCw4Q0FBQUE7SUFDUkQsZ0RBQUFBLENBQU07UUFDTixNQUFJaUIsVUFBQSxXQUF5QixNQUFBVCxNQUFBVSxlQUFzQjtRQUNyRFIsR0FBSyxDQUFBUCxtRUFBQUEsQ0FBQSxDQUFBZ0IsY0FBQSxDQUFBRjtJQUNMO0lBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZXJwbEFJY2UvLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9zdGFjay1wcm92aWRlci1jbGllbnQudHN4P2I1M2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IEN1cnJlbnRVc2VyQ3J1ZCB9IGZyb20gXCJAc3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9pbnRlcmZhY2UvY3J1ZC9jdXJyZW50LXVzZXJcIjtcbmltcG9ydCB7IGdsb2JhbFZhciB9IGZyb20gXCJAc3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9nbG9iYWxzXCI7XG5pbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VTdGFja0FwcCB9IGZyb20gXCIuLlwiO1xuaW1wb3J0IHsgU3RhY2tDbGllbnRBcHAsIFN0YWNrQ2xpZW50QXBwSnNvbiwgc3RhY2tBcHBJbnRlcm5hbHNTeW1ib2wgfSBmcm9tIFwiLi4vbGliL3N0YWNrLWFwcFwiO1xuXG5leHBvcnQgY29uc3QgU3RhY2tDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dDxudWxsIHwge1xuICBhcHA6IFN0YWNrQ2xpZW50QXBwPHRydWU+LFxufT4obnVsbCk7XG5cbmV4cG9ydCBmdW5jdGlvbiBTdGFja1Byb3ZpZGVyQ2xpZW50KHByb3BzOiB7XG4gIGFwcEpzb246IFN0YWNrQ2xpZW50QXBwSnNvbjx0cnVlLCBzdHJpbmc+LFxuICBjaGlsZHJlbj86IFJlYWN0LlJlYWN0Tm9kZSxcbn0pIHtcbiAgY29uc3QgYXBwSnNvbiA9IHByb3BzLmFwcEpzb247XG4gIGNvbnN0IGFwcCA9IFN0YWNrQ2xpZW50QXBwW3N0YWNrQXBwSW50ZXJuYWxzU3ltYm9sXS5mcm9tQ2xpZW50SnNvbihhcHBKc29uKTtcblxuICBnbG9iYWxWYXIuX19TVEFDS19BVVRIX18gPSB7IGFwcCB9O1xuXG4gIHJldHVybiAoXG4gICAgPFN0YWNrQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17eyBhcHAgfX0+XG4gICAgICB7cHJvcHMuY2hpbGRyZW59XG4gICAgPC9TdGFja0NvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBVc2VyU2V0dGVyKHByb3BzOiB7IHVzZXJKc29uUHJvbWlzZTogUHJvbWlzZTxDdXJyZW50VXNlckNydWRbJ0NsaWVudCddWydSZWFkJ10gfCBudWxsPiB9KSB7XG4gIGNvbnN0IGFwcCA9IHVzZVN0YWNrQXBwKCk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgcHJvbWlzZSA9IChhc3luYyAoKSA9PiBhd2FpdCBwcm9wcy51c2VySnNvblByb21pc2UpKCk7ICAvLyB0aGVyZSBpcyBhIE5leHQuanMgYnVnIHdoZXJlIFByb21pc2VzIHBhc3NlZCBieSBzZXJ2ZXIgY29tcG9uZW50cyByZXR1cm4gYHVuZGVmaW5lZGAgYXMgdGhlaXIgYHRoZW5gIHZhbHVlLCBzbyB3cmFwIGl0IGluIGEgbm9ybWFsIHByb21pc2VcbiAgICBhcHBbc3RhY2tBcHBJbnRlcm5hbHNTeW1ib2xdLnNldEN1cnJlbnRVc2VyKHByb21pc2UpO1xuICB9LCBbXSk7XG4gIHJldHVybiBudWxsO1xufVxuIl0sIm5hbWVzIjpbImdsb2JhbFZhciIsIlJlYWN0IiwidXNlRWZmZWN0IiwidXNlU3RhY2tBcHAiLCJTdGFja0NsaWVudEFwcCIsInN0YWNrQXBwSW50ZXJuYWxzU3ltYm9sIiwianN4IiwiU3RhY2tDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsIlN0YWNrUHJvdmlkZXJDbGllbnQiLCJwcm9wcyIsImFwcEpzb24iLCJhcHAiLCJmcm9tQ2xpZW50SnNvbiIsIl9fU1RBQ0tfQVVUSF9fIiwiUHJvdmlkZXIiLCJ2YWx1ZSIsImNoaWxkcmVuIiwiVXNlclNldHRlciIsInByb21pc2UiLCJ1c2VySnNvblByb21pc2UiLCJzZXRDdXJyZW50VXNlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack/dist/esm/providers/stack-provider-client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@stackframe/stack/dist/esm/utils/url.js":
/*!**************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/utils/url.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   autoRedirect: () => (/* binding */ autoRedirect),\n/* harmony export */   constructRedirectUrl: () => (/* binding */ constructRedirectUrl)\n/* harmony export */ });\n// src/utils/url.tsx\nfunction autoRedirect() {\n  const url = new URL(window.location.href);\n  const redirectUrl = url.searchParams.get(\"auto-redirect-url\");\n  if (redirectUrl) {\n    const urlObject = new URL(redirectUrl);\n    if (urlObject.origin !== window.location.origin) {\n      throw new Error(\"auto-redirect-url is not same origin (\" + urlObject.origin + \" !== \" + window.location.origin + \")\");\n    }\n    url.searchParams.delete(\"auto-redirect-url\");\n    window.location.replace(urlObject.href);\n  }\n}\nfunction constructRedirectUrl(redirectUrl) {\n  const retainedQueryParams = [\"after_auth_return_to\"];\n  const currentUrl = new URL(window.location.href);\n  const url = redirectUrl ? new URL(redirectUrl, window.location.href) : new URL(window.location.href);\n  for (const param of retainedQueryParams) {\n    if (currentUrl.searchParams.has(param)) {\n      url.searchParams.set(param, currentUrl.searchParams.get(param));\n    }\n  }\n  url.hash = \"\";\n  return url.toString();\n}\n\n//# sourceMappingURL=url.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHN0YWNrZnJhbWUvc3RhY2svZGlzdC9lc20vdXRpbHMvdXJsLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2VycGxBSWNlLy4vbm9kZV9tb2R1bGVzL0BzdGFja2ZyYW1lL3N0YWNrL2Rpc3QvZXNtL3V0aWxzL3VybC5qcz81NWQ3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91dGlscy91cmwudHN4XG5mdW5jdGlvbiBhdXRvUmVkaXJlY3QoKSB7XG4gIGNvbnN0IHVybCA9IG5ldyBVUkwod2luZG93LmxvY2F0aW9uLmhyZWYpO1xuICBjb25zdCByZWRpcmVjdFVybCA9IHVybC5zZWFyY2hQYXJhbXMuZ2V0KFwiYXV0by1yZWRpcmVjdC11cmxcIik7XG4gIGlmIChyZWRpcmVjdFVybCkge1xuICAgIGNvbnN0IHVybE9iamVjdCA9IG5ldyBVUkwocmVkaXJlY3RVcmwpO1xuICAgIGlmICh1cmxPYmplY3Qub3JpZ2luICE9PSB3aW5kb3cubG9jYXRpb24ub3JpZ2luKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJhdXRvLXJlZGlyZWN0LXVybCBpcyBub3Qgc2FtZSBvcmlnaW4gKFwiICsgdXJsT2JqZWN0Lm9yaWdpbiArIFwiICE9PSBcIiArIHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4gKyBcIilcIik7XG4gICAgfVxuICAgIHVybC5zZWFyY2hQYXJhbXMuZGVsZXRlKFwiYXV0by1yZWRpcmVjdC11cmxcIik7XG4gICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UodXJsT2JqZWN0LmhyZWYpO1xuICB9XG59XG5mdW5jdGlvbiBjb25zdHJ1Y3RSZWRpcmVjdFVybChyZWRpcmVjdFVybCkge1xuICBjb25zdCByZXRhaW5lZFF1ZXJ5UGFyYW1zID0gW1wiYWZ0ZXJfYXV0aF9yZXR1cm5fdG9cIl07XG4gIGNvbnN0IGN1cnJlbnRVcmwgPSBuZXcgVVJMKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcbiAgY29uc3QgdXJsID0gcmVkaXJlY3RVcmwgPyBuZXcgVVJMKHJlZGlyZWN0VXJsLCB3aW5kb3cubG9jYXRpb24uaHJlZikgOiBuZXcgVVJMKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcbiAgZm9yIChjb25zdCBwYXJhbSBvZiByZXRhaW5lZFF1ZXJ5UGFyYW1zKSB7XG4gICAgaWYgKGN1cnJlbnRVcmwuc2VhcmNoUGFyYW1zLmhhcyhwYXJhbSkpIHtcbiAgICAgIHVybC5zZWFyY2hQYXJhbXMuc2V0KHBhcmFtLCBjdXJyZW50VXJsLnNlYXJjaFBhcmFtcy5nZXQocGFyYW0pKTtcbiAgICB9XG4gIH1cbiAgdXJsLmhhc2ggPSBcIlwiO1xuICByZXR1cm4gdXJsLnRvU3RyaW5nKCk7XG59XG5leHBvcnQge1xuICBhdXRvUmVkaXJlY3QsXG4gIGNvbnN0cnVjdFJlZGlyZWN0VXJsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXJsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@stackframe/stack/dist/esm/utils/url.js\n");

/***/ })

};
;